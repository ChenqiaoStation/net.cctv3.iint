[
    {
        "id": 1,
        "title": "欢迎使用 Typecho",
        "slug": "start",
        "createTime": "2021-03-12 11:48:00",
        "updateTime": "2021-04-14 11:04:35",
        "message": "<!--markdown-->::(1@Baidu.png)如果您看到这篇文章，表示您的 blog 已经安装成功。",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 15,
        "lookCount": 39,
        "likeCount": 0
    },
    {
        "id": 2,
        "title": "留言",
        "slug": "NotePad",
        "createTime": "2021-03-12 11:48:00",
        "updateTime": "2021-03-12 12:33:06",
        "message": "<!--markdown-->本页面由 Typecho 创建, 这只是个测试页面.",
        "order": 1,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 6,
        "lookCount": 255,
        "likeCount": 0
    },
    {
        "id": 3,
        "title": "链接",
        "slug": "Links",
        "createTime": "2021-03-12 12:33:24",
        "updateTime": "2021-03-12 12:33:24",
        "message": "<!--markdown-->",
        "order": 2,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 329,
        "likeCount": 0
    },
    {
        "id": 4,
        "title": "2021 欧洲杯",
        "slug": "Ouzhoubei2021",
        "createTime": "2021-03-12 12:33:00",
        "updateTime": "2021-07-03 22:42:24",
        "message": "<!--markdown--># 前言\r\n作为一名伪球迷，比较经典的还是值得记录一下的，免得多年以后找不到了 ::(1@Wechat.png)。\r\n\r\n# 1/8 决赛\r\n## 威尔士 0 : 4 丹麦\r\n### 比赛集锦\r\n\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiA1.mp4\" /}\r\n\r\n## 意大利 2 : 1 奥地利\r\n### 比赛集锦\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiB1.mp4\" /}\r\n\r\n### 经典瞬间\r\n> 0角度头球攻门，越位了 ::(1@Baidu.png)。\r\n\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiB2.mp4\" /}\r\n\r\n## 荷兰 0 : 2 捷克\r\n### 比赛集锦\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiC1.mp4\" /}\r\n\r\n### 经典瞬间\r\n> 手球破坏单刀，你当现在的 var 技术是吃干饭的吗 ::(1@Baidu.png)。不过学了一个新单词，potential → 潜在的，Potential Red Card Review → 潜在的红牌的回放 ::(17@Baidu.png)。\r\n\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiC2.mp4\" /}\r\n\r\n## 比利时 1 : 0 葡萄牙\r\n### 比赛集锦\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiD1.mp4\" /}\r\n\r\n## 克罗地亚 3 : 5 西班牙\r\n### 比赛集锦\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiE1.mp4\" /}\r\n\r\n## 法国 3+4 : 3+5 瑞士\r\n### 比赛集锦\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiF1.mp4\" /}\r\n\r\n### 精彩瞬间\r\n这个圆月弯刀真是牛皮 ::(11@Wechat.png)，但他的舞蹈更牛皮 ::(6@Wechat.png)。\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiF2.mp4\" /}\r\n\r\n这个判罚涨知识了，有点儿意思，但是点球没进 ::(1@Baidu.png)。\r\n{dplayer src=\"http://www.cctv3.net/video/2021OuzhoubeiF3.mp4\" /}\r\n\r\n# 1/4 决赛\r\n## 瑞士 1+1 : 1+3 西班牙\r\n\r\n## 比利时 1 : 2 意大利\r\n\r\n",
        "order": 3,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 85,
        "likeCount": 0
    },
    {
        "id": 5,
        "title": "旅游",
        "slug": "Trips",
        "createTime": "2021-03-13 12:55:00",
        "updateTime": "2021-03-20 17:49:33",
        "message": "<!--markdown-->",
        "order": 4,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 267,
        "likeCount": 0
    },
    {
        "id": 6,
        "title": "关于",
        "slug": "i",
        "createTime": "2021-03-13 12:55:00",
        "updateTime": "2021-04-05 22:49:44",
        "message": "{message type=\"success\"}\r\n天下滔滔，祸乱未已:9@Wechat.png:。吏治人心，毫无更改。军政战事，日崇虚伪。非得二三君子，倡之以诚朴，道之以廉耻。则江河日下，不知所届，若自习勤劳，犹可稍求一心之安。\r\n{/message}\r\n🐷\r\n## 博主\r\n1995年属`猪`的，2018年毕业于 `聊城大学` 软件工程专业。最新坐标: 深圳市~~南山区~~龙岗区，技术学的比较杂，SSH、Spring Boot、MySQL、Redis 都懂点儿 ::(1@Baidu.png)，目前专注于 `React Native`开发 ::(17@Baidu.png)。\r\n\r\n### 小爱好\r\n\r\n| 标题 | 内容 |\r\n| :-----| :----|\r\n|喜欢的节目|等着我 开讲啦 今日说法 百家讲坛 航拍中国 ::(14@Baidu.png)|\r\n|喜欢读的书|曾国藩家书 明朝十六帝 大清十二帝</br>人一生要去的一百个地方 今生要去的一百个风情小镇 ::(25@Baidu.png)|\r\n|喜欢的历史人物|方孝孺 赵匡胤 夏完淳 ::(18@Wechat.png)\r\n|喜欢的大学|聊城大学 ( 母校 ::(94@Alibaba.png) )</br>西安交通大学 中山大学 北京航空航天大学 东北大学 江南大学 贵州大学 ::(9@Wechat.png)|\r\n\n已知集合 $A=\\{(x,y)|x^2+y^2=1\\}$ ，$B=\\{(x,y)|y=x\\}$，则 $A{\\,\\raisebox{0.8mm}{\\scaleobj{0.55}{\\bigcap}}\\,}B$ 中元素的个数为\n\r\n# 职业\r\n不知不觉，毕业两年多了，弹指一挥间啊，其实到现在我也无论如何没想到今天会成为一名前端狗 ::(7@Baidu.png)。因为在大学的时候我一直视艺术如粪土，而且当时都是 `jQuery` 直接操作 `DOM`，`AJAX` 弄起来也很麻烦，当时也不懂 flex 布局，各种框架 `layUI easyUI Bootstrap` 用起来也很麻烦。所以把 `Android` 和 `Java` 作为主线发展 ::(1@Baidu.png)。\r\n\r\n然后很长时间没有关注前端的技术，然后 2015年 到 2017年 React 已经发展成熟了 ::(1@Alibaba.png)。\r\n\r\n2017年9月份，大四实习的时候接触了React Native，当时一个月一千五百块钱的工资，但是\r\n\r\n``` java\r\n1. 我本身就喜欢移动开发\r\n2. 当时我感觉 React Native 应该是将来跨端开发的一个趋势，百度资料不是很多，会的人也就不多。\r\n```\r\n\r\n所以实习到了第二年的一月份，起码把 `React Native` 基本技术学到手了。~~后来知道 `React` 写 `Web`，也就有了今天这个博客的诞生~~。\r\n\r\n{message type=\"info\"}考研{/message}\r\n\r\n初步计划 `30岁` 之前还是以技术的积累为主，过了三十岁准备考研，去公立高等学校当老师，一般会去B区的学校，去祖国需要的地方去。把我所学的，所经历的都传授给渴望知识的大山的孩子们。\r\n\r\n{message type=\"info\"}博客{/message}\r\n\r\n从毕业到现在经历了四次改版\r\n\r\n| 时间 | 网站结构 | 废除原因 |\r\n| :-----| :---- | :---- |\r\n| 2018.06 - 2018.10 | HTML & SSH | 1. Copy 的别人的静态页面，改的 JSP Servlet，CSS 合并麻烦，样式出问题了无法定位 |\r\n|2018.10 - 2020.12|HTML & PHP|用的框架 Typecho，使用的付费模板，问题基本差不多 1. 样式出问题了不太好定位</br> 2. 自己想写新的页面或者组件，PHP 又不熟，写进去又和原来的样式有很多冲突</br> 3. Markdown 没法实现富文本，这样儿我的丰富情感就没发在文章中表达::(1@Baidu.png)</br> 4. 之前用 Markdown 写的文章，质量也不是很高，灌水内容据多::(33@Baidu.png)|\r\n|2020.12 - 2021.02|React & Spring Boot|1. 技术选型错误，用的客户端渲染导致百度无法爬虫|\r\n|2021.03 - 至今|HTML & PHP|1. 暂时没想着废弃 ::(86@Alibaba.png)，毕竟 PHP 是世界上最好的语言 ::(1@Wechat.png)|\r\n\r\n# 最近一年的计划\r\n{x} 1. 复习高等数、线性代数、数据结构、算法、计算机网络、操作系统这几门专业课 ::(26@Alibaba.png)\r\n{ } 2. 高级 Android framework 层的一些研究 ::(3@Wechat.png)\r\n{ } 3. 高级 Web 开发的一些研究 ::(3@Wechat.png)\r\n{x} 4. 攒钱 攒钱 攒钱 ::(97@Alibaba.png)\r\n\r\n ~~但是由于要换工作，所以最近一个月以梳理 Web 前端整个结构和 Android 的结构为主。~~ \r\n\r\n说起来这也是我现在感觉遗憾的地方，就是大学的时候，这些专业课基础知识掌握的并不扎实，虽然不太影响平时应用的开发，但是确实对于高级开发一些底层的东西就显得知识储备不足了，所以复习这些专业课，既可以准备考研，也可以提升技术。我感觉弄懂一个通讯协议，一个算法远比在 CSDN 漫无目的瞎逛强一百倍。\r\n\r\n| 计划 | 计划 |进度|\r\n| :-----| :---- | :----|\r\n|高等数学|1. 浙江大学 · 苏德矿的微积分视频 </br> 2. 燎原高数 · 卷子 </br> 3. 印刷的辅导资料 </br> 4. 考研真题||\r\n|线性代数|1. 电子科技大学 · 黄廷祝线性代数视频</br>2. 燎原高数 · 卷子</br>|1. 线性代数视频2. 燎原高数 · 卷子 · 行列式、矩阵及其运算、矩阵初等变换与线性方程组 ( 2021.01 )|\r\n|数据结构和算法|1. 上海交通大学 · 俞勇数据结构视频</br>2. 算法导论 · 第四版</br>3. 数据结构考研试题精析 1800 题</br>4. OJ 刷题 Accept 200题||\t\r\n|计算机网络|1. 杭州电子科技大学 · 王相林计算机网络视频</br>2. 计算机网络 · 自顶向下方法||\t\r\n|操作系统|1. 哈尔滨工业大学 · 孙志岗操作系统视频||\r\n\t\r\n# 愿望\r\n{x} 1. 爸爸妈妈身体健康，以后想一年能带他们出去旅游一次，逢年多节常回家看看 ::(99@Alibaba.png)\r\n{ } 2. 考研 ( 意向: 西安交通大学 > 北京航空航天大学 > 东北大学 > 江南大学 > 贵州大学 ) ::(3@Alibaba.png)\r\n{ } 3. 30岁 之前能进一线大厂 ::(8@Wechat.png)\r\n{x} 4. 30岁 以后去西部教书育人 ::(12@Wechat.png)\r\n\r\n{message type=\"error\"}5. 伟大的心理学家佛洛依德曾经说过，每个人生来都是孤独的，所以他们渴望与人沟通与交流，所以要找一个能相互欣赏、相互包容、执手偕老的另一半 ::(27@Alibaba.png){/message}\r\n",
        "order": 5,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 6,
        "lookCount": 671,
        "likeCount": 3
    },
    {
        "id": 7,
        "title": "React Native 常见问题以及解决方案 ",
        "slug": "ReactNativeErrors",
        "createTime": "2021-03-15 14:23:00",
        "updateTime": "2021-07-29 10:51:33",
        "message": "<!--markdown--># 前言\r\n`React Native` 三方组件的坑很多，主要是 `0.60` 以后 `iOS` 的 `pod install` 总是各种报错，各种超时。还有的三方组件开启了坑爹的 `Android X`。不光这些，还有 `iOS` 各种库找不到，`JS` 也是各种报错。结合我自己在这个过程中踩的坑，特此开贴记录一下 ::(7@Baidu.png)。\r\n\r\n> 一些常用命令以及组件的配置等我就不写新的文章了，简单在这里统一阐述一下，如果配置比较复杂或者设计修改源码的东西，那么会另开新的文章专门记录 ::(43@Alibaba.png)。\r\n\r\n# 常用命令\r\n## 清除 npm 缓存\r\n\r\n![kmg9wtyd.png](http://www.cctv3.net/usr/uploads/2021/03/1049563270.png)\r\n{message type=\"error\"}一般来说，只要是删除了 node_modules 了，然后重新安装 & 重启 npm 还报错，尤其报的错误还跟之前一行，那十有八九就是缓存搞的鬼 ::(3@Wechat.png)。{/message}\r\n\r\n``` shell\r\nnpm start -- --reset-cache\r\n```\r\n\r\n# 三方组件\r\n## react-navigation\r\n之前我记得 `3.x` 版本的是可以正常运行的，但是我装上去之后竟然还要装坑爹的 `react-native-screens`。这个东西是 `Android X` 写的 ::(7@Baidu.png)，所以 `3.13.0` 版本不行，现在用的版本是 `3.0.9`。\r\n\r\n\r\n{message type=\"warning\"}虽然在 Node Modules 里面也下载了 react-native-screens，但是在 Android 里面没有被作为 modules 引入 ::(14@Wechat.png)。{/message}\r\n\r\n## 报错\r\n\r\n> More than one file was found with OS independent path 'lib/x86/libc++_shared.so'\r\n\r\n``` java\r\n* What went wrong:\r\nExecution failed for task ':app:mergeDebugNativeLibs'.\r\n> A failure occurred while executing com.android.build.gradle.internal.tasks.Workers$ActionFacade\r\n   > More than one file was found with OS independent path 'lib/x86/libc++_shared.so'\r\n\r\n* Try:\r\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\r\n\r\n* Get more help at https://help.gradle.org\r\n\r\nBUILD FAILED in 25s\r\n182 actionable tasks: 53 executed, 129 up-to-date\r\n```\r\n\r\n{message type=\"success\"}build.gradle 里面添加一下内容{/message}\r\n\r\n``` java\r\npackagingOptions {\r\n    pickFirst 'lib/x86/libc++_shared.so'\r\n    pickFirst 'lib/arm64-v8a/libc++_shared.so'\r\n    pickFirst 'lib/armeabi-v7a/libc++_shared.so'\r\n    pickFirst 'lib/x86_64/libc++_shared.so'\r\n}\r\n```\r\n![kmkgqsl1.png](http://www.cctv3.net/usr/uploads/2021/03/3432911530.png)\r\n\r\n> Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\r\n\r\n人家报错都说了，容易造成内存泄露。 ::(7@Baidu.png)\r\n\r\n{message type=\"success\"}在组件卸载的时候，移除事件监听，计时器等，并重置 state 的状态。{/message}\r\n\r\n\r\n``` javascript\r\ncomponentWillUnmount() {\r\n  clearInterval(this.timer);\r\n  DeviceEventEmitter.removeListener(\"ConnectDevice\");\r\n  DeviceEventEmitter.removeListener(\"DeviceDataChanged\");\r\n  this.setState = (state, callback) => {\r\n    return;\r\n  };\r\n}\r\n```\r\n\r\n# 其他问题\r\n## 切换项目的分支报错\r\n``` java\r\nCould not determine the dependencies of task ':app:compileDebugJavaWithJavac'.\r\n> SDK location not found. Define location with an ANDROID_SDK_ROOT environment variable or by setting the sdk.dir path in your project's local properties file at '/Users/renpho/*/android/local.properties'.\r\n```\r\n开始也没搞懂怎么回事儿，后来才发现切换分支的时候这个文件被莫名其妙的删除了，没了 ::(27@Wechat.png)。\r\n\r\n![kpm1bwu4.png](http://www.cctv3.net/usr/uploads/2021/06/2654475112.png)\r\n\r\n\r\n## fontWeight  不能精确显示 100-900\r\n\r\n{message type=\"warning\"}这个与系统字体有关，默认的系统字体 iOS 好像是6个梯度，但是 Android 只支持3个梯度。{/message}\r\n\r\n具体可以参考 https://fonts.google.com/specimen/Roboto。\r\n\r\n## Alert.alert(  ) 的弹出框点击空白区域就消失了\r\n\r\n{message type=\"success\"}这就是 FaceBook 团队想的周到的地方，人家提前都想好了，直接加一个参数就搞定 ::(11@Wechat.png)。{/message}\r\n\r\n``` javascript\r\nAlert.alert(\r\n  \"Hello world\",\r\n  \"Hello World\",\r\n  [{ text: \"Confirm\", onPress: () => {} }],\r\n  { cancelable: false }\r\n);\r\n```\r\n# 编译报错\r\n## Path \"build/[package]/intermediaries/compiled_local_resources/debug/out\" is not a readable directory ::(3@Alibaba.png)。\r\n\r\n{message type=\"error\"}Path \"build/[package]/intermediaries/compiled_local_resources/debug/out\" is not a readable directory.{/message}\r\n\r\n![konv7o0p.png](http://www.cctv3.net/usr/uploads/2021/05/2623418084.png)\r\n\r\n然后重新编译就可以了 ::(11@Wechat.png)。\r\n\r\n#pod\r\n换了台电脑 `pod install` 报错 ::(17@Wechat.png)。\r\n\r\n``` shell\r\n[!] Unable to find a specification for `UdeskSDK`\r\n\r\nYou have either:\r\n * out-of-date source repos which you can update with `pod repo update` or with `pod install --repo-update`.\r\n * mistyped the name or version.\r\n * not added the source repo that hosts the Podspec to your Podfile.\r\n\r\n```\r\n\r\n{message type=\"success|info|warning|error（选择其一）\"}pod repo update{/message}\r\n\r\n``` shell\r\npod repo update\r\nUpdating spec repo `aliyun`\r\nUpdating spec repo `cocoapods`\r\n  $ /usr/bin/git -C /Users/i/.cocoapods/repos/cocoapods fetch origin --progress\r\n  remote: Enumerating objects: 5043431, done.\r\n  remote: Counting objects: 100% (2607/2607), done.\r\n  remote: Compressing objects: 100% (1451/1451), done.\r\n  remote: Total 5043431 (delta 1151), reused 2284 (delta 1039), pack-reused 5040824\r\n  Receiving objects: 100% (5043431/5043431), 869.61 MiB | 6.91 MiB/s, done.\r\n  Resolving deltas: 100% (3197569/3197569), done.\r\n```\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 3,
        "lookCount": 284,
        "likeCount": 0
    },
    {
        "id": 8,
        "title": "2021年中国大学院校竞争力排行榜: 前800强",
        "slug": "2021University800s",
        "createTime": "2021-03-14 00:53:00",
        "updateTime": "2021-05-31 03:44:04",
        "message": "<!--markdown-->> 2021年3月，金平果连续第十八次隆重推出《中国大学及学科专业评价报告（2021-2022）》，将陆续发布中国大学及高职院校各类排行榜单共计1500多个。\r\n\r\n聊城大学逸夫图书馆前来镇楼 ::(1@Baidu.png)。\r\n![kpbh6wg6.png](http://www.cctv3.net/usr/uploads/2021/05/66426.png)\r\n\r\n“金平果排行榜”由杭州电子科技大学中国科教评价研究院、浙江高等教育研究院和高教强省发展战略与评价研究中心、武汉大学中国科学评价研究中心联合中国科教评价网（www.nseac.com）研发，包括中国大学、世界大学、研究生教育和学术期刊四大评价报告。\r\n     \r\n“金平果”2021大学评价以教育部最新公布的《2020年全国高等学校名单》为依据，结合学校的实际招生情况，最终确定本次大学评价的对象为2727所高校（不含中国港、澳、台地区），其中普通本科院校1230所、高职院校1488所、中外合作办学9所。进入普通本科院校学科专业评价的对象为12个学科门类、92个专业类和435个本科专业。\r\n\r\n|排名|学校名称|省份|地区排名|类型|类型排名|一流大学|一流学科|\r\n|:----|:----|:----|:----|:----|:----|:----|:----|\r\n|1|清华大学|北京市|1|理工|1|是|是|\r\n|2|北京大学|北京市|2|综合|1|是|是|\r\n|3|浙江大学|浙江省|1|综合|2|是|是|\r\n|4|上海交通大学|上海市|1|理工|2|是|是|\r\n|5|武汉大学|湖北省|1|综合|3|是|是|\r\n|6|复旦大学|上海市|2|综合|4|是|是|\r\n|7|南京大学|江苏省|1|综合|5|是|是|\r\n|8|华中科技大学|湖北省|2|理工|3|是|是|\r\n|9|吉林大学|吉林省|1|综合|6|是|是|\r\n|10|中国科学技术大学|安徽省|1|理工|4|是|是|\r\n|11|中山大学|广东省|1|综合|7|是|是|\r\n|12|四川大学|四川省|1|综合|8|是|是|\r\n|13|哈尔滨工业大学|黑龙江省|1|理工|5|是|是|\r\n|14|东南大学|江苏省|2|理工|6|是|是|\r\n|15|中国人民大学|北京市|3|文法|1|是|是|\r\n|16|西安交通大学|陕西省|1|理工|7|是|是|\r\n|17|中国科学院大学|北京市|4|综合|9|否|是|\r\n|18|国防科技大学|湖南省|1|理工|8|是|是|\r\n|19|同济大学|上海市|3|理工|9|是|是|\r\n|20|山东大学|山东省|1|综合|10|是|是|\r\n|21|中南大学|湖南省|2|理工|10|是|是|\r\n|22|北京师范大学|北京市|5|师范|1|是|是|\r\n|23|华南理工大学|广东省|2|理工|11|是|是|\r\n|24|北京航空航天大学|北京市|6|理工|12|是|是|\r\n|25|华东师范大学|上海市|4|师范|2|是|是|\r\n|26|天津大学|天津市|1|理工|13|是|是|\r\n|27|北京理工大学|北京市|7|理工|14|是|是|\r\n|28|南开大学|天津市|2|综合|11|是|是|\r\n|29|大连理工大学|辽宁省|1|理工|15|是|是|\r\n|30|重庆大学|重庆市|1|理工|16|是|是|\r\n|31|厦门大学|福建省|1|综合|12|是|是|\r\n|32|电子科技大学|四川省|2|理工|17|是|是|\r\n|33|中国农业大学|北京市|8|农林|1|是|是|\r\n|34|西北工业大学|陕西省|2|理工|18|是|是|\r\n|35|苏州大学|江苏省|3|综合|13|否|是|\r\n|36|东北大学|辽宁省|2|理工|19|是|是|\r\n|37|南京航空航天大学|江苏省|4|理工|20|否|是|\r\n|38|湖南大学|湖南省|3|理工|21|是|是|\r\n|39|郑州大学|河南省|1|综合|14|是|是|\r\n|40|上海大学|上海市|5|综合|15|否|是|\r\n|41|南京理工大学|江苏省|5|理工|22|否|是|\r\n|42|西南交通大学|四川省|3|理工|23|否|是|\r\n|43|兰州大学|甘肃省|1|综合|16|是|是|\r\n|44|华东理工大学|上海市|6|理工|24|否|是|\r\n|45|武汉理工大学|湖北省|3|理工|25|否|是|\r\n|46|北京科技大学|北京市|9|理工|26|否|是|\r\n|47|北京交通大学|北京市|10|理工|27|否|是|\r\n|48|暨南大学|广东省|3|综合|17|否|是|\r\n|49|西安电子科技大学|陕西省|3|理工|28|否|是|\r\n|50|西南大学|重庆市|2|综合|18|否|是|\r\n|51|河海大学|江苏省|6|理工|29|否|是|\r\n|52|南京师范大学|江苏省|7|师范|3|否|是|\r\n|53|南昌大学|江西省|1|综合|19|否|是|\r\n|54|华中师范大学|湖北省|4|师范|4|否|是|\r\n|55|合肥工业大学|安徽省|2|理工|30|否|是|\r\n|56|江南大学|江苏省|8|综合|20|否|是|\r\n|57|华中农业大学|湖北省|5|农林|2|否|是|\r\n|58|北京工业大学|北京市|11|理工|31|否|是|\r\n|59|浙江工业大学|浙江省|2|理工|32|否|否|\r\n|60|南京农业大学|江苏省|9|农林|3|否|是|\r\n|61|中国海洋大学|山东省|2|理工|33|是|是|\r\n|62|陕西师范大学|陕西省|4|师范|5|否|是|\r\n|63|哈尔滨工程大学|黑龙江省|2|理工|34|否|是|\r\n|64|中国矿业大学|江苏省|10|理工|35|否|是|\r\n|65|华南师范大学|广东省|4|师范|6|否|是|\r\n|66|东北师范大学|吉林省|2|师范|7|否|是|\r\n|67|燕山大学|河北省|1|理工|36|否|否|\r\n|68|扬州大学|江苏省|11|综合|21|否|否|\r\n|69|华北电力大学|北京市|12|理工|37|否|是|\r\n|70|东华大学|上海市|7|理工|38|否|是|\r\n|71|云南大学|云南省|1|综合|22|是|是|\r\n|72|西北大学|陕西省|5|综合|23|否|是|\r\n|73|北京邮电大学|北京市|13|理工|39|否|是|\r\n|74|宁波大学|浙江省|3|综合|24|否|是|\r\n|75|西北农林科技大学|陕西省|6|农林|4|是|是|\r\n|76|华南农业大学|广东省|5|农林|5|否|否|\r\n|77|中央财经大学|北京市|14|财经|1|否|是|\r\n|78|湖南师范大学|湖南省|4|师范|8|否|是|\r\n|79|浙江师范大学|浙江省|4|师范|9|否|否|\r\n|80|北京化工大学|北京市|15|理工|40|否|是|\r\n|81|福建师范大学|福建省|2|师范|10|否|否|\r\n|82|江苏大学|江苏省|12|综合|25|否|否|\r\n|83|广西大学|广西壮族自治区|1|综合|26|否|是|\r\n|84|福州大学|福建省|3|综合|27|否|是|\r\n|85|首都医科大学|北京市|16|医药|1|否|否|\r\n|86|上海师范大学|上海市|8|师范|11|否|否|\r\n|87|深圳大学|广东省|6|综合|28|否|否|\r\n|88|河南大学|河南省|2|综合|29|否|是|\r\n|89|安徽大学|安徽省|3|综合|30|否|是|\r\n|90|中国石油大学（华东）|山东省|3|理工|41|否|是|\r\n|91|北京协和医学院|北京市|17|医药|2|否|是|\r\n|92|中国地质大学（武汉）|湖北省|6|理工|42|否|是|\r\n|93|杭州电子科技大学|浙江省|5|理工|43|否|否|\r\n|94|广东工业大学|广东省|7|理工|44|否|否|\r\n|95|太原理工大学|山西省|1|理工|45|否|是|\r\n|96|中国政法大学|北京市|18|文法|2|否|是|\r\n|97|西安建筑科技大学|陕西省|7|理工|46|否|否|\r\n|98|长安大学|陕西省|8|理工|47|否|是|\r\n|99|首都师范大学|北京市|19|师范|12|否|是|\r\n|100|河北大学|河北省|2|综合|31|否|否|\r\n|101|湘潭大学|湖南省|5|综合|32|否|否|\r\n|102|北京林业大学|北京市|20|农林|6|否|是|\r\n|103|昆明理工大学|云南省|2|理工|48|否|否|\r\n|104|上海财经大学|上海市|9|财经|2|否|是|\r\n|105|南京工业大学|江苏省|13|理工|49|否|否|\r\n|106|南京邮电大学|江苏省|14|理工|50|否|是|\r\n|107|山西大学|山西省|2|综合|33|否|否|\r\n|108|山东师范大学|山东省|4|师范|13|否|否|\r\n|109|南京医科大学|江苏省|15|医药|3|否|否|\r\n|110|中国传媒大学|北京市|21|文法|3|否|是|\r\n|111|南方医科大学|广东省|8|医药|4|否|否|\r\n|112|浙江理工大学|浙江省|6|理工|51|否|否|\r\n|113|对外经济贸易大学|北京市|22|财经|3|否|是|\r\n|114|西南财经大学|四川省|4|财经|4|否|是|\r\n|115|广州大学|广东省|9|综合|34|否|否|\r\n|116|中国石油大学（北京）|北京市|23|理工|52|否|是|\r\n|117|福建农林大学|福建省|4|农林|7|否|否|\r\n|118|中央音乐学院|北京市|24|艺术|1|否|是|\r\n|119|中央美术学院|北京市|25|艺术|2|否|是|\r\n|120|山东科技大学|山东省|5|理工|53|否|否|\r\n|121|济南大学|山东省|6|综合|35|否|否|\r\n|122|青岛大学|山东省|7|综合|36|否|否|\r\n|123|东北农业大学|黑龙江省|3|农林|8|否|是|\r\n|124|华侨大学|福建省|5|综合|37|否|否|\r\n|125|中央民族大学|北京市|26|民族|1|是|是|\r\n|126|天津医科大学|天津市|3|医药|5|否|是|\r\n|127|中南财经政法大学|湖北省|7|财经|5|否|是|\r\n|128|南京信息工程大学|江苏省|16|理工|54|否|是|\r\n|129|北京语言大学|北京市|27|文法|4|否|否|\r\n|130|河北工业大学|河北省|3|理工|55|否|是|\r\n|131|东北林业大学|黑龙江省|4|农林|9|否|是|\r\n|132|贵州大学|贵州省|1|综合|38|否|是|\r\n|133|中国医科大学|辽宁省|3|医药|6|否|否|\r\n|134|中国矿业大学（北京）|北京市|28|理工|56|否|是|\r\n|135|中国地质大学（北京）|北京市|29|理工|57|否|是|\r\n|136|上海理工大学|上海市|10|理工|58|否|否|\r\n|137|大连海事大学|辽宁省|4|理工|59|否|是|\r\n|138|西安理工大学|陕西省|9|理工|60|否|否|\r\n|139|东北财经大学|辽宁省|5|财经|6|否|否|\r\n|140|黑龙江大学|黑龙江省|5|综合|39|否|否|\r\n|141|浙江工商大学|浙江省|7|财经|7|否|否|\r\n|142|中北大学|山西省|3|理工|61|否|否|\r\n|143|海南大学|海南省|1|综合|40|否|是|\r\n|144|长沙理工大学|湖南省|6|理工|62|否|否|\r\n|145|哈尔滨医科大学|黑龙江省|6|医药|7|否|否|\r\n|146|第二军医大学|上海市|11|医药|8|否|是|\r\n|147|中国美术学院|浙江省|8|艺术|3|否|是|\r\n|148|温州医科大学|浙江省|9|医药|9|否|否|\r\n|149|中国音乐学院|北京市|30|艺术|4|否|是|\r\n|150|重庆邮电大学|重庆市|3|理工|63|否|否|\r\n|151|江西师范大学|江西省|2|师范|14|否|否|\r\n|152|天津师范大学|天津市|4|师范|15|否|否|\r\n|153|第四军医大学|陕西省|10|医药|10|否|是|\r\n|154|上海中医药大学|上海市|12|医药|11|否|是|\r\n|155|新疆大学|新疆维吾尔自治区|1|综合|41|是|是|\r\n|156|河南科技大学|河南省|3|理工|64|否|否|\r\n|157|辽宁大学|辽宁省|6|综合|42|否|是|\r\n|158|内蒙古大学|内蒙古自治区|1|综合|43|否|是|\r\n|159|中国计量大学|浙江省|10|理工|65|否|否|\r\n|160|中国药科大学|江苏省|17|医药|12|否|是|\r\n|161|武汉科技大学|湖北省|8|理工|66|否|否|\r\n|162|江西财经大学|江西省|3|财经|8|否|否|\r\n|163|西北师范大学|甘肃省|2|师范|16|否|否|\r\n|164|天津工业大学|天津市|5|理工|67|否|是|\r\n|165|哈尔滨理工大学|黑龙江省|7|理工|68|否|否|\r\n|166|河南师范大学|河南省|4|师范|17|否|否|\r\n|167|西南石油大学|四川省|5|理工|69|否|是|\r\n|168|安徽师范大学|安徽省|4|师范|18|否|否|\r\n|169|南京林业大学|江苏省|18|农林|10|否|是|\r\n|170|四川师范大学|四川省|6|师范|19|否|否|\r\n|171|北京中医药大学|北京市|31|医药|13|否|是|\r\n|172|南京中医药大学|江苏省|19|医药|14|否|是|\r\n|173|河南理工大学|河南省|5|理工|70|否|否|\r\n|174|广西师范大学|广西壮族自治区|2|师范|20|否|否|\r\n|175|四川农业大学|四川省|7|农林|11|否|是|\r\n|176|江苏师范大学|江苏省|20|师范|21|否|否|\r\n|177|长春理工大学|吉林省|3|理工|71|否|否|\r\n|178|南通大学|江苏省|21|综合|44|否|否|\r\n|179|云南师范大学|云南省|3|师范|22|否|否|\r\n|180|北京体育大学|北京市|32|体育|1|否|是|\r\n|181|上海外国语大学|上海市|13|文法|5|否|是|\r\n|182|广东外语外贸大学|广东省|10|文法|6|否|否|\r\n|183|山东农业大学|山东省|8|农林|12|否|否|\r\n|184|石河子大学|新疆维吾尔自治区|2|综合|45|否|是|\r\n|185|青岛科技大学|山东省|9|理工|72|否|否|\r\n|186|北京外国语大学|北京市|33|文法|7|否|是|\r\n|187|湖北大学|湖北省|9|综合|46|否|否|\r\n|188|重庆医科大学|重庆市|4|医药|15|否|否|\r\n|189|成都理工大学|四川省|8|理工|73|否|是|\r\n|190|河北师范大学|河北省|4|师范|23|否|否|\r\n|191|汕头大学|广东省|11|综合|47|否|否|\r\n|192|陕西科技大学|陕西省|11|理工|74|否|否|\r\n|193|山东理工大学|山东省|10|理工|75|否|否|\r\n|194|兰州理工大学|甘肃省|3|理工|76|否|否|\r\n|195|西南科技大学|四川省|9|理工|77|否|否|\r\n|196|长江大学|湖北省|10|综合|48|否|否|\r\n|197|山东财经大学|山东省|11|财经|9|否|否|\r\n|198|山西医科大学|山西省|4|医药|16|否|否|\r\n|199|上海海事大学|上海市|14|理工|78|否|否|\r\n|200|天津科技大学|天津市|6|理工|79|否|否|\r\n|201|重庆交通大学|重庆市|5|理工|80|否|否|\r\n|202|湖南农业大学|湖南省|7|农林|13|否|否|\r\n|203|湖南科技大学|湖南省|8|理工|81|否|否|\r\n|204|沈阳工业大学|辽宁省|7|理工|82|否|否|\r\n|205|上海体育学院|上海市|15|体育|2|否|是|\r\n|206|安徽工业大学|安徽省|5|理工|83|否|否|\r\n|207|兰州交通大学|甘肃省|4|理工|84|否|否|\r\n|208|南方科技大学|广东省|12|综合|49|否|否|\r\n|209|曲阜师范大学|山东省|12|师范|24|否|否|\r\n|210|三峡大学|湖北省|11|综合|50|否|否|\r\n|211|南京艺术学院|江苏省|22|艺术|5|否|否|\r\n|212|河南农业大学|河南省|6|农林|14|否|否|\r\n|213|河北农业大学|河北省|5|农林|15|否|否|\r\n|214|华东政法大学|上海市|16|文法|8|否|否|\r\n|215|桂林电子科技大学|广西壮族自治区|3|理工|85|否|否|\r\n|216|辽宁师范大学|辽宁省|8|师范|25|否|否|\r\n|217|中南民族大学|湖北省|12|民族|2|否|否|\r\n|218|山西财经大学|山西省|5|财经|10|否|否|\r\n|219|广州中医药大学|广东省|13|医药|17|否|是|\r\n|220|南昌航空大学|江西省|4|理工|86|否|否|\r\n|221|安徽理工大学|安徽省|6|理工|87|否|否|\r\n|222|常州大学|江苏省|23|理工|88|否|否|\r\n|223|中南林业科技大学|湖南省|9|农林|16|否|否|\r\n|224|西安科技大学|陕西省|12|理工|89|否|否|\r\n|225|上海音乐学院|上海市|17|艺术|6|否|是|\r\n|226|杭州师范大学|浙江省|11|师范|26|否|否|\r\n|227|重庆师范大学|重庆市|6|师范|27|否|否|\r\n|228|宁夏大学|宁夏回族自治区|1|综合|51|否|是|\r\n|229|桂林理工大学|广西壮族自治区|4|理工|90|否|否|\r\n|230|西南政法大学|重庆市|7|文法|9|否|否|\r\n|231|天津理工大学|天津市|7|理工|91|否|否|\r\n|232|辽宁工程技术大学|辽宁省|9|理工|92|否|否|\r\n|233|江苏科技大学|江苏省|24|理工|93|否|否|\r\n|234|重庆工商大学|重庆市|8|财经|11|否|否|\r\n|235|延边大学|吉林省|4|综合|52|否|是|\r\n|236|河南工业大学|河南省|7|理工|94|否|否|\r\n|237|青岛理工大学|山东省|13|理工|95|否|否|\r\n|238|外交学院|北京市|34|文法|10|否|是|\r\n|239|吉林农业大学|吉林省|5|农林|17|否|否|\r\n|240|集美大学|福建省|6|综合|53|否|否|\r\n|241|南华大学|湖南省|10|综合|54|否|否|\r\n|242|东北石油大学|黑龙江省|8|理工|96|否|否|\r\n|243|湖北工业大学|湖北省|13|理工|97|否|否|\r\n|244|哈尔滨师范大学|黑龙江省|9|师范|28|否|否|\r\n|245|首都经济贸易大学|北京市|35|财经|12|否|否|\r\n|246|浙江财经大学|浙江省|12|财经|13|否|否|\r\n|247|沈阳农业大学|辽宁省|10|农林|18|否|否|\r\n|248|大连医科大学|辽宁省|11|医药|18|否|否|\r\n|249|北京联合大学|北京市|36|综合|55|否|否|\r\n|250|河北医科大学|河北省|6|医药|19|否|否|\r\n|251|烟台大学|山东省|14|综合|56|否|否|\r\n|252|重庆理工大学|重庆市|9|理工|98|否|否|\r\n|253|华北理工大学|河北省|7|综合|57|否|否|\r\n|254|长春工业大学|吉林省|6|理工|99|否|否|\r\n|255|安徽财经大学|安徽省|7|财经|14|否|否|\r\n|256|安徽医科大学|安徽省|8|医药|20|否|否|\r\n|257|中国戏曲学院|北京市|37|艺术|7|否|否|\r\n|258|华东交通大学|江西省|5|理工|100|否|否|\r\n|259|东北电力大学|吉林省|7|理工|101|否|否|\r\n|260|齐鲁工业大学|山东省|15|理工|102|否|否|\r\n|261|天津中医药大学|天津市|8|医药|21|否|是|\r\n|262|南京财经大学|江苏省|25|财经|15|否|否|\r\n|263|上海工程技术大学|上海市|18|理工|103|否|否|\r\n|264|内蒙古农业大学|内蒙古自治区|2|农林|19|否|否|\r\n|265|中央戏剧学院|北京市|38|艺术|8|否|是|\r\n|266|沈阳建筑大学|辽宁省|12|理工|104|否|否|\r\n|267|河北科技大学|河北省|8|理工|105|否|否|\r\n|268|成都中医药大学|四川省|10|医药|22|否|是|\r\n|269|大连工业大学|辽宁省|13|理工|106|否|否|\r\n|270|北京工商大学|北京市|39|财经|16|否|否|\r\n|271|浙江农林大学|浙江省|13|农林|20|否|否|\r\n|272|青海大学|青海省|1|综合|58|否|是|\r\n|273|中国民航大学|天津市|9|理工|107|否|否|\r\n|274|沈阳师范大学|辽宁省|14|师范|29|否|否|\r\n|275|沈阳药科大学|辽宁省|15|医药|23|否|否|\r\n|276|广州医科大学|广东省|14|医药|24|否|否|\r\n|277|浙江中医药大学|浙江省|14|医药|25|否|否|\r\n|278|温州大学|浙江省|15|综合|59|否|否|\r\n|279|南京工程学院|江苏省|26|理工|108|否|否|\r\n|280|沈阳航空航天大学|辽宁省|16|理工|109|否|否|\r\n|281|内蒙古工业大学|内蒙古自治区|3|理工|110|否|否|\r\n|282|北京建筑大学|北京市|40|理工|111|否|否|\r\n|283|江西理工大学|江西省|6|理工|112|否|否|\r\n|284|安徽农业大学|安徽省|9|农林|21|否|否|\r\n|285|东华理工大学|江西省|7|理工|113|否|否|\r\n|286|鲁东大学|山东省|16|师范|30|否|否|\r\n|287|广西医科大学|广西壮族自治区|5|医药|26|否|否|\r\n|288|上海海洋大学|上海市|19|农林|22|否|是|\r\n|289|广东财经大学|广东省|15|财经|17|否|否|\r\n|290|贵州师范大学|贵州省|2|师范|31|否|否|\r\n|291|成都信息工程大学|四川省|11|理工|114|否|否|\r\n|292|西华大学|四川省|12|综合|60|否|否|\r\n|293|郑州轻工业大学|河南省|8|理工|115|否|否|\r\n|294|山东建筑大学|山东省|17|理工|116|否|否|\r\n|295|北京电影学院|北京市|41|艺术|9|否|否|\r\n|296|上海戏剧学院|上海市|20|艺术|10|否|否|\r\n|297|苏州科技大学|江苏省|27|综合|61|否|否|\r\n|298|浙江海洋大学|浙江省|16|农林|23|否|否|\r\n|299|武汉轻工大学|湖北省|14|理工|117|否|否|\r\n|300|福建医科大学|福建省|7|医药|27|否|否|\r\n|301|内蒙古科技大学|内蒙古自治区|4|理工|118|否|否|\r\n|302|大连大学|辽宁省|17|综合|62|否|否|\r\n|303|景德镇陶瓷大学|江西省|8|艺术|11|否|否|\r\n|304|中国人民公安大学|北京市|42|文法|11|否|是|\r\n|305|武汉工程大学|湖北省|15|理工|119|否|否|\r\n|306|山西师范大学|山西省|6|师范|32|否|否|\r\n|307|上海电力大学|上海市|21|理工|120|否|否|\r\n|308|聊城大学|山东省|18|师范|33|否|否|\r\n|309|北方工业大学|北京市|43|理工|121|否|否|\r\n|310|石家庄铁道大学|河北省|9|理工|122|否|否|\r\n|311|北华大学|吉林省|8|综合|63|否|否|\r\n|312|黑龙江中医药大学|黑龙江省|10|医药|28|否|否|\r\n|313|西安工业大学|陕西省|13|理工|123|否|否|\r\n|314|西南民族大学|四川省|13|民族|3|否|否|\r\n|315|天津商业大学|天津市|10|财经|18|否|否|\r\n|316|渤海大学|辽宁省|18|综合|64|否|否|\r\n|317|华北水利水电大学|河南省|9|理工|124|否|否|\r\n|318|西安邮电大学|陕西省|14|理工|125|否|否|\r\n|319|辽宁石油化工大学|辽宁省|19|理工|126|否|否|\r\n|320|哈尔滨商业大学|黑龙江省|11|财经|19|否|否|\r\n|321|甘肃农业大学|甘肃省|5|农林|24|否|否|\r\n|322|江西农业大学|江西省|9|农林|25|否|否|\r\n|323|太原科技大学|山西省|7|理工|127|否|否|\r\n|324|河南财经政法大学|河南省|10|财经|20|否|否|\r\n|325|山东中医药大学|山东省|19|医药|29|否|否|\r\n|326|吉首大学|湖南省|11|综合|65|否|否|\r\n|327|青岛农业大学|山东省|20|农林|26|否|否|\r\n|328|云南农业大学|云南省|4|农林|27|否|否|\r\n|329|新疆医科大学|新疆维吾尔自治区|3|医药|30|否|否|\r\n|330|浙江科技学院|浙江省|17|理工|128|否|否|\r\n|331|上海对外经贸大学|上海市|22|财经|21|否|否|\r\n|332|厦门理工学院|福建省|8|理工|129|否|否|\r\n|333|大连交通大学|辽宁省|20|理工|130|否|否|\r\n|334|四川美术学院|重庆市|10|艺术|12|否|否|\r\n|335|福建工程学院|福建省|9|理工|131|否|否|\r\n|336|武汉体育学院|湖北省|16|体育|3|否|否|\r\n|337|西华师范大学|四川省|14|师范|34|否|否|\r\n|338|西藏大学|西藏自治区|1|综合|66|否|是|\r\n|339|浙江传媒学院|浙江省|18|文法|12|否|否|\r\n|340|武汉纺织大学|湖北省|17|理工|132|否|否|\r\n|341|北京信息科技大学|北京市|44|理工|133|否|否|\r\n|342|辽宁工业大学|辽宁省|21|理工|134|否|否|\r\n|343|内蒙古师范大学|内蒙古自治区|5|师范|35|否|否|\r\n|344|吉林师范大学|吉林省|9|师范|36|否|否|\r\n|345|新疆师范大学|新疆维吾尔自治区|4|师范|37|否|否|\r\n|346|广西民族大学|广西壮族自治区|6|民族|4|否|否|\r\n|347|中原工学院|河南省|11|理工|135|否|否|\r\n|348|湖南工业大学|湖南省|12|理工|136|否|否|\r\n|349|云南财经大学|云南省|5|财经|22|否|否|\r\n|350|上海应用技术大学|上海市|23|理工|137|否|否|\r\n|351|西安石油大学|陕西省|15|理工|138|否|否|\r\n|352|天津财经大学|天津市|11|财经|23|否|否|\r\n|353|安徽工程大学|安徽省|10|理工|139|否|否|\r\n|354|天津职业技术师范大学|天津市|12|师范|38|否|否|\r\n|355|海南师范大学|海南省|2|师范|39|否|否|\r\n|356|西安工程大学|陕西省|16|理工|140|否|否|\r\n|357|徐州医科大学|江苏省|28|医药|31|否|否|\r\n|358|大连外国语大学|辽宁省|22|文法|13|否|否|\r\n|359|广西艺术学院|广西壮族自治区|7|艺术|13|否|否|\r\n|360|江西科技师范大学|江西省|10|师范|40|否|否|\r\n|361|南京审计大学|江苏省|29|财经|24|否|否|\r\n|362|广东海洋大学|广东省|16|农林|28|否|否|\r\n|363|成都体育学院|四川省|15|体育|4|否|否|\r\n|364|新疆农业大学|新疆维吾尔自治区|5|农林|29|否|否|\r\n|365|信阳师范学院|河南省|12|师范|41|否|否|\r\n|366|河北经贸大学|河北省|10|财经|25|否|否|\r\n|367|宁波工程学院|浙江省|19|理工|141|否|否|\r\n|368|绍兴文理学院|浙江省|20|综合|67|否|否|\r\n|369|西安美术学院|陕西省|17|艺术|14|否|否|\r\n|370|西安外国语大学|陕西省|18|文法|14|否|否|\r\n|371|山西农业大学|山西省|8|农林|30|否|否|\r\n|372|广西科技大学|广西壮族自治区|8|理工|142|否|否|\r\n|373|天津体育学院|天津市|13|体育|5|否|否|\r\n|374|北京第二外国语学院|北京市|45|文法|15|否|否|\r\n|375|湖南中医药大学|湖南省|13|医药|32|否|否|\r\n|376|北京印刷学院|北京市|46|理工|143|否|否|\r\n|377|重庆科技学院|重庆市|11|理工|144|否|否|\r\n|378|昆明医科大学|云南省|6|医药|33|否|否|\r\n|379|山东工商学院|山东省|21|财经|26|否|否|\r\n|380|江汉大学|湖北省|18|综合|68|否|否|\r\n|381|河北工程大学|河北省|11|理工|145|否|否|\r\n|382|西北政法大学|陕西省|19|文法|16|否|否|\r\n|383|首都体育学院|北京市|47|体育|6|否|否|\r\n|384|上海科技大学|上海市|24|理工|146|否|否|\r\n|385|江西中医药大学|江西省|11|医药|34|否|否|\r\n|386|湖南理工学院|湖南省|14|理工|147|否|否|\r\n|387|广东技术师范大学|广东省|17|师范|42|否|否|\r\n|388|湖州师范学院|浙江省|21|师范|43|否|否|\r\n|389|嘉兴学院|浙江省|22|综合|69|否|否|\r\n|390|沈阳理工大学|辽宁省|23|理工|148|否|否|\r\n|391|天津外国语大学|天津市|14|文法|17|否|否|\r\n|392|河南中医药大学|河南省|13|医药|35|否|否|\r\n|393|宁夏医科大学|宁夏回族自治区|2|医药|36|否|否|\r\n|394|北京石油化工学院|北京市|48|理工|149|否|否|\r\n|395|广东药科大学|广东省|18|医药|37|否|否|\r\n|396|常熟理工学院|江苏省|30|理工|150|否|否|\r\n|397|西北民族大学|甘肃省|6|民族|5|否|否|\r\n|398|齐齐哈尔大学|黑龙江省|12|综合|70|否|否|\r\n|399|湖北经济学院|湖北省|19|财经|27|否|否|\r\n|400|新乡医学院|河南省|14|医药|38|否|否|\r\n|401|北方民族大学|宁夏回族自治区|3|民族|6|否|否|\r\n|402|辽宁中医药大学|辽宁省|24|医药|39|否|否|\r\n|403|四川轻化工大学|四川省|16|理工|151|否|否|\r\n|404|福建中医药大学|福建省|10|医药|40|否|否|\r\n|405|湖南工商大学|湖南省|15|财经|28|否|否|\r\n|406|南宁师范大学|广西壮族自治区|9|师范|44|否|否|\r\n|407|鲁迅美术学院|辽宁省|25|艺术|15|否|否|\r\n|408|云南民族大学|云南省|7|民族|7|否|否|\r\n|409|洛阳理工学院|河南省|15|理工|152|否|否|\r\n|410|盐城工学院|江苏省|31|理工|153|否|否|\r\n|411|东莞理工学院|广东省|19|理工|154|否|否|\r\n|412|浙江音乐学院|浙江省|23|艺术|16|否|否|\r\n|413|洛阳师范学院|河南省|16|师范|45|否|否|\r\n|414|贵州财经大学|贵州省|3|财经|29|否|否|\r\n|415|辽宁科技大学|辽宁省|26|理工|155|否|否|\r\n|416|青海民族大学|青海省|2|民族|8|否|否|\r\n|417|五邑大学|广东省|20|综合|71|否|否|\r\n|418|安庆师范大学|安徽省|11|师范|46|否|否|\r\n|419|西南林业大学|云南省|8|农林|31|否|否|\r\n|420|徐州工程学院|江苏省|32|理工|156|否|否|\r\n|421|南阳理工学院|河南省|17|理工|157|否|否|\r\n|422|安徽中医药大学|安徽省|12|医药|41|否|否|\r\n|423|合肥学院|安徽省|13|综合|72|否|否|\r\n|424|重庆文理学院|重庆市|12|理工|158|否|否|\r\n|425|沈阳化工大学|辽宁省|27|理工|159|否|否|\r\n|426|湖北美术学院|湖北省|20|艺术|17|否|否|\r\n|427|广州美术学院|广东省|21|艺术|18|否|否|\r\n|428|佳木斯大学|黑龙江省|13|综合|73|否|否|\r\n|429|四川音乐学院|四川省|17|艺术|19|否|否|\r\n|430|湖北师范大学|湖北省|21|师范|47|否|否|\r\n|431|赣南师范大学|江西省|12|师范|48|否|否|\r\n|432|沈阳音乐学院|辽宁省|28|艺术|20|否|否|\r\n|433|安徽建筑大学|安徽省|14|理工|160|否|否|\r\n|434|湖北中医药大学|湖北省|22|医药|42|否|否|\r\n|435|贵州医科大学|贵州省|4|医药|43|否|否|\r\n|436|锦州医科大学|辽宁省|29|医药|44|否|否|\r\n|437|广东金融学院|广东省|22|财经|30|否|否|\r\n|438|河南科技学院|河南省|18|师范|49|否|否|\r\n|439|吉林财经大学|吉林省|10|财经|31|否|否|\r\n|440|河南工程学院|河南省|19|理工|161|否|否|\r\n|441|江苏海洋大学|江苏省|33|理工|162|否|否|\r\n|442|大连海洋大学|辽宁省|30|农林|32|否|否|\r\n|443|安阳师范学院|河南省|20|师范|50|否|否|\r\n|444|黑龙江八一农垦大学|黑龙江省|14|农林|33|否|否|\r\n|445|四川外国语大学|重庆市|13|文法|18|否|否|\r\n|446|西安财经大学|陕西省|20|财经|32|否|否|\r\n|447|江苏理工学院|江苏省|34|师范|51|否|否|\r\n|448|大连民族大学|辽宁省|31|民族|9|否|否|\r\n|449|湖北文理学院|湖北省|23|综合|74|否|否|\r\n|450|成都大学|四川省|18|综合|75|否|否|\r\n|451|广东医科大学|广东省|23|医药|45|否|否|\r\n|452|新疆财经大学|新疆维吾尔自治区|6|财经|33|否|否|\r\n|453|临沂大学|山东省|22|综合|76|否|否|\r\n|454|长春师范大学|吉林省|11|师范|52|否|否|\r\n|455|北京服装学院|北京市|49|理工|163|否|否|\r\n|456|长春大学|吉林省|12|综合|77|否|否|\r\n|457|德州学院|山东省|23|综合|78|否|否|\r\n|458|星海音乐学院|广东省|24|艺术|21|否|否|\r\n|459|西南医科大学|四川省|19|医药|46|否|否|\r\n|460|延安大学|陕西省|21|综合|79|否|否|\r\n|461|淮阴师范学院|江苏省|35|师范|53|否|否|\r\n|462|河北地质大学|河北省|12|理工|164|否|否|\r\n|463|盐城师范学院|江苏省|36|师范|54|否|否|\r\n|464|上海立信会计金融学院|上海市|25|财经|34|否|否|\r\n|465|遵义医科大学|贵州省|5|医药|47|否|否|\r\n|466|闽南师范大学|福建省|11|师范|55|否|否|\r\n|467|长春中医药大学|吉林省|13|医药|48|否|否|\r\n|468|北京舞蹈学院|北京市|50|艺术|22|否|否|\r\n|469|河北北方学院|河北省|13|综合|80|否|否|\r\n|470|淮北师范大学|安徽省|15|师范|56|否|否|\r\n|471|闽江学院|福建省|12|综合|81|否|否|\r\n|472|武汉音乐学院|湖北省|24|艺术|23|否|否|\r\n|473|沈阳大学|辽宁省|32|综合|82|否|否|\r\n|474|塔里木大学|新疆维吾尔自治区|7|农林|34|否|否|\r\n|475|哈尔滨音乐学院|黑龙江省|15|艺术|24|否|否|\r\n|476|南昌工程学院|江西省|13|理工|165|否|否|\r\n|477|贵州民族大学|贵州省|6|民族|10|否|否|\r\n|478|内蒙古民族大学|内蒙古自治区|6|民族|11|否|否|\r\n|479|云南艺术学院|云南省|9|艺术|25|否|否|\r\n|480|岭南师范学院|广东省|25|师范|57|否|否|\r\n|481|潍坊医学院|山东省|24|医药|49|否|否|\r\n|482|乐山师范学院|四川省|20|师范|58|否|否|\r\n|483|山东第一医科大学|山东省|25|医药|50|否|否|\r\n|484|井冈山大学|江西省|14|综合|83|否|否|\r\n|485|广西中医药大学|广西壮族自治区|10|医药|51|否|否|\r\n|486|黑龙江科技大学|黑龙江省|16|理工|166|否|否|\r\n|487|北京农学院|北京市|51|农林|35|否|否|\r\n|488|内蒙古财经大学|内蒙古自治区|7|财经|35|否|否|\r\n|489|山东交通学院|山东省|26|理工|167|否|否|\r\n|490|佛山科学技术学院|广东省|26|理工|168|否|否|\r\n|491|阜阳师范大学|安徽省|16|师范|59|否|否|\r\n|492|西安体育学院|陕西省|22|体育|7|否|否|\r\n|493|湖南文理学院|湖南省|16|师范|60|否|否|\r\n|494|郑州航空工业管理学院|河南省|21|理工|169|否|否|\r\n|495|内蒙古医科大学|内蒙古自治区|8|医药|52|否|否|\r\n|496|泉州师范学院|福建省|13|师范|61|否|否|\r\n|497|陕西理工大学|陕西省|23|理工|170|否|否|\r\n|498|吉林建筑大学|吉林省|14|理工|171|否|否|\r\n|499|湖北汽车工业学院|湖北省|25|理工|172|否|否|\r\n|500|江西科技学院|江西省|15|理工|173|否|否|\r\n|501|许昌学院|河南省|22|综合|84|否|否|\r\n|502|浙江树人学院|浙江省|24|理工|174|否|否|\r\n|503|青海师范大学|青海省|3|师范|62|否|否|\r\n|504|山东艺术学院|山东省|27|艺术|26|否|否|\r\n|505|韩山师范学院|广东省|27|师范|63|否|否|\r\n|506|衡阳师范学院|湖南省|17|师范|64|否|否|\r\n|507|上海电机学院|上海市|26|理工|175|否|否|\r\n|508|金陵科技学院|江苏省|37|理工|176|否|否|\r\n|509|海南医学院|海南省|3|医药|53|否|否|\r\n|510|南京体育学院|江苏省|38|体育|8|否|否|\r\n|511|天津城建大学|天津市|15|理工|177|否|否|\r\n|512|山东工艺美术学院|山东省|28|艺术|27|否|否|\r\n|513|中国刑事警察学院|辽宁省|33|文法|19|否|否|\r\n|514|兰州财经大学|甘肃省|7|财经|36|否|否|\r\n|515|滨州医学院|山东省|29|医药|54|否|否|\r\n|516|九江学院|江西省|16|综合|85|否|否|\r\n|517|山西大同大学|山西省|9|师范|65|否|否|\r\n|518|长沙学院|湖南省|18|综合|86|否|否|\r\n|519|河北科技师范学院|河北省|14|师范|66|否|否|\r\n|520|淮阴工学院|江苏省|39|理工|178|否|否|\r\n|521|北京电子科技学院|北京市|52|理工|179|否|否|\r\n|522|川北医学院|四川省|21|医药|55|否|否|\r\n|523|吉林艺术学院|吉林省|15|艺术|28|否|否|\r\n|524|大理大学|云南省|10|综合|87|否|否|\r\n|525|广州体育学院|广东省|28|体育|9|否|否|\r\n|526|国际关系学院|北京市|53|文法|20|否|否|\r\n|527|华北科技学院|河北省|15|理工|180|否|否|\r\n|528|沈阳体育学院|辽宁省|34|体育|10|否|否|\r\n|529|潍坊学院|山东省|30|综合|88|否|否|\r\n|530|湖北医药学院|湖北省|26|医药|56|否|否|\r\n|531|惠州学院|广东省|29|综合|89|否|否|\r\n|532|滨州学院|山东省|31|综合|90|否|否|\r\n|533|南昌理工学院|江西省|17|理工|181|否|否|\r\n|534|皖南医学院|安徽省|17|医药|57|否|否|\r\n|535|湖南工程学院|湖南省|19|理工|182|否|否|\r\n|536|上海政法学院|上海市|27|文法|21|否|否|\r\n|537|广西财经学院|广西壮族自治区|11|财经|37|否|否|\r\n|538|蚌埠医学院|安徽省|18|医药|58|否|否|\r\n|539|中国民用航空飞行学院|四川省|22|理工|183|否|否|\r\n|540|西安音乐学院|陕西省|24|艺术|29|否|否|\r\n|541|上海商学院|上海市|28|财经|38|否|否|\r\n|542|南京晓庄学院|江苏省|40|师范|67|否|否|\r\n|543|天津美术学院|天津市|16|艺术|30|否|否|\r\n|544|常州工学院|江苏省|41|理工|184|否|否|\r\n|545|中国劳动关系学院|北京市|54|文法|22|否|否|\r\n|546|内江师范学院|四川省|23|师范|68|否|否|\r\n|547|黑龙江工程学院|黑龙江省|17|理工|185|否|否|\r\n|548|南阳师范学院|河南省|23|师范|69|否|否|\r\n|549|湖北民族大学|湖北省|27|民族|12|否|否|\r\n|550|牡丹江师范学院|黑龙江省|18|师范|70|否|否|\r\n|551|浙江万里学院|浙江省|25|理工|186|否|否|\r\n|552|仲恺农业工程学院|广东省|30|农林|36|否|否|\r\n|553|云南中医药大学|云南省|11|医药|59|否|否|\r\n|554|新乡学院|河南省|24|师范|71|否|否|\r\n|555|陕西中医药大学|陕西省|25|医药|60|否|否|\r\n|556|湖南第一师范学院|湖南省|20|师范|72|否|否|\r\n|557|黄山学院|安徽省|19|综合|91|否|否|\r\n|558|太原师范学院|山西省|10|师范|73|否|否|\r\n|559|宜春学院|江西省|18|综合|92|否|否|\r\n|560|北京物资学院|北京市|55|财经|39|否|否|\r\n|561|天津农学院|天津市|17|农林|37|否|否|\r\n|562|中国人民警察大学|河北省|16|文法|23|否|否|\r\n|563|长江师范学院|重庆市|14|师范|74|否|否|\r\n|564|韶关学院|广东省|31|综合|93|否|否|\r\n|565|安徽科技学院|安徽省|20|理工|187|否|否|\r\n|566|湖北科技学院|湖北省|28|理工|188|否|否|\r\n|567|湖南城市学院|湖南省|21|理工|189|否|否|\r\n|568|上海第二工业大学|上海市|29|理工|190|否|否|\r\n|569|桂林医学院|广西壮族自治区|12|医药|61|否|否|\r\n|570|昆明学院|云南省|12|师范|75|否|否|\r\n|571|黄冈师范学院|湖北省|29|师范|76|否|否|\r\n|572|哈尔滨体育学院|黑龙江省|19|体育|11|否|否|\r\n|573|福建江夏学院|福建省|14|财经|40|否|否|\r\n|574|广东石油化工学院|广东省|32|综合|94|否|否|\r\n|575|重庆第二师范学院|重庆市|15|师范|77|否|否|\r\n|576|桂林旅游学院|广西壮族自治区|13|综合|95|否|否|\r\n|577|湖南人文科技学院|湖南省|22|师范|78|否|否|\r\n|578|贵州中医药大学|贵州省|7|医药|62|否|否|\r\n|579|湖北工程学院|湖北省|30|理工|191|否|否|\r\n|580|天津音乐学院|天津市|18|艺术|31|否|否|\r\n|581|运城学院|山西省|11|综合|96|否|否|\r\n|582|合肥师范学院|安徽省|21|师范|79|否|否|\r\n|583|贺州学院|广西壮族自治区|14|师范|80|否|否|\r\n|584|台州学院|浙江省|26|综合|97|否|否|\r\n|585|甘肃政法大学|甘肃省|8|文法|24|否|否|\r\n|586|黄河科技学院|河南省|25|理工|192|否|否|\r\n|587|济宁医学院|山东省|32|医药|63|否|否|\r\n|588|西安文理学院|陕西省|26|师范|81|否|否|\r\n|589|厦门大学嘉庚学院|福建省|15|综合|98|否|否|\r\n|590|西京学院|陕西省|27|综合|99|否|否|\r\n|591|山东体育学院|山东省|33|体育|12|否|否|\r\n|592|邵阳学院|湖南省|23|综合|100|否|否|\r\n|593|商丘师范学院|河南省|26|师范|82|否|否|\r\n|594|滁州学院|安徽省|22|综合|101|否|否|\r\n|595|周口师范学院|河南省|27|师范|83|否|否|\r\n|596|渭南师范学院|陕西省|28|师范|84|否|否|\r\n|597|成都医学院|四川省|24|医药|64|否|否|\r\n|598|太原工业学院|山西省|12|理工|193|否|否|\r\n|599|西藏民族大学|西藏自治区|2|民族|13|否|否|\r\n|600|曲靖师范学院|云南省|13|师范|85|否|否|\r\n|601|宝鸡文理学院|陕西省|29|师范|86|否|否|\r\n|602|黄淮学院|河南省|28|师范|87|否|否|\r\n|603|肇庆学院|广东省|33|综合|102|否|否|\r\n|604|阿坝师范学院|四川省|25|师范|88|否|否|\r\n|605|沈阳医学院|辽宁省|35|医药|65|否|否|\r\n|606|贵州商学院|贵州省|8|综合|103|否|否|\r\n|607|北京城市学院|北京市|56|综合|104|否|否|\r\n|608|江苏警官学院|江苏省|42|文法|25|否|否|\r\n|609|承德医学院|河北省|17|医药|66|否|否|\r\n|610|上饶师范学院|江西省|19|师范|89|否|否|\r\n|611|甘肃中医药大学|甘肃省|9|医药|67|否|否|\r\n|612|铜陵学院|安徽省|23|综合|105|否|否|\r\n|613|嘉应学院|广东省|34|综合|106|否|否|\r\n|614|皖西学院|安徽省|24|综合|107|否|否|\r\n|615|河南城建学院|河南省|29|理工|194|否|否|\r\n|616|重庆三峡学院|重庆市|16|综合|108|否|否|\r\n|617|吉林体育学院|吉林省|16|体育|13|否|否|\r\n|618|安阳工学院|河南省|30|理工|195|否|否|\r\n|619|辽东学院|辽宁省|36|综合|109|否|否|\r\n|620|沈阳工程学院|辽宁省|37|理工|196|否|否|\r\n|621|丽水学院|浙江省|27|综合|110|否|否|\r\n|622|天津中德应用技术大学|天津市|19|理工|197|否|否|\r\n|623|成都工业学院|四川省|26|理工|198|否|否|\r\n|624|西安医学院|陕西省|30|医药|68|否|否|\r\n|625|湖南科技学院|湖南省|24|综合|111|否|否|\r\n|626|鞍山师范学院|辽宁省|38|师范|90|否|否|\r\n|627|莆田学院|福建省|16|综合|112|否|否|\r\n|628|中华女子学院|北京市|57|综合|113|否|否|\r\n|629|河西学院|甘肃省|10|综合|114|否|否|\r\n|630|长春工程学院|吉林省|17|理工|199|否|否|\r\n|631|山西中医药大学|山西省|13|医药|69|否|否|\r\n|632|怀化学院|湖南省|25|综合|115|否|否|\r\n|633|浙江外国语学院|浙江省|28|文法|26|否|否|\r\n|634|三亚学院|海南省|4|综合|116|否|否|\r\n|635|湖北第二师范学院|湖北省|31|师范|91|否|否|\r\n|636|湖南工学院|湖南省|26|理工|200|否|否|\r\n|637|桂林航天工业学院|广西壮族自治区|15|理工|201|否|否|\r\n|638|湘南学院|湖南省|27|综合|117|否|否|\r\n|639|武夷学院|福建省|17|师范|92|否|否|\r\n|640|吉林化工学院|吉林省|18|理工|202|否|否|\r\n|641|西昌学院|四川省|27|综合|118|否|否|\r\n|642|廊坊师范学院|河北省|18|师范|93|否|否|\r\n|643|天水师范学院|甘肃省|11|师范|94|否|否|\r\n|644|广西科技师范学院|广西壮族自治区|16|师范|95|否|否|\r\n|645|白城师范学院|吉林省|19|师范|96|否|否|\r\n|646|成都师范学院|四川省|28|师范|97|否|否|\r\n|647|山西传媒学院|山西省|14|艺术|32|否|否|\r\n|648|三明学院|福建省|18|师范|98|否|否|\r\n|649|贵州师范学院|贵州省|9|师范|99|否|否|\r\n|650|玉林师范学院|广西壮族自治区|17|师范|100|否|否|\r\n|651|湖北理工学院|湖北省|32|理工|203|否|否|\r\n|652|长治医学院|山西省|15|医药|70|否|否|\r\n|653|忻州师范学院|山西省|16|师范|101|否|否|\r\n|654|厦门医学院|福建省|19|医药|71|否|否|\r\n|655|荆楚理工学院|湖北省|33|理工|204|否|否|\r\n|656|湖南涉外经济学院|湖南省|28|财经|41|否|否|\r\n|657|泰山学院|山东省|34|综合|119|否|否|\r\n|658|平顶山学院|河南省|31|综合|120|否|否|\r\n|659|海南热带海洋学院|海南省|5|综合|121|否|否|\r\n|660|淮南师范学院|安徽省|25|师范|102|否|否|\r\n|661|赣南医学院|江西省|20|医药|72|否|否|\r\n|662|咸阳师范学院|陕西省|31|师范|103|否|否|\r\n|663|兰州城市学院|甘肃省|12|师范|104|否|否|\r\n|664|攀枝花学院|四川省|29|理工|205|否|否|\r\n|665|红河学院|云南省|14|综合|122|否|否|\r\n|666|西藏藏医药大学|西藏自治区|3|医药|73|否|否|\r\n|667|玉溪师范学院|云南省|15|师范|105|否|否|\r\n|668|四川旅游学院|四川省|30|综合|123|否|否|\r\n|669|菏泽学院|山东省|35|综合|124|否|否|\r\n|670|广东第二师范学院|广东省|35|师范|106|否|否|\r\n|671|铜仁学院|贵州省|10|师范|107|否|否|\r\n|672|绵阳师范学院|四川省|31|师范|108|否|否|\r\n|673|山东女子学院|山东省|36|文法|27|否|否|\r\n|674|哈尔滨学院|黑龙江省|20|综合|125|否|否|\r\n|675|贵州理工学院|贵州省|11|理工|206|否|否|\r\n|676|南京特殊教育师范学院|江苏省|43|师范|109|否|否|\r\n|677|吕梁学院|山西省|17|综合|126|否|否|\r\n|678|石家庄学院|河北省|19|师范|110|否|否|\r\n|679|河南牧业经济学院|河南省|32|农林|38|否|否|\r\n|680|百色学院|广西壮族自治区|18|师范|111|否|否|\r\n|681|西安航空学院|陕西省|32|理工|207|否|否|\r\n|682|巢湖学院|安徽省|26|综合|127|否|否|\r\n|683|河北体育学院|河北省|20|体育|14|否|否|\r\n|684|河池学院|广西壮族自治区|19|文法|28|否|否|\r\n|685|赤峰学院|内蒙古自治区|9|师范|112|否|否|\r\n|686|山东青年政治学院|山东省|37|文法|29|否|否|\r\n|687|吉林外国语大学|吉林省|20|文法|30|否|否|\r\n|688|杭州医学院|浙江省|29|医药|74|否|否|\r\n|689|陇东学院|甘肃省|13|师范|113|否|否|\r\n|690|牡丹江医学院|黑龙江省|21|医药|75|否|否|\r\n|691|池州学院|安徽省|27|师范|114|否|否|\r\n|692|汉口学院|湖北省|34|理工|208|否|否|\r\n|693|喀什大学|新疆维吾尔自治区|8|师范|115|否|否|\r\n|694|宁德师范学院|福建省|20|师范|116|否|否|\r\n|695|滇西科技师范学院|云南省|16|师范|117|否|否|\r\n|696|潍坊科技学院|山东省|38|理工|209|否|否|\r\n|697|北部湾大学|广西壮族自治区|20|综合|128|否|否|\r\n|698|宁波财经学院|浙江省|30|财经|42|否|否|\r\n|699|齐齐哈尔医学院|黑龙江省|22|医药|76|否|否|\r\n|700|邯郸学院|河北省|21|师范|118|否|否|\r\n|701|武汉东湖学院|湖北省|35|理工|210|否|否|\r\n|702|湖南女子学院|湖南省|29|文法|31|否|否|\r\n|703|邢台学院|河北省|22|综合|129|否|否|\r\n|704|河北传媒学院|河北省|23|文法|32|否|否|\r\n|705|唐山师范学院|河北省|24|师范|119|否|否|\r\n|706|宜宾学院|四川省|32|综合|130|否|否|\r\n|707|浙江越秀外国语学院|浙江省|31|文法|33|否|否|\r\n|708|长沙师范学院|湖南省|30|师范|120|否|否|\r\n|709|上海海关学院|上海市|30|文法|34|否|否|\r\n|710|烟台南山学院|山东省|39|综合|131|否|否|\r\n|711|宿州学院|安徽省|28|综合|132|否|否|\r\n|712|黔南民族师范学院|贵州省|12|师范|121|否|否|\r\n|713|湖南财政经济学院|湖南省|31|财经|43|否|否|\r\n|714|长治学院|山西省|18|师范|122|否|否|\r\n|715|榆林学院|陕西省|33|综合|133|否|否|\r\n|716|浙江警察学院|浙江省|32|文法|35|否|否|\r\n|717|长沙医学院|湖南省|32|医药|77|否|否|\r\n|718|西安欧亚学院|陕西省|34|财经|44|否|否|\r\n|719|北华航天工业学院|河北省|25|理工|211|否|否|\r\n|720|贵阳学院|贵州省|13|综合|134|否|否|\r\n|721|右江民族医学院|广西壮族自治区|21|医药|78|否|否|\r\n|722|济宁学院|山东省|40|师范|123|否|否|\r\n|723|文华学院|湖北省|36|理工|212|否|否|\r\n|724|吉林工程技术师范学院|吉林省|21|师范|124|否|否|\r\n|725|文山学院|云南省|17|综合|135|否|否|\r\n|726|广州航海学院|广东省|36|理工|213|否|否|\r\n|727|龙岩学院|福建省|21|综合|136|否|否|\r\n|728|浙江水利水电学院|浙江省|33|理工|214|否|否|\r\n|729|河南财政金融学院|河南省|33|财经|45|否|否|\r\n|730|浙大城市学院|浙江省|34|理工|215|否|否|\r\n|731|通化师范学院|吉林省|22|师范|125|否|否|\r\n|732|遵义师范学院|贵州省|14|师范|126|否|否|\r\n|733|西安翻译学院|陕西省|35|文法|36|否|否|\r\n|734|西安外事学院|陕西省|36|财经|46|否|否|\r\n|735|黑河学院|黑龙江省|23|文法|37|否|否|\r\n|736|太原学院|山西省|19|理工|216|否|否|\r\n|737|青岛滨海学院|山东省|41|综合|137|否|否|\r\n|738|广西民族师范学院|广西壮族自治区|22|师范|127|否|否|\r\n|739|武汉生物工程学院|湖北省|37|理工|217|否|否|\r\n|740|河北民族师范学院|河北省|26|师范|128|否|否|\r\n|741|新疆艺术学院|新疆维吾尔自治区|9|艺术|33|否|否|\r\n|742|郑州师范学院|河南省|34|师范|129|否|否|\r\n|743|衢州学院|浙江省|35|综合|138|否|否|\r\n|744|梧州学院|广西壮族自治区|23|综合|139|否|否|\r\n|745|河北金融学院|河北省|27|财经|47|否|否|\r\n|746|福州外语外贸学院|福建省|22|财经|48|否|否|\r\n|747|蚌埠学院|安徽省|29|师范|130|否|否|\r\n|748|三江学院|江苏省|44|综合|140|否|否|\r\n|749|枣庄学院|山东省|42|综合|141|否|否|\r\n|750|伊犁师范大学|新疆维吾尔自治区|10|师范|131|否|否|\r\n|751|郑州工程技术学院|河南省|35|理工|218|否|否|\r\n|752|四川传媒学院|四川省|33|艺术|34|否|否|\r\n|753|无锡太湖学院|江苏省|45|综合|142|否|否|\r\n|754|吉林动画学院|吉林省|23|艺术|35|否|否|\r\n|755|山东农业工程学院|山东省|43|农林|39|否|否|\r\n|756|陕西学前师范学院|陕西省|37|师范|132|否|否|\r\n|757|新余学院|江西省|21|综合|143|否|否|\r\n|758|安康学院|陕西省|38|师范|133|否|否|\r\n|759|保定学院|河北省|28|师范|134|否|否|\r\n|760|山东政法学院|山东省|44|文法|38|否|否|\r\n|761|广东警官学院|广东省|37|文法|39|否|否|\r\n|762|辽宁科技学院|辽宁省|39|理工|219|否|否|\r\n|763|甘肃医学院|甘肃省|14|医药|79|否|否|\r\n|764|上海健康医学院|上海市|31|医药|80|否|否|\r\n|765|兰州文理学院|甘肃省|15|综合|144|否|否|\r\n|766|云南警官学院|云南省|18|文法|40|否|否|\r\n|767|呼伦贝尔学院|内蒙古自治区|10|综合|145|否|否|\r\n|768|衡水学院|河北省|29|师范|135|否|否|\r\n|769|江苏第二师范学院|江苏省|46|师范|136|否|否|\r\n|770|河北建筑工程学院|河北省|30|理工|220|否|否|\r\n|771|南京森林警察学院|江苏省|47|文法|41|否|否|\r\n|772|武汉商学院|湖北省|38|财经|49|否|否|\r\n|773|安徽新华学院|安徽省|30|理工|221|否|否|\r\n|774|河北美术学院|河北省|31|艺术|36|否|否|\r\n|775|黑龙江东方学院|黑龙江省|24|综合|146|否|否|\r\n|776|吉林工商学院|吉林省|24|财经|50|否|否|\r\n|777|武昌理工学院|湖北省|39|理工|222|否|否|\r\n|778|内蒙古艺术学院|内蒙古自治区|11|艺术|37|否|否|\r\n|779|湖南警察学院|湖南省|33|文法|42|否|否|\r\n|780|山东警察学院|山东省|45|文法|43|否|否|\r\n|781|西安培华学院|陕西省|39|文法|44|否|否|\r\n|782|晋中学院|山西省|20|综合|147|否|否|\r\n|783|河北中医学院|河北省|32|医药|81|否|否|\r\n|784|凯里学院|贵州省|15|师范|137|否|否|\r\n|785|大庆师范学院|黑龙江省|25|师范|138|否|否|\r\n|786|中央司法警官学院|河北省|33|文法|45|否|否|\r\n|787|广东科技学院|广东省|38|理工|223|否|否|\r\n|788|集宁师范学院|内蒙古自治区|12|师范|139|否|否|\r\n|789|山东管理学院|山东省|46|综合|148|否|否|\r\n|790|绥化学院|黑龙江省|26|综合|149|否|否|\r\n|791|成都文理学院|四川省|34|综合|150|否|否|\r\n|792|唐山学院|河北省|34|综合|151|否|否|\r\n|793|六盘水师范学院|贵州省|16|师范|140|否|否|\r\n|794|河南警察学院|河南省|36|文法|46|否|否|\r\n|795|海口经济学院|海南省|6|财经|51|否|否|\r\n|796|郑州西亚斯学院|河南省|37|财经|52|否|否|\r\n|797|山西工商学院|山西省|21|财经|53|否|否|\r\n|798|吉林医药学院|吉林省|25|医药|82|否|否|\r\n|799|安顺学院|贵州省|17|师范|141|否|否|\r\n|800|贵州警察学院|贵州省|18|文法|47|否|否|\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 134,
        "likeCount": 0
    },
    {
        "id": 9,
        "title": "Apache 网站伪静态 ( 去掉 index.php )",
        "slug": "ApacheDeleteIndex",
        "createTime": "2021-03-13 18:35:00",
        "updateTime": "2021-05-31 03:42:03",
        "message": "<!--markdown--># 前言\r\n从 `2018年` 到现在，博客架构折腾来折腾去，最后决定还是回归世界上最好的语言: PHP 的怀抱 ::(1@Baidu.png)。\r\n刚开始用的 `phpStudy`，后来发现它集成的 `MySQL` 应该有问题，稍微开两个连接，内存爆满，所以强烈不推荐用 `phpStudy` 这破玩意儿 ::(7@Baidu.png)。\r\n\r\n# 配置\r\n\r\n## httpd.conf\r\n\r\n废话不多说，直接上代码。\r\n打开 `C:\\BtSoft\\apache\\conf\\httpd.conf`，解开这一段注释\r\n\r\n``` javascript\r\nLoadModule rewrite_module modules/mod_rewrite.so\r\n```\r\n\r\n然后搜索 `AllowOverride`，把对应的 `None` 改为 `All`。\r\n\r\n## .htaccess\r\n\r\n在网站根目录下新建 `.htaccess`，添加以下内容\r\n\r\n{message type=\"error\"}注意: 是网站根目录，不是 Apache 的根目录 ::(17@Baidu.png)。{/message}\r\n\r\n``` shell\r\nRewriteEngine on\r\nRewriteCond %{REQUEST_FILENAME} !-d\r\nRewriteCond %{REQUEST_FILENAME} !-f\r\nRewriteRule ^(.*)$ index.php?/$1 [QSA,PT,L]\r\n```",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 19,
        "likeCount": 0
    },
    {
        "id": 10,
        "title": "React Native 引用原生 View ( Android &amp; iOS 语言描述 )",
        "slug": "ReactNativeUsingNativeViews",
        "createTime": "2021-03-25 10:48:00",
        "updateTime": "2021-05-31 03:42:31",
        "message": "<!--markdown--># 前言\r\n前面说过原生 `Module`，今天说说 `JS` 怎么调原生 `View`。主要是吧，这个东西本来我想丢给原生同事来做，一想算了，还是自己搞定吧 ::(1@Wechat.png)。原生搞这东西画页面就得花半天 ::(1@Baidu.png)。\r\n\r\n{message type=\"info\"}这个写的比较简单，主要是没有传参数以及 View 的回调等，如果以后有扩展接着补充。{/message}\r\n\r\n\r\n# 准备工作\r\n\r\n> 为了简单起见，我就不改布局文件了，他这个主要集成了三方的 `View`，所以搞起来很蛋疼，我就写简单点 ::(7@Baidu.png)。\r\n\r\n## Android\r\n### MyECGViewManager.java\r\n\r\n``` java\r\npackage com.renphoecg.modules;\r\n\r\nimport android.content.Context;\r\nimport android.view.View;\r\n\r\nimport com.borsam.ble.callback.SimpleBorsamBleDataCallback;\r\nimport com.borsam.blecore.exception.BleException;\r\nimport com.borsam.device.callback.OnAddPointListener;\r\nimport com.borsam.widget.ECGView;\r\nimport com.facebook.react.bridge.ReactContext;\r\nimport com.facebook.react.uimanager.SimpleViewManager;\r\nimport com.facebook.react.uimanager.ThemedReactContext;\r\nimport com.facebook.react.uimanager.annotations.ReactProp;\r\nimport com.renphoecg.MainApplication;\r\nimport com.renphoecg.R;\r\n\r\nimport javax.annotation.Nonnull;\r\n\r\npublic class MyECGViewManager extends SimpleViewManager<View> {\r\n\r\n    private Context context = null;\r\n\r\n    @Nonnull\r\n    @Override\r\n    public String getName() {\r\n        return \"MyECGView\";\r\n    }\r\n\r\n    @Nonnull\r\n    @Override\r\n    protected View createViewInstance(@Nonnull ThemedReactContext reactContext) {\r\n        this.context = reactContext;\r\n        View view = View.inflate(reactContext, R.layout.view_my_ecg, null);\r\n        ECGView ecgView = view.findViewById(R.id.view_my_ecg_view);\r\n        ecgView.setECGParams(MainApplication.getInstance().device);\r\n        //IMPORTANT:set this listener to display data\r\n        MainApplication.getInstance().device.getData(new SimpleBorsamBleDataCallback() {\r\n            @Override\r\n            public void onDataSuccess() {\r\n            }\r\n\r\n            @Override\r\n            public void onDataFailure(BleException e) {\r\n            }\r\n\r\n            @Override\r\n            public void onDataProgress(float second) {\r\n\r\n            }\r\n        });\r\n\r\n        MainApplication.getInstance().device.setOnAddPointListener(new OnAddPointListener() {\r\n            @Override\r\n            public void onAddPoint(int point, int passageIndex) {\r\n                //IMPORTANT:Call this method ECG to display data\r\n                reactContext.getCurrentActivity().runOnUiThread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        System.out.println(point + \" \" + passageIndex);\r\n                        ecgView.addPoint(point, passageIndex);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return view;\r\n    }\r\n}\r\n```\r\n\r\n### view_my_ecg.xml\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:orientation=\"vertical\" android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n    <com.borsam.widget.ECGView\r\n        android:layout_weight=\"1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dip\"\r\n        android:id=\"@+id/view_my_ecg_view\"\r\n        />\r\n</LinearLayout>\r\n```\r\n\r\n## iOS\r\n### MyECGViewManager.h\r\n``` c\r\n//\r\n//  MyECGViewManager.h\r\n//  RenphoECG\r\n//\r\n//  Created by Simon on 2021/4/7.\r\n//  Copyright © 2021 Facebook. All rights reserved.\r\n//\r\n\r\n#import \"MyECGViewManager.h\"\r\n#import <React/RCTViewManager.h>\r\n\r\nNS_ASSUME_NONNULL_BEGIN\r\n\r\n@interface MyECGViewManager : RCTViewManager<RCTBridgeModule>\r\n\r\n@end\r\n\r\nNS_ASSUME_NONNULL_END\r\n```\r\n\r\n### MyECGViewManager.m\r\n``` c\r\n//\r\n//  MyECGViewManager.m\r\n//  RenphoECG\r\n//\r\n//  Created by Simon on 2021/4/7.\r\n//  Copyright © 2021 Facebook. All rights reserved.\r\n//\r\n\r\n#import \"MyECGViewManager.h\"\r\n#import \"MyECGView.h\"\r\n#import \"ECGManage.h\"\r\n\r\n#define ECGDeviceDataChanged @\"DeviceDataChanged\"\r\n\r\n@implementation MyECGViewManager\r\n\r\nRCT_EXPORT_MODULE();\r\n\r\n/** 声明支持的事件 iOS调RN */\r\n- (NSArray<NSString *> *)supportedEvents\r\n{\r\n    return @[ECGDeviceDataChanged];\r\n}\r\n\r\n- (UIView *)view {\r\n    \r\n    __weak __typeof(self)weakSelf = self;\r\n    MyECGView *ecgView = [[MyECGView alloc] initWithCardioEqui:(CardioEqui *)[ECGManage shareInstance].selectEqui];\r\n    ecgView.ECGHeartBlock = ^(NSInteger hr) {\r\n        NSString *bmpStr = [NSString stringWithFormat:@\"{\\\"type\\\": \\\"bmp\\\", \\\"data\\\": %ld}\", (long)hr];\r\n        NSArray *args = @[bmpStr];\r\n        [weakSelf.bridge enqueueJSCall:@\"RCTDeviceEventEmitter\" method:@\"emit\"\r\n                                  args:@[ECGDeviceDataChanged, args] completion:NULL];\r\n    };\r\n    ecgView.ECGBatteryBlock = ^(NSInteger battery) {\r\n        NSString *bmpStr = [NSString stringWithFormat:@\"{\\\"type\\\": \\\"battery\\\", \\\"data\\\": %ld}\", (long)battery];\r\n        NSArray *args = @[bmpStr];\r\n        [weakSelf.bridge enqueueJSCall:@\"RCTDeviceEventEmitter\" method:@\"emit\"\r\n                                  args:@[ECGDeviceDataChanged, args] completion:NULL];\r\n    };\r\n    return ecgView;\r\n//    UIView *testView = [[UIView alloc] init];\r\n//    testView.backgroundColor = [UIColor greenColor];\r\n//    return testView;\r\n}\r\n@end\r\n```\r\n\r\n### MyECGView.h\r\n``` c\r\n//\r\n//  MyECGView.h\r\n//  RenphoECG\r\n//\r\n//  Created by Simon on 2021/4/7.\r\n//  Copyright © 2021 Facebook. All rights reserved.\r\n//\r\n\r\n#import <UIKit/UIKit.h>\r\n@class CardioEqui;\r\nNS_ASSUME_NONNULL_BEGIN\r\n\r\n@interface MyECGView : UIView\r\n\r\n@property (nonatomic, copy) void(^ECGHeartBlock)(NSInteger hr);\r\n@property (nonatomic, copy) void(^ECGBatteryBlock)(NSInteger battery);\r\n//@property (nonatomic, copy) void(^ECGReportBlock)(NSString *reportPath);\r\n\r\n/** 初始化对象 */\r\n- (instancetype)initWithCardioEqui:(CardioEqui *)equi;\r\n\r\n@end\r\n\r\nNS_ASSUME_NONNULL_END\r\n```\r\n\r\n### MyECGView.m\r\n``` c\r\n//\r\n//  MyECGView.m\r\n//  RenphoECG\r\n//\r\n//  Created by Simon on 2021/4/7.\r\n//  Copyright © 2021 Facebook. All rights reserved.\r\n//\r\n\r\n#import \"MyECGView.h\"\r\n#import <CardioEquipment/CardioEcgEqui.h>\r\n#import \"CBEKTypeChart.h\"\r\n#import \"MGSArrhythmiaMode.h\"\r\n#import \"CBSProgressBar.h\"\r\n#import \"CBSCheckTestInfoView.h\"\r\n#import \"ECGManage.h\"\r\n\r\n#import <CardioReports/MKNReportCentral.h>\r\n#import <CardioReports/MKNEcgReportDevInfo.h>\r\n\r\n#define IOSScreenWidth   ([UIScreen mainScreen].bounds.size.width)\r\n#define IOSScreenRatioW  IOSScreenWidth / 375.0f\r\n\r\n@interface MyECGView ()<MGSCheckModeDelegate>\r\n\r\n//@property (nonatomic,strong)CBSCheckTestInfoView *testInfoView;\r\n@property (nonatomic,strong)CBEKTypeChart *chart;\r\n@property (nonatomic,strong)MGSArrhythmiaMode *mode;\r\n@property (nonatomic, weak) CardioEqui *equi;\r\n//@property (nonatomic,strong)CBSProgressBar *progressBar;\r\n\r\n@end\r\n\r\n@implementation MyECGView\r\n\r\n- (instancetype)initWithCardioEqui:(CardioEqui *)equi\r\n{\r\n    self = [super init];\r\n    if (self) {\r\n        self.equi = equi;\r\n        [self setupUI];\r\n        [self setupMode];\r\n    }\r\n    return self;\r\n}\r\n\r\n#pragma mark -\r\n-(void)setupUI{\r\n    BOOL isPhoneX = ([[UIApplication sharedApplication] statusBarFrame].size.height == 44);\r\n    CGFloat navBarHeight =  isPhoneX?88:64;\r\n    \r\n//    self.testInfoView = [[CBSCheckTestInfoView alloc]init];\r\n//    self.testInfoView.frame = (CGRect){0,navBarHeight,self.view.frame.size.width,88};\r\n//    [self.view addSubview:self.testInfoView];\r\n    \r\n    self.chart = [[CBEKTypeChart alloc] initWithFrame:CGRectMake(0, 0, IOSScreenRatioW * 327, IOSScreenRatioW * 295)];\r\n    [self addSubview:self.chart];\r\n    \r\n    CardioEcgEqui *equi = (CardioEcgEqui *)self.equi;\r\n    self.chart.hz = equi.hz;\r\n    switch (self.equi.deviceType) {\r\n        case CardioDeviceTypeUN:\r\n        case CardioDeviceTypeMAX:\r\n        {\r\n            self.chart.areaHeight = self.chart.bounds.size.height;\r\n            self.chart.lineNames = @[@\"I\"];\r\n        }\r\n            break;\r\n        case CardioDeviceTypePLUS:\r\n        {\r\n            self.chart.areaHeight = 200;\r\n            self.chart.lineNames = @[@\"I\",@\"II\",@\"III\"];\r\n        }\r\n            break;\r\n        case CardioDeviceTypeLTS:\r\n        {\r\n            self.chart.areaHeight = 200;\r\n            self.chart.lineNames = @[@\"I\",@\"II\",@\"III\"];\r\n        }\r\n            break;\r\n        case CardioDeviceType6L:\r\n        {\r\n            self.chart.areaHeight = 100;\r\n            self.chart.lineNames = @[@\"I\",@\"II\",@\"III\",@\"AVR\",@\"AVL\",@\"AVF\"];\r\n        }\r\n            break;\r\n        case CardioDeviceType8L:\r\n        {\r\n            self.chart.areaHeight = 200;\r\n            self.chart.lineNames = @[@\"I\",@\"II\",@\"V1\",@\"V2\",@\"V3\",@\"V4\",@\"V5\",@\"V6\"];\r\n        }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    self.chart.speed = 25;\r\n    self.chart.gain  = 10;\r\n    [self.chart update];\r\n    \r\n//    self.progressBar = [[CBSProgressBar alloc]initWithFrame:(CGRect){self.view.bounds.size.width - 60,self.view.bounds.size.height - 60,50,50}];\r\n//    self.progressBar.shape = CBSProgressBarShapeRing;\r\n//    [self addSubview:self.progressBar];\r\n}\r\n\r\n-(void)setupMode{\r\n    self.mode = [[MGSArrhythmiaMode alloc]init];\r\n    self.mode.equi          = self.equi;\r\n    self.mode.delegate      = self;\r\n    self.mode.hrSwitch      = YES;\r\n    self.mode.filterSwitch  = NO;\r\n    [self.mode linkEqui];\r\n}\r\n\r\n#pragma mark -\r\n-(void)checkMode:(MGSArrhythmiaMode *)mode didRefreshByData:(id)data{\r\n    \r\n    CardioEcgEqui *equi = (CardioEcgEqui *)self.equi;\r\n\r\n    if (equi.dataStatus == 1) {\r\n        [self.chart clearOnlyWave];\r\n    }\r\n    [self.chart refreshAllLinesForValues:data];\r\n    \r\n    NSString *str1 = [NSString stringWithFormat:@\"Power : %ld%%\\n\",(long)equi.power];\r\n    NSString *str2 = [NSString stringWithFormat:@\"Total/Run: %ld s / %.0f s \\n\",(long)(equi.beginSeconds+equi.needSeconds+equi.endSeconds),equi.progress*(equi.beginSeconds+equi.needSeconds+equi.endSeconds)];\r\n    NSString *str4 = [NSString stringWithFormat:@\"HR:%ld\\n\",(long)mode.HR];\r\n    NSArray *texts = @[str1,str2,str4];\r\n    \r\n    NSMutableString *txt = [@\"\" mutableCopy];\r\n    for (NSString *str in texts) {\r\n        [txt appendFormat:@\"%@\",str];\r\n    }\r\n    \r\n//    self.testInfoView.textLabel.text = txt;\r\n//    self.testInfoView.debugTextView.text = equi.debugText;\r\n//\r\n//    [self.progressBar setProgress:equi.progress animated:YES];\r\n    \r\n    if (self.ECGHeartBlock) {\r\n        self.ECGHeartBlock(mode.HR);\r\n    }\r\n    if (self.ECGBatteryBlock) {\r\n        self.ECGBatteryBlock(equi.power);\r\n    }\r\n}\r\n\r\n-(void)checkMode:(MGSCheckMode *)mode didFinishWithData:(id)data{\r\n//    [SVProgressHUD setDefaultStyle:SVProgressHUDStyleDark];\r\n//    [SVProgressHUD showSuccessWithStatus:@\"传输完成\"];\r\n//    [SVProgressHUD dismissWithDelay:2];\r\n    \r\n    [ECGManage shareInstance].selectEqui = (CardioEcgEqui *)mode.equi;\r\n    [ECGManage shareInstance].data = data;\r\n}\r\n\r\n-(void)checkMode:(MGSCheckMode *)mode didDisConnectWithData:(id)data{\r\n    if (data && mode.equi.deviceType != CardioDeviceTypePLUS) {\r\n//        [self.navigationController popViewControllerAnimated:YES];\r\n    }\r\n}\r\n\r\n@end\r\n```\r\n\r\n\r\n# 使用\r\n``` javascript\r\nconst MyECGView = requireNativeComponent(\"MyECGView\", {\r\n  propTypes: {\r\n    color: PropTypes.number,\r\n    ...View.propTypes,\r\n  },\r\n});\r\n```\r\n\r\n``` javascript\r\n<MyECGView\r\n  style={{ height: df.scale(295), width: df.scale(327) }}\r\n/>\r\n```",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 21,
        "likeCount": 0
    },
    {
        "id": 11,
        "title": "MySQL 常见问题以及解决方案",
        "slug": "MySQLErrors",
        "createTime": "2021-03-14 01:35:00",
        "updateTime": "2021-04-14 11:04:46",
        "message": "<!--markdown--># 前言\r\n最近用 `MySQL` 遇见了很多坑，这里集中总结一下 ::(7@Baidu.png)。\r\n\r\n# 坑\r\n## 字段为 longtext，但是插入时报错\r\n\r\n理论上能存储 4G 还是 16G 我忘了，但是搞了一段长文字就报错了。\r\n\r\n``` sql\r\nshow variables like 'max_allowed_packet'\r\n```\r\n\r\n发现 `MySQL` 单次接受的最大包是 `2048 KB` ::(1@Wechat.png)。\r\n\r\n{message type=\"success\"}[mysqld] 下添加配置 max_allowed_packet = 10M{/message}\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 2,
        "lookCount": 38,
        "likeCount": 0
    },
    {
        "id": 12,
        "title": "百家讲坛 ( 中国评书网 ) 批量白嫖破解与下载 ( Java 语言描述 )",
        "slug": "ZGPingshuSpider",
        "createTime": "2021-02-15 22:48:00",
        "updateTime": "2021-03-20 23:38:10",
        "message": "<!--markdown--># 前言\r\n妈妈平时喜欢历史，受她的熏陶，我也很喜欢历史，尤其是明末清初的历史。正月初五快要回深圳了，临走的时候把我平时喜欢听的 `百家讲坛` 下载到 `U盘` 里面，放到录音机里给她听。\r\n\r\n确实是，现在做资源下载类的网站不赚钱。费带宽，费流量，赔本赚吆喝。所以很多都改成 某度云 分享了。但是 某度云 是限速的，要想正常下载，要花 30大洋。作为一名合格的白嫖 `Javaer` ，没有什么是写一个 `Spider` 解决不了的问题 ::(1@Baidu.png)。接下来就开始薅羊毛了，经过对比，发现中国评书网这个网站内容相对比来说比较全，所以，我就逮住它开始薅了 ::(8@Wechat.png)。\r\n\r\n# 结果\r\n结果很单纯，就是把好几百集百家讲坛都爬下来了 ::(11@Wechat.png)。\r\n![kmg9vbvs.png](http://www.cctv3.net/usr/uploads/2021/03/870690587.png)\r\n\r\n# 准备工作\r\n## 搞明白网站的结构\r\n\r\n### 找 URL 都有什么规律，他这个很明显是 http://www.zgpingshu.com/play/id/PageIndex.html\r\n\r\n1. `id` 代表 某一个专辑的 id\r\n2. `PageIndex` 表示第几集，它的第一集不是 1.html，直接后面什么都不用写，从第二集开始为 `PageIndex.html`\r\n\r\n``` java\r\nString.format(\"http://www.zgpingshu.com/play/%d/\", id) + (j == 1 ? \"\" : j + \".html\");\r\n```\r\n\r\n### 找 <audio /> 标签或者 .mp3 文件名\r\n这个比较坑，在网页源代码里面是有 <audio /> 标签的，但是 `Jsoup` 请求的时候就没有。然后我试着伪造 `User-Agent` 为手机请求也不管用 ::(86@Alibaba.png)。我怀疑应该是为了防止爬虫，在 `JS` 里面做了一些什么处理，符合一定的条件才会显示包含 <audio /> 的 <div />。就在这个时候，我爬网络请求，发现了一个接口，我的乖乖，弄了半天接口都直接暴露出来了 ::(3@Wechat.png)。\r\n\r\n``` json\r\n{\r\n\t\"urlpath\": \"http://ops101.zgpingshu.com/xxx.flv\",\r\n\t\"indexes\": [1, 2]\r\n}\r\n```\r\n\r\n后缀名是 `.flv`，经测试，手工改成 `.mp3` 可以正常播放和下载 ::(9@Wechat.png)。\r\n\r\n### 把 `专辑名` 和 `id` 以及集数放到 `JSON` 文件里面，`for` 循环，咣当咣当地下载 ::(18@Wechat.png)\r\n\r\n``` json\r\n[{\"id\": 332, \"name\": \"溥仪\", \"n\": 21}]\r\n```\r\n\r\n``` java\r\nString jsonStrings = FileUtils.readFileToString(new File(\"ZGPingshu.json\"), \"utf-8\");\r\nJSONArray array = new JSONArray(jsonStrings);\r\nfor (int i = 0; i < array.length(); i++) {\r\n    JSONObject jsonObject = array.getJSONObject(i);\r\n    int n = jsonObject.getInt(\"n\");\r\n    int id = jsonObject.getInt(\"id\");\r\n    String name = jsonObject.getString(\"name\");\r\n    System.out.println(String.format(\"Downloading %s\", jsonObject.getString(\"name\")));\r\n    for (int j = 1; j <= n; j++) {\r\n        index++;\r\n        String htmlUri = String.format(\"http://www.zgpingshu.com/play/%d/\", id) + (j == 1 ? \"\" : j + \".html\");\r\n        String mp3Uri = getMP3Uri(id, j);\r\n        String fileName = getFileName(htmlUri);\r\n        download(String.format(\"%03d\", index) + \".\" + name + \".\" + fileName + \".mp3\", mp3Uri);\r\n    }\r\n}\r\n```\r\n\r\n{message type=\"warning\"}这个地方最好是开个线程池，但是家庭带宽有限，多个线程合起来的下载速度应该是一样的。所以我就把原来线程池的写法删了。{/message}\r\n\r\n# 代码\r\n``` java\r\npackage net.cctv3.server.util;\r\n\r\nimport org.apache.commons.io.FileUtils;\r\nimport org.apache.commons.io.IOUtils;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.nodes.Document;\r\nimport org.jsoup.nodes.Element;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.List;\r\n\r\npublic class ZGPingshuSpider {\r\n    private static int index = 0;\r\n    public static void main(String[] args) {\r\n        try {\r\n            String jsonStrings = FileUtils.readFileToString(new File(\"ZGPingshu.json\"), \"utf-8\");\r\n            JSONArray array = new JSONArray(jsonStrings);\r\n            for (int i = 0; i < array.length(); i++) {\r\n                JSONObject jsonObject = array.getJSONObject(i);\r\n                int n = jsonObject.getInt(\"n\");\r\n                int id = jsonObject.getInt(\"id\");\r\n                String name = jsonObject.getString(\"name\");\r\n                System.out.println(String.format(\"Downloading %s\", jsonObject.getString(\"name\")));\r\n                for (int j = 1; j <= n; j++) {\r\n                    index++;\r\n                    String htmlUri = String.format(\"http://www.zgpingshu.com/play/%d/\", id) + (j == 1 ? \"\" : j + \".html\");\r\n                    String mp3Uri = getMP3Uri(id, j);\r\n                    String fileName = getFileName(htmlUri);\r\n                    download(String.format(\"%03d\", index) + \".\" + name + \".\" + fileName + \".mp3\", mp3Uri);\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private static String getMP3Uri(int id, int j) {\r\n        String result = \"\";\r\n        try {\r\n            URL url = new URL(String.format(\"http://m.zgpingshu.com/playdata/%d/\", id) + (j == 1 ? \"\" : j + \".html\"));\r\n            List<String> lines = IOUtils.readLines(url.openStream(), \"utf-8\");\r\n            StringBuilder builder = new StringBuilder();\r\n            for (String s : lines) {\r\n                builder.append(s);\r\n            }\r\n            JSONObject jsonObject = new JSONObject(builder.toString());\r\n            result = jsonObject.getString(\"urlpath\");\r\n        } catch (MalformedURLException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return result.replace(\".flv\", \".mp3\");\r\n    }\r\n\r\n    private static String getFileName(String htmlUri) {\r\n        String result = \"\";\r\n        try {\r\n            Document document = Jsoup.connect(htmlUri).header(\"User-Agent\", \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1\").get();\r\n            Element title = document.getElementsByTag(\"head\").first().getElementsByTag(\"title\").first();\r\n            result = title.text().replace(\"评书网\", \"\").trim();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static void download(String fileName, String mp3Uri) {\r\n        long start = System.currentTimeMillis();\r\n        System.out.println(\"Downloading: \");\r\n        System.out.println(\"File name: \" + fileName);\r\n        System.out.println(\"MP3 uri: \" + mp3Uri);\r\n        File file = new File(fileName);\r\n        try {\r\n            if (!file.exists()) {\r\n                file.createNewFile();\r\n            }\r\n            FileOutputStream fos = new FileOutputStream(file);\r\n            URL url = new URL(mp3Uri);\r\n            IOUtils.copy(url.openStream(), fos);\r\n            fos.flush();\r\n            fos.close();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        long end = System.currentTimeMillis();\r\n        System.out.println(String.format(\"Saved file used %d ms\", (int) (end - start)));\r\n    }\r\n}\r\n```",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 150,
        "likeCount": 1
    },
    {
        "id": 13,
        "title": "JavaScript 常用代码片段整理",
        "slug": "JavaScriptCodeCards",
        "createTime": "2021-03-16 16:46:00",
        "updateTime": "2021-06-10 12:39:18",
        "message": "<!--markdown--># 前言\r\n简单记录一下吧，省的那天又找不到了 ::(1@Wechat.png)。\r\n\r\n# 代码\r\n## 主题的表情配置\r\n\r\n``` javascript\r\ncreateBiaoqingDatas() {\r\n  let datas = [\r\n    { name: \"Wechat\", value: \"微信\", n: 44 },\r\n    { name: \"Alibaba\", value: \"钉钉\", n: 107 },\r\n    { name: \"Baidu\", value: \"贴吧\", n: 68 },\r\n  ];\r\n  let result = Object.create(null);\r\n  for (let i = 0; i < datas.length; i++) {\r\n    let item = datas[i];\r\n    let containers = Array.from({ length: item.n }, (_, i) => ({\r\n      icon: `<img alt=\"\" src=\"/Facebook/${item.name}/${i + 1}@${\r\n        item.name\r\n      }.png\">`,\r\n      data: `::(${i + 1}@${item.name}.png)`,\r\n      text: \"\",\r\n    }));\r\n    let line = Object.create(null);\r\n    line.type = \"images\";\r\n    line.index = i;\r\n    line.container = containers;\r\n    result[item.value] = line;\r\n  }\r\n  console.log(JSON.stringify(result));\r\n}\r\n```\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 34,
        "likeCount": 0
    },
    {
        "id": 14,
        "title": "iOS 开发快速生成图标 ( 脚本语言描述 )",
        "slug": "iOSIconGenerator",
        "createTime": "2021-03-22 15:04:00",
        "updateTime": "2021-06-13 19:59:25",
        "message": "<!--markdown--># 前言\r\n脚本生成 `iOS` 图标，省时更省心 ::(1@Baidu.png)。\r\n\r\n![](http://www.cctv3.net/usr/uploads/2021/06/1468213759.gif)\r\n\r\n# 代码\r\n新建 `iOSIconGenerator.sh`，输入以下代码\r\n\r\n``` shell\r\n#!/bin/bash\r\n#\r\n# Copyright (C) 2018 smallmuou <smallmuou@163.com>\r\n#\r\n# Permission is hereby granted, free of charge, to any person obtaining a copy\r\n# of this software and associated documentation files (the \"Software\"), to deal\r\n# in the Software without restriction, including without limitation the rights\r\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n# copies of the Software, and to permit persons to whom the Software is furnished\r\n# to do so, subject to the following conditions:\r\n#\r\n# The above copyright notice and this permission notice shall be included in all\r\n# copies or substantial portions of the Software.\r\n#\r\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n# THE SOFTWARE.\r\n\r\nset -e\r\n\r\nspushd() {\r\n     pushd \"$1\" 2>&1> /dev/null\r\n}\r\n\r\nspopd() {\r\n     popd 2>&1> /dev/null\r\n}\r\n\r\ninfo() {\r\n     local green=\"\\033[1;32m\"\r\n     local normal=\"\\033[0m\"\r\n     echo -e \"[${green}INFO${normal}] $1\"\r\n}\r\n\r\ncmdcheck() {\r\n    command -v $1>/dev/null 2>&1 || { error >&2 \"Please install command $1 first.\"; exit 1; }\r\n}\r\n\r\nerror() {\r\n     local red=\"\\033[1;31m\"\r\n     local normal=\"\\033[0m\"\r\n     echo -e \"[${red}ERROR${normal}] $1\"\r\n}\r\n\r\nwarn() {\r\n     local yellow=\"\\033[1;33m\"\r\n     local normal=\"\\033[0m\"\r\n     echo -e \"[${yellow}WARNING${normal}] $1\"\r\n}\r\n\r\nyesno() {\r\n    while true;do\r\n    read -p \"$1 (y/n)\" yn\r\n    case $yn in\r\n        [Yy]) $2;break;;\r\n        [Nn]) exit;;\r\n        *) echo 'please enter y or n.'\r\n    esac\r\ndone\r\n}\r\n\r\ncurdir() {\r\n    if [ ${0:0:1} = '/' ] || [ ${0:0:1} = '~' ]; then\r\n        echo \"$(dirname $0)\"\r\n    elif [ -L $0 ];then\r\n        name=`readlink $0`\r\n        echo $(dirname $name)\r\n    else\r\n        echo \"`pwd`/$(dirname $0)\"\r\n    fi\r\n}\r\n\r\nmyos() {\r\n    echo `uname|tr \"[:upper:]\" \"[:lower:]\"`\r\n}\r\n\r\n#########################################\r\n###           GROBLE DEFINE           ###\r\n#########################################\r\n\r\nVERSION=2.0.0\r\nAUTHOR=smallmuou\r\n\r\n#########################################\r\n###             ARG PARSER            ###\r\n#########################################\r\n\r\nusage() {\r\nprog=`basename $0`\r\ncat << EOF\r\n$prog version $VERSION by $AUTHOR\r\nUSAGE: $prog [OPTIONS] srcfile dstpath\r\nDESCRIPTION:\r\n    This script aim to generate iOS/macOS/watchOS APP icons more easier and simply.\r\n    srcfile - The source png image. Preferably above 1024x1024\r\n    dstpath - The destination path where the icons generate to.\r\nOPTIONS:\r\n    -h      Show this help message and exit\r\nEXAMPLES:\r\n    $prog 1024.png ~/123\r\nEOF\r\nexit 1\r\n}\r\n\r\nwhile getopts 'h' arg; do\r\n    case $arg in\r\n        h)\r\n            usage\r\n            ;;\r\n        ?)\r\n            # OPTARG\r\n            usage\r\n            ;;\r\n    esac\r\ndone\r\n\r\nshift $(($OPTIND - 1))\r\n\r\n[ $# -ne 2 ] && usage\r\n\r\n#########################################\r\n###            MAIN ENTRY             ###\r\n#########################################\r\n\r\ncmdcheck sips\r\nsrc_file=$1\r\ndst_path=$2\r\n\r\n# check source file\r\n[ ! -f \"$src_file\" ] && { error \"The source file $src_file does not exist, please check it.\"; exit -1; }\r\n\r\n# check width and height\r\nsrc_width=`sips -g pixelWidth $src_file 2>/dev/null|awk '/pixelWidth:/{print $NF}'`\r\nsrc_height=`sips -g pixelHeight $src_file 2>/dev/null|awk '/pixelHeight:/{print $NF}'`\r\n\r\n[ -z \"$src_width\" ] &&  { error \"The source file $src_file is not a image file, please check it.\"; exit -1; }\r\n\r\nif [ $src_width -ne $src_height ];then\r\n    warn \"The height and width of the source image are different, will cause image deformation.\"\r\nfi\r\n\r\n# create dst directory\r\n[ ! -d \"$dst_path\" ] && mkdir -p \"$dst_path\"\r\n\r\n# ios sizes refer to https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/app-icon/\r\n# macos sizes refer to https://developer.apple.com/design/human-interface-guidelines/macos/icons-and-images/app-icon/\r\n# watchos sizes refer to https://developer.apple.com/design/human-interface-guidelines/watchos/icons-and-images/home-screen-icons/\r\n#\r\n#\r\n# name size\r\nsizes_mapper=`cat << EOF\r\nIcon-16         16\r\nIcon-16@2x      32\r\nIcon-32         32\r\nIcon-32@2x      64\r\nIcon-128        128\r\nIcon-128@2x     256\r\nIcon-256        256\r\nIcon-256@2x     256\r\nIcon-512        512\r\nIcon-512@2x     1024\r\nIcon-20         20\r\nIcon-20@2x      40\r\nIcon-20@3x      60\r\nIcon-29         29\r\nIcon-29@2x      58\r\nIcon-29@3x      87\r\nIcon-40         40\r\nIcon-40@2x      80\r\nIcon-40@3x      120\r\nIcon-60@2x      120\r\nIcon-60@3x      180\r\nIcon-76         76\r\nIcon-76@2x      152\r\nIcon-83.5@2x    167\r\nIcon-1024       1024\r\nIcon-24@2x      48\r\nIcon-27.5@2x    55\r\nIcon-86@2x      172\r\nIcon-98@2x      196\r\nIcon-108@2x     216\r\nIcon-44@2x      88\r\nIcon-50@2x      100\r\nEOF`\r\nOLD_IFS=$IFS\r\nIFS=$'\\n'\r\nsrgb_profile='/System/Library/ColorSync/Profiles/sRGB Profile.icc'\r\nfor line in $sizes_mapper\r\ndo\r\n    name=`echo $line|awk '{print $1}'`\r\n    size=`echo $line|awk '{print $2}'`\r\n    info \"Generate $name.png ...\"\r\n    if [ -f $srgb_profile ];then\r\n        sips --matchTo '/System/Library/ColorSync/Profiles/sRGB Profile.icc' -z $size $size $src_file --out $dst_path/$name.png >/dev/null 2>&1\r\n    else\r\n        sips -z $size $size $src_file --out $dst_path/$name.png >/dev/null\r\n    fi\r\ndone\r\ninfo \"Congratulation. All icons for iOS/macOS/watchOS APP are generate to the directory: $dst_path.\"\r\nIFS=$OLD_IFS\r\n```\r\n\r\n# 使用\r\n``` shell\r\nchmod 777 iOSIconGenerator.sh\r\n./iOSIconGenerator.sh /Users/mac/resources/icon.png /Users/mac/resources/resources\r\n```",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 16,
        "likeCount": 0
    },
    {
        "id": 15,
        "title": "Untitled.gif",
        "slug": "Untitled-gif",
        "createTime": "2021-06-13 19:56:35",
        "updateTime": "2021-06-13 19:56:35",
        "message": "a:5:{s:4:\"name\";s:12:\"Untitled.gif\";s:4:\"path\";s:35:\"/usr/uploads/2021/06/1468213759.gif\";s:4:\"size\";i:202860;s:4:\"type\";s:3:\"gif\";s:4:\"mime\";s:9:\"image/gif\";}",
        "order": 1,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 0,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 0,
        "likeCount": 0
    },
    {
        "id": 16,
        "title": "React Native 打包详解 ( Android 语言描述 )",
        "slug": "ReactNativeBuildAPK",
        "createTime": "2021-03-30 10:18:00",
        "updateTime": "2021-04-01 11:01:01",
        "message": "# 前言\r\n博客搬家了，很多东西找不到了，趁现在百度还有点痕迹，再整理一遍吧 ::(13@Wechat.png)。\r\n\r\n# 准备工作\r\n## keystore\r\n``` shell\r\nkeytool -genkey -v -keystore key.keystore -alias key-alias -keyalg RSA -keysize 2048 -validity 3650\r\n```\r\n\r\n``` shell\r\nrenpho@iMac RenphoECG % keytool -genkey -v -keystore key.keystore -alias key-alias -keyalg RSA -keysize 2048 -validity 3650\r\n输入密钥库口令:  \r\n再次输入新口令: \r\n您的名字与姓氏是什么?\r\n  [Unknown]:  Michael Sun\r\n您的组织单位名称是什么?\r\n  [Unknown]:  Renpho\r\n您的组织名称是什么?\r\n  [Unknown]:  React Native       \r\n您所在的城市或区域名称是什么?\r\n  [Unknown]:  Shenzhen\r\n您所在的省/市/自治区名称是什么?\r\n  [Unknown]:  Guangdong\r\n该单位的双字母国家/地区代码是什么?\r\n  [Unknown]:  zh\r\nCN=Michael Sun, OU=Renpho, O=React Native, L=Shenzhen, ST=Guangdong, C=zh是否正确?\r\n  [否]:  是 \r\n\r\n正在为以下对象生成 2,048 位RSA密钥对和自签名证书 (SHA256withRSA) (有效期为 3,650 天):\r\n\t CN=Michael Sun, OU=Renpho, O=React Native, L=Shenzhen, ST=Guangdong, C=zh\r\n输入 <key-alias> 的密钥口令\r\n\t(如果和密钥库口令相同, 按回车):  \r\n[正在存储key.keystore]\r\n\r\nWarning:\r\nJKS 密钥库使用专用格式。建议使用 \"keytool -importkeystore -srckeystore key.keystore -destkeystore key.keystore -deststoretype pkcs12\" 迁移到行业标准格式 PKCS12。\r\n```\r\n\r\n\r\n{message type=\"success\"}把刚才生成的 keystore 放到 keystores 文件夹里面{/message}\r\n\r\n![kmveb8tf.png](http://www.cctv3.net/usr/uploads/2021/03/626449957.png)\r\n\r\n## gradle-wapper.properties\r\n\r\n``` java\r\nMYAPP_RELEASE_STORE_FILE=key.keystore\r\nMYAPP_RELEASE_KEY_ALIAS=key-alias\r\nMYAPP_RELEASE_STORE_PASSWORD=123456\r\nMYAPP_RELEASE_KEY_PASSWORD=123456\r\n```\r\n## build.gradle\r\n\r\n``` java\r\napply plugin: \"com.android.application\"\r\n\r\nimport com.android.build.OutputFile\r\n\r\n/**\r\n * The react.gradle file registers a task for each build variant (e.g. bundleDebugJsAndAssets\r\n * and bundleReleaseJsAndAssets).\r\n * These basically call `react-native bundle` with the correct arguments during the Android build\r\n * cycle. By default, bundleDebugJsAndAssets is skipped, as in debug/dev mode we prefer to load the\r\n * bundle directly from the development server. Below you can see all the possible configurations\r\n * and their defaults. If you decide to add a configuration block, make sure to add it before the\r\n * `apply from: \"../../node_modules/react-native/react.gradle\"` line.\r\n *\r\n * project.ext.react = [\r\n *   // the name of the generated asset file containing your JS bundle\r\n *   bundleAssetName: \"index.android.bundle\",\r\n *\r\n *   // the entry file for bundle generation\r\n *   entryFile: \"index.android.js\",\r\n *\r\n *   // whether to bundle JS and assets in debug mode\r\n *   bundleInDebug: false,\r\n *\r\n *   // whether to bundle JS and assets in release mode\r\n *   bundleInRelease: true,\r\n *\r\n *   // whether to bundle JS and assets in another build variant (if configured).\r\n *   // See http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Build-Variants\r\n *   // The configuration property can be in the following formats\r\n *   //         'bundleIn${productFlavor}${buildType}'\r\n *   //         'bundleIn${buildType}'\r\n *   // bundleInFreeDebug: true,\r\n *   // bundleInPaidRelease: true,\r\n *   // bundleInBeta: true,\r\n *\r\n *   // whether to disable dev mode in custom build variants (by default only disabled in release)\r\n *   // for example: to disable dev mode in the staging build type (if configured)\r\n *   devDisabledInStaging: true,\r\n *   // The configuration property can be in the following formats\r\n *   //         'devDisabledIn${productFlavor}${buildType}'\r\n *   //         'devDisabledIn${buildType}'\r\n *\r\n *   // the root of your project, i.e. where \"package.json\" lives\r\n *   root: \"../../\",\r\n *\r\n *   // where to put the JS bundle asset in debug mode\r\n *   jsBundleDirDebug: \"$buildDir/intermediates/assets/debug\",\r\n *\r\n *   // where to put the JS bundle asset in release mode\r\n *   jsBundleDirRelease: \"$buildDir/intermediates/assets/release\",\r\n *\r\n *   // where to put drawable resources / React Native assets, e.g. the ones you use via\r\n *   // require('./image.png')), in debug mode\r\n *   resourcesDirDebug: \"$buildDir/intermediates/res/merged/debug\",\r\n *\r\n *   // where to put drawable resources / React Native assets, e.g. the ones you use via\r\n *   // require('./image.png')), in release mode\r\n *   resourcesDirRelease: \"$buildDir/intermediates/res/merged/release\",\r\n *\r\n *   // by default the gradle tasks are skipped if none of the JS files or assets change; this means\r\n *   // that we don't look at files in android/ or ios/ to determine whether the tasks are up to\r\n *   // date; if you have any other folders that you want to ignore for performance reasons (gradle\r\n *   // indexes the entire tree), add them here. Alternatively, if you have JS files in android/\r\n *   // for example, you might want to remove it from here.\r\n *   inputExcludes: [\"android/**\", \"ios/**\"],\r\n *\r\n *   // override which node gets called and with what additional arguments\r\n *   nodeExecutableAndArgs: [\"node\"],\r\n *\r\n *   // supply additional arguments to the packager\r\n *   extraPackagerArgs: []\r\n * ]\r\n */\r\n\r\nproject.ext.react = [\r\n        entryFile: \"index.js\"\r\n]\r\n\r\napply from: \"../../node_modules/react-native/react.gradle\"\r\n\r\n/**\r\n * Set this to true to create two separate APKs instead of one:\r\n *   - An APK that only works on ARM devices\r\n *   - An APK that only works on x86 devices\r\n * The advantage is the size of the APK is reduced by about 4MB.\r\n * Upload all the APKs to the Play Store and people will download\r\n * the correct one based on the CPU architecture of their device.\r\n */\r\ndef enableSeparateBuildPerCPUArchitecture = false\r\n\r\n/**\r\n * Run Proguard to shrink the Java bytecode in release builds.\r\n */\r\ndef enableProguardInReleaseBuilds = false\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.3\"\r\n    \r\n    packagingOptions {\r\n        pickFirst 'lib/x86/libc++_shared.so'\r\n        pickFirst 'lib/arm64-v8a/libc++_shared.so'\r\n        pickFirst 'lib/armeabi-v7a/libc++_shared.so'\r\n        pickFirst 'lib/x86_64/libc++_shared.so'\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    defaultConfig {\r\n        applicationId \"com.renphoecg\"\r\n        minSdkVersion 19\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n    }\r\n\r\n    // release 打包配置\r\n    signingConfigs {\r\n        release {\r\n            storeFile file('/Users/renpho/renpho-ecg/RenphoECG/android/keystores/key.keystore')\r\n            storePassword '123456'\r\n            keyAlias 'key-alias'\r\n            keyPassword '123456'\r\n        }\r\n    }\r\n\r\n    splits {\r\n        abi {\r\n            reset()\r\n            enable enableSeparateBuildPerCPUArchitecture\r\n            universalApk false  // If true, also generate a universal APK\r\n            include \"armeabi-v7a\", \"x86\", \"arm64-v8a\", \"x86_64\"\r\n        }\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled enableProguardInReleaseBuilds\r\n            proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\r\n            // release 打包配置\r\n            signingConfig signingConfigs.release\r\n        }\r\n    }\r\n    // applicationVariants are e.g. debug, release\r\n    applicationVariants.all { variant ->\r\n        variant.outputs.each { output ->\r\n            // For each separate APK per architecture, set a unique version code as described here:\r\n            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits\r\n            def versionCodes = [\"armeabi-v7a\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\r\n            def abi = output.getFilter(OutputFile.ABI)\r\n            if (abi != null) {  // null for the universal-debug, universal-release variants\r\n                output.versionCodeOverride =\r\n                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation \"com.android.support:appcompat-v7:+\"\r\n    implementation \"com.facebook.react:react-native:+\"  // From node_modules\r\n    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'\r\n    implementation(name: 'Borsamble1.2.3', ext: 'aar')\r\n    implementation project(':react-native-fs')\r\n    implementation project(':@react-native-community_async-storage')\r\n    implementation project(':react-native-gesture-handler')\r\n    implementation project(':react-native-picker')\r\n    implementation project(':react-native-linear-gradient')\r\n    implementation project(':react-native-cardview')\r\n    implementation project(':react-native-pdf')\r\n    implementation project(':rn-fetch-blob')\r\n}\r\n\r\n// Run this once to be able to run the application with BUCK\r\n// puts all compile dependencies into folder libs for BUCK to use\r\ntask copyDownloadableDepsToLibs(type: Copy) {\r\n    from configurations.compile\r\n    into 'libs'\r\n}\r\n```\r\n\r\n# 打包\r\n> cd android && ./gradlew assembleRelease\r\n\r\n\r\n{message type=\"error\"}打包时，务必保持所有的 modules 的SDK 版本号一致，否则会出各种各样奇怪的错误 ::(7@Baidu.png)。{/message}\r\n\r\n``` shell\r\nrenpho@iMac RenphoECG % cd android && ./gradlew assembleRelease\r\n\r\n> Configure project :react-native-picker\r\nWARNING: Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.\r\nIt will be removed soon. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html\r\n\r\n> Task :react-native-fs:compileReleaseJavaWithJavac\r\n注: /Users/renpho/renpho-ecg/RenphoECG/node_modules/react-native-fs/android/src/main/java/com/rnfs/RNFSManager.java使用或覆盖了已过时的 API。\r\n注: 有关详细信息, 请使用 -Xlint:deprecation 重新编译。\r\n\r\n> Task :react-native-gesture-handler:compileReleaseJavaWithJavac\r\n注: /Users/renpho/renpho-ecg/RenphoECG/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerButtonViewManager.java使用或覆盖了已过时的 API。\r\n注: 有关详细信息, 请使用 -Xlint:deprecation 重新编译。\r\n注: 某些输入文件使用了未经检查或不安全的操作。\r\n注: 有关详细信息, 请使用 -Xlint:unchecked 重新编译。\r\n\r\n> Task :react-native-picker:compileReleaseJavaWithJavac\r\n注: /Users/renpho/renpho-ecg/RenphoECG/node_modules/react-native-picker/android/src/main/java/com/beefe/picker/PickerViewModule.java使用或覆盖了已过时的 API。\r\n注: 有关详细信息, 请使用 -Xlint:deprecation 重新编译。\r\n\r\n> Task :app:bundleReleaseJsAndAssets\r\nwarning: the transform cache was reset.\r\nLoading dependency graph, done.\r\ninfo Writing bundle output to:, /Users/renpho/renpho-ecg/RenphoECG/android/app/build/generated/assets/react/release/index.android.bundle\r\ninfo Done writing bundle output\r\ninfo Copying 47 asset files\r\ninfo Done copying assets\r\n\r\n> Task :rn-fetch-blob:compileReleaseJavaWithJavac\r\n注: 某些输入文件使用或覆盖了已过时的 API。\r\n注: 有关详细信息, 请使用 -Xlint:deprecation 重新编译。\r\n\r\n> Task :app:stripReleaseDebugSymbols\r\nWARNING: Compatible side by side NDK version was not found. Default is 20.0.5594570.\r\nCompatible side by side NDK version was not found. Default is 20.0.5594570.\r\nUnable to strip the following libraries, packaging them as they are: libborsam.so, libborsam.so, libc++_shared.so, libc++_shared.so, libc++_shared.so, libc++_shared.so, libc++_shared.so, libc++_shared.so, libfb.so, libfb.so, libfb.so, libfb.so, libfolly_json.so, libfolly_json.so, libfolly_json.so, libfolly_json.so, libglog.so, libglog.so, libglog.so, libglog.so, libglog_init.so, libglog_init.so, libglog_init.so, libglog_init.so, libimagepipeline.so, libimagepipeline.so, libimagepipeline.so, libimagepipeline.so, libjniPdfium.so, libjniPdfium.so, libjniPdfium.so, libjniPdfium.so, libjniPdfium.so, libjniPdfium.so, libjsc.so, libjsc.so, libjsc.so, libjsc.so, libjscexecutor.so, libjscexecutor.so, libjscexecutor.so, libjscexecutor.so, libjsinspector.so, libjsinspector.so, libjsinspector.so, libjsinspector.so, libmodft2.so, libmodft2.so, libmodft2.so, libmodft2.so, libmodft2.so, libmodft2.so, libmodpdfium.so, libmodpdfium.so, libmodpdfium.so, libmodpdfium.so, libmodpdfium.so, libmodpdfium.so, libmodpng.so, libmodpng.so, libmodpng.so, libmodpng.so, libmodpng.so, libmodpng.so, libreactnativejni.so, libreactnativejni.so, libreactnativejni.so, libreactnativejni.so, libyoga.so, libyoga.so, libyoga.so, libyoga.so.\r\n\r\nBUILD SUCCESSFUL in 1m 5s\r\n268 actionable tasks: 243 executed, 25 up-to-date\r\n\r\n```\r\n\r\n# 问题\r\n## APK 体积过大\r\n打开 `AndroidStudio` 自带的 `APK` 分析工具。可以看到为了兼容不同 `CPU 架构`，搞了很多 `So`，直接干掉。\r\n\r\n{message type=\"success\"}build.gradle → android → defaultConfig 节点里添加配置。{/message}\r\n\r\n``` java\r\ndefaultConfig {\r\n    applicationId \"com.renphoecg\"\r\n    minSdkVersion 19\r\n    targetSdkVersion 29\r\n    versionCode 1\r\n    versionName \"1.0\"\r\n    // 打包\r\n    // armeabi-v7a\r\n    ndk {\r\n        abiFilters \"armeabi-v7a\"\r\n    }\r\n}\r\n```\r\n\r\n> 配置前\r\n![kmy9xccl.png](http://www.cctv3.net/usr/uploads/2021/04/774897250.png)\r\n\r\n> 配置后\r\n![kmyad2ml.png](http://www.cctv3.net/usr/uploads/2021/04/1039395551.png)",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 2,
        "lookCount": 38,
        "likeCount": 0
    },
    {
        "id": 17,
        "title": "React Native Hooks 解析",
        "slug": "ReactNativeHooks",
        "createTime": "2021-03-31 10:19:00",
        "updateTime": "2021-05-19 11:01:50",
        "message": "<!--markdown--># 前言\r\n> Hooks 不用我过多介绍，现在 React Native 初始化完了项目以后都是函数式组件了 ::(6@Wechat.png)，都上形式好吧 ::(6@Baidu.png)。\r\n\r\n> Hooks are a new addition in React 16.8. They let you use state and other React features without writing a class.\r\n\r\n{message type=\"warning\"}这篇文章我就直接来实战 react + redux + hooks 用实际开发的业务，来对比一下业务代码处理的异同以及代码量等方面 ::(2@Wechat.png)。{/message}\r\n\r\n# 原理\r\n![kouvplr4.png](http://www.cctv3.net/usr/uploads/2021/05/2307008954.png)\r\n\r\n# 准备工作\r\n这里我就不扯 `class` 组件了，主要介绍我刚开始对于 `Hooks`  的一些疑问，这样儿才能显示出求学的态度 ::(1@Wechat.png)。\r\n\r\n> https://reactjs.org/docs/hooks-reference.html\r\n\r\n\r\n|  |  |\r\n|:-----|:----|\r\n|Basic Hooks|useState</br>userEffect</br>useContext|\r\n|BAdditionalHooks| userReducer</br>useCallback</br>useMemo</br>useRef</br>useImperativeHandle</br>useLayoutEffect</br>useDebugValue|\r\n\r\n\r\n## Redux 的 state→props 以及 dispatch→props 怎么注入到 函数组件里\r\n随便试了一下果然在预期以内 ::(8@Wechat.png)。\r\n![knkjqsg5.png](http://www.cctv3.net/usr/uploads/2021/04/3226102256.png)\r\n\r\n``` javascript\r\nconst Devices = function (props) {\r\n  console.log('Device props', props);\r\n  return <View />;\r\n};\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    device: state.setting.device,\r\n    user: state.user,\r\n    mode: state.mode,\r\n    language: state.setting.language,\r\n    waveFilter: state.setting.waveFilter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = function (dispatch) {\r\n  return {\r\n    updateSettingDevice: (device) =>\r\n      dispatch(actions.updateSettingDevice(device)),\r\n    updateSettingWaveFilter: (is) =>\r\n      dispatch(actions.updateSettingWaveFilter(is)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Devices);\r\n```\r\n\r\n# 功能测试\r\n## 页面生命周期\r\n\r\n### 类组件\r\n定义两个监听，然后分别到生命周期里面添加监听和移除监听 ::(3@Wechat.png) 。\r\n``` javascript\r\nconstructor(props) {\r\n  super(props);\r\n  this.pageBlur = null;\r\n  this.pageFocus = null;\r\n  this.state = {\r\n  };\r\n}\r\n\r\ncomponentDidMount() {\r\n  this.pageFocus = this.props.navigation.addListener('focus', () => {\r\n    console.log('Did focus');\r\n  });\r\n\r\n  this.pageBlur = this.props.navigation.addListener('blur', () => {\r\n    console.log(\"Didn't focus\");\r\n  });\r\n}\r\n\r\ncomponentWillMount() {}\r\n\r\ncomponentWillUnmount() {\r\n  this.pageBlur.remove();\r\n  this.pageFocus.remove();\r\n}\r\n```\r\n\r\n### 函数式组件\r\n直接来一个 useFocusEffect 搞定 ::(11@Wechat.png)::(11@Wechat.png)::(11@Wechat.png)::(11@Wechat.png)::(11@Wechat.png)::(11@Wechat.png)，什么乱七八糟的定义监听，移除监听，生命周期一大堆，全都是扯犊子 ::(86@Alibaba.png)。\r\n``` javascript\r\nuseFocusEffect(\r\n  React.useCallback(() => {\r\n    console.log('Did focus');\r\n    return () => {\r\n      console.log(\"Didn't focus\");\r\n    };\r\n  }, [devices]),\r\n);\r\n```\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 20,
        "likeCount": 0
    },
    {
        "id": 18,
        "title": "ReactNativeDebugger.jpg",
        "slug": "ReactNativeDebugger-jpg",
        "createTime": "2021-04-02 17:33:02",
        "updateTime": "2021-04-02 17:33:02",
        "message": "a:5:{s:4:\"name\";s:23:\"ReactNativeDebugger.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2021/04/1273834304.jpg\";s:4:\"size\";i:907959;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}",
        "order": 1,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 0,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 0,
        "likeCount": 0
    },
    {
        "id": 19,
        "title": "React Native 科学网络调试",
        "slug": "ReactNativeNetworkDebugger",
        "createTime": "2021-04-02 17:35:00",
        "updateTime": "2021-05-31 01:43:00",
        "message": "<!--markdown--># 前言\r\n\r\n{message type=\"error\"}更新: 此方法只适用于低版本的 React Native，新版本的 React Native 已经可以使用 Flipper 进行网络调试了 ::(6@Wechat.png)。{/message}\r\n\r\n> React Native 怎么调试网络这个问题，有的说改这个改那个，我 Google 了半圈、 StackOverflow 了半圈，最后发现了一个解决方案 ::(9@Wechat.png)。\r\n\r\n\r\n{message type=\"success\"}封装一个调试页面的弹窗，然后在页面的根布局加一个开关，开发环境需要的时候就把他打开 ::(1@Baidu.png)。{/message}\r\n\r\n\r\n![](http://www.cctv3.net/usr/uploads/2021/04/1273834304.jpg)\r\n\r\n# 准备工作\r\n## 封装 NetworkDebuggerModal\r\n\r\n``` javascript\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  Modal,\r\n} from \"react-native\";\r\n\r\nimport * as x from \"../x\";\r\nimport PropTypes from \"prop-types\";\r\nimport DeviceFactory from \"./DeviceFactory\";\r\nimport NetworkLogger from \"react-native-network-logger\";\r\n\r\nconst df = new DeviceFactory(375);\r\n\r\nclass NetworkDebuggerModal extends React.Component {\r\n  static propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentWillMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <Modal transparent={true} visible={this.props.show} animationType=\"slide\">\r\n        <View style={{ flexDirection: \"column\", display: \"flex\", flex: 1 }}>\r\n          <TouchableOpacity\r\n            style={{ height: x.DEVICE.HEIGHT / 5 }}\r\n            onPress={() => this.props.onClose()}\r\n          />\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: \"column\",\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <NetworkLogger theme=\"dark\" />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NetworkDebuggerModal;\r\n```\r\n\r\n## 配置环境\r\n``` javascript\r\nexport const DEVICE = {\r\n  ENVIRONMENT: \"dev\", // dev alpha production\r\n};\r\n```\r\n\r\n# 使用\r\n\r\n``` javascript\r\n<View style={{ flexDirection: \"column\", display: \"flex\", flex: 1 }}>\r\n  <App />\r\n  {x.DEVICE.ENVIRONMENT == \"dev\" ? (\r\n    <TouchableOpacity\r\n      style={{\r\n        paddingHorizontal: 12,\r\n        paddingVertical: 2,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        position: \"absolute\",\r\n        flexDirection: \"row\",\r\n        bottom: 32,\r\n        right: 16,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 8,\r\n      }}\r\n      onPress={() => {\r\n        this.setState({\r\n          isShowNetworkDebugger: true,\r\n        });\r\n      }}\r\n    >\r\n      <Image\r\n        source={require(\"./images/debug_network.png\")}\r\n        style={{ height: 24, width: 24 }}\r\n      />\r\n\r\n      <Text style={{ fontSize: 16, color: \"black\" }}>\r\n        网络请求管理大师\r\n      </Text>\r\n    </TouchableOpacity>\r\n  ) : null}\r\n  <NetworkDebuggerModal\r\n    show={this.state.isShowNetworkDebugger}\r\n    onClose={() => {\r\n      this.setState({ isShowNetworkDebugger: false });\r\n    }}\r\n  />\r\n  <Toast ref={(toast) => (this.toast = toast)} />\r\n</View>\r\n```",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 40,
        "likeCount": 0
    },
    {
        "id": 20,
        "title": "FFmpeg 常用命令整理",
        "slug": "FFmpegShells",
        "createTime": "2021-04-05 22:40:00",
        "updateTime": "2021-09-15 09:19:11",
        "message": "<!--markdown--># 前言\r\n> 人丑就得多读书，FFmpeg 命令整理下 ::(1@Wechat.png)。\r\n\r\n# 命令\r\n## 修改文件属性\r\n![](http://www.cctv3.net/usr/uploads/2021/04/1560036471.jpg)\r\n\r\n``` java\r\nffmpeg -i 12.明清（一）.mp3 -metadata title=\"12.明清 ( 一 )\" -metadata artist=\"Test artist\" -metadata album=\"Test album\" -metadata album_artist=\"Test album artist\" -metadata comment=\"Test Comment\" 12.明清A.mp3\r\n```\r\n\r\n``` java\r\nlocalhost:3.中国古代史（17集全） www.cctv3.net$ ffmpeg -i 12.明清（一）.mp3 -metadata title=\"12.明清 ( 一 )\" -metadata artist=\"Test artist\" -metadata album=\"Test album\" -metadata album_artist=\"Test album artist\" -metadata comment=\"Test Comment\" 12.明清A.mp3\r\nffmpeg version 4.2.1 Copyright (c) 2000-2019 the FFmpeg developers\r\n  built with Apple clang version 11.0.0 (clang-1100.0.33.8)\r\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/4.2.1_2 --enable-shared --enable-pthreads --enable-version3 --enable-avresample --cc=clang --host-cflags='-I/Library/Java/JavaVirtualMachines/adoptopenjdk-13.jdk/Contents/Home/include -I/Library/Java/JavaVirtualMachines/adoptopenjdk-13.jdk/Contents/Home/include/darwin -fno-stack-check' --host-ldflags= --enable-ffplay --enable-gnutls --enable-gpl --enable-libaom --enable-libbluray --enable-libmp3lame --enable-libopus --enable-librubberband --enable-libsnappy --enable-libtesseract --enable-libtheora --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxvid --enable-lzma --enable-libfontconfig --enable-libfreetype --enable-frei0r --enable-libass --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-librtmp --enable-libspeex --enable-libsoxr --enable-videotoolbox --disable-libjack --disable-indev=jack\r\n  libavutil      56. 31.100 / 56. 31.100\r\n  libavcodec     58. 54.100 / 58. 54.100\r\n  libavformat    58. 29.100 / 58. 29.100\r\n  libavdevice    58.  8.100 / 58.  8.100\r\n  libavfilter     7. 57.100 /  7. 57.100\r\n  libavresample   4.  0.  0 /  4.  0.  0\r\n  libswscale      5.  5.100 /  5.  5.100\r\n  libswresample   3.  5.100 /  3.  5.100\r\n  libpostproc    55.  5.100 / 55.  5.100\r\n[mp3 @ 0x7fd339808a00] Estimating duration from bitrate, this may be inaccurate\r\nInput #0, mp3, from '12.明清（一）.mp3':\r\n  Metadata:\r\n    comment         : ÓÐÉùÌýÊé°É www.Ysts8.com\r\n    album           : ÁúÃÅ¿ÎÕ»¶þºÅµê\r\n    album_artist    : ÁúÃÅ¿ÎÕ»¶þºÅµê\r\n    title           : ÁúÃÅ¿ÎÕ»¶þºÅµê\r\n    artist          : ÁúÃÅ¿ÎÕ»¶þºÅµê\r\n  Duration: 01:38:16.61, start: 0.000000, bitrate: 32 kb/s\r\n    Stream #0:0: Audio: mp3, 16000 Hz, mono, fltp, 32 kb/s\r\nStream mapping:\r\n  Stream #0:0 -> #0:0 (mp3 (mp3float) -> mp3 (libmp3lame))\r\nPress [q] to stop, [?] for help\r\nOutput #0, mp3, to '12.明清A.mp3':\r\n  Metadata:\r\n    TPE2            : Test album artist\r\n    TPE1            : Test artist\r\n    TALB            : Test album\r\n    TIT2            : 12.明清 ( 一 )\r\n    comment         : Test Comment\r\n    TSSE            : Lavf58.29.100\r\n    Stream #0:0: Audio: mp3 (libmp3lame), 16000 Hz, mono, fltp\r\n    Metadata:\r\n      encoder         : Lavc58.54.100 libmp3lame\r\nsize=   17275kB time=01:38:16.47 bitrate=  24.0kbits/s speed= 141x    \r\nvideo:0kB audio:17275kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 0.002035%\r\nlocalhost:3.中国古代史（17集全） www.cctv3.net$ \r\n```\r\n\r\n## 复制视频流\r\n默认是一帧一帧的读取，速度很慢 ::(7@Baidu.png)。\r\n\r\n``` shell\r\nffmpeg -i m.flv -vcodec copy -acodec copy m.mp4\r\n```\r\n\r\n## 多文件合并\r\n创建 `main.txt` 写入以下内容 ::(86@Alibaba.png)。\r\n\r\n![kt8flsss.png](http://www.cctv3.net/usr/uploads/2021/09/462939878.png)\r\n\r\n``` javascript\r\nfor (let i = 0; i < 22; i++) {\r\n\tconsole.log(`file '${i}.blv'`);\r\n}\r\n```\r\n\r\n然后执行以下命令: \r\n\r\n``` shell\r\nffmpeg -f concat -i main.txt -vcodec copy -acodec copy 九香.mp4\r\n```",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 26,
        "likeCount": 0
    },
    {
        "id": 21,
        "title": "FFmpegShells01.jpg",
        "slug": "FFmpegShells01-jpg",
        "createTime": "2021-04-05 23:19:43",
        "updateTime": "2021-04-05 23:19:43",
        "message": "a:5:{s:4:\"name\";s:18:\"FFmpegShells01.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2021/04/1560036471.jpg\";s:4:\"size\";i:350935;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}",
        "order": 2,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 0,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 0,
        "likeCount": 0
    },
    {
        "id": 22,
        "title": "React Native 各个版本的新特性研究 ( 0.59 + )",
        "slug": "ReactNativeVersions",
        "createTime": "2021-04-12 08:19:00",
        "updateTime": "2021-05-19 10:44:39",
        "message": "<!--markdown--># 前言\r\n> 现在用的 React Native 的版本是 0.59.10，因为从这个版本以后 iOS 默认以 Pod 作为包管理工具了，但是组里别人的不能科学上网，所以版本还是用的旧的 ::(11@Baidu.png)。\r\n\r\n看了看官网，其实动作还是挺大的，所以觉得有必要多去了解下。\r\n\r\n| 版本号 | 时间 | 新特性 |\r\n|:---|:---|:---|\r\n| 0.63.4 | 2020-11-06 |  |\r\n| 0.62.2 | 2020-04-09 |  |\r\n| 0.61.5 | 2019-11-23 |  |\r\n| 0.60.6 | 2019-09-25 |  |\r\n# 版本\r\n打字太麻烦了，直接上我整理的笔记吧 ::(17@Wechat.png)。\r\n![kouv2rxc.png](http://www.cctv3.net/usr/uploads/2021/05/872842869.png)",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 39,
        "likeCount": 0
    },
    {
        "id": 23,
        "title": "React Native RNFS ( react-native-fs )",
        "slug": "ReactNativeRNFS",
        "createTime": "2021-04-14 10:52:00",
        "updateTime": "2021-04-14 11:03:31",
        "message": "<!--markdown--># 前言\r\n废话不多说，直接切入正题 ::(1@Wechat.png)。\r\n# 准备工作\r\n``` java\r\nnpm install react-native-fs\r\nreact-native-link\r\n```\r\n\r\n# 使用\r\n## 文件下载\r\n``` javascript\r\nRNFS.downloadFile({\r\n  fromUrl: item.ecgImageUrl,\r\n  toFile: file,\r\n  progress: (res) => {\r\n    let percent =\r\n      parseFloat(\r\n        (res.bytesWritten / res.contentLength) * 100\r\n      ).toFixed(2) + \"%\";\r\n    this.setState({\r\n      progressText: \"下载进度: \" + percent,\r\n    });\r\n  },\r\n}).promise.then((r) => {\r\n  this.setState({\r\n    isShowProgress: false,\r\n    progressText: \"\",\r\n  });\r\n  if (r.statusCode == 200) {\r\n    this.props.onItemPress(item);\r\n  }\r\n});\r\n```\r\n\r\n## 文件上传\r\n> RNFS 对比起传统的 fecth + FormData 来说，个人感觉上传速度更快，而且还带上传的进度，起码用户知道上传了多少 ::(17@Wechat.png)。\r\n\r\n``` javascript\r\nlet service = new Service();\r\n// /data/data/com.renphoecg/files/2021-04-07·12-43-48.pdf\r\nRNFS.uploadFiles({\r\n  toUrl: service.getService() + x.API.upload.to,\r\n  files: [\r\n    {\r\n      filename: `${this.props.navigation.getParam(\"id\")}.pdf`,\r\n      name: \"files\",\r\n      filepath: `${\r\n        RNFS.DocumentDirectoryPath\r\n      }/${this.props.navigation.getParam(\"id\")}.pdf`,\r\n      type: \"multipart/form-data\",\r\n    },\r\n  ],\r\n  progress: (r) => {\r\n    this.setState({\r\n      waitViewText: `正在上传: ${parseFloat(\r\n        (r.totalBytesSent / r.totalBytesExpectedToSend) * 100\r\n      ).toFixed(2)}%`,\r\n    });\r\n  },\r\n}).promise.then((re) => {\r\n  let json = JSON.parse(re.body);\r\n  if (re.statusCode == 200) {\r\n    x.DEVICE.toast(\"文件上传成功 -_-||\");\r\n    this.setState({\r\n      waitViewText: \"正在上传表单 -_-||\",\r\n    });\r\n    service\r\n      .asyncPost(\r\n        service.getService() + x.API.generateReport.to,\r\n        JSON.stringify(\r\n          x.API.generateReport.data(\r\n            this.modeCode,\r\n            json.result[0].code,\r\n            selectUser.id,\r\n            parseInt(Math.random() * 168),\r\n            moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            this.props.device.ecg,\r\n            this.props.user\r\n          )\r\n        )\r\n      )\r\n      .then((formResult) => {\r\n        this.props.updateLastUploadTime(this.props.user.id);\r\n        this.setState({\r\n          isShowWaitView: false,\r\n        });\r\n        x.DEVICE.toast(\r\n          formResult.success\r\n            ? \"操作成功 -_-||\"\r\n            : \"操作失败 →_→\"\r\n        );\r\n      });\r\n  } else {\r\n    this.setState({\r\n      isShowWaitView: false,\r\n    });\r\n    x.DEVICE.toast(\"文件上传失败 →_→\");\r\n  }\r\n});\r\n```",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 130,
        "likeCount": 0
    },
    {
        "id": 24,
        "title": "JavaScript  图解",
        "slug": "JavaScriptXMind",
        "createTime": "2021-04-14 15:49:00",
        "updateTime": "2021-06-10 12:39:01",
        "message": "<!--markdown--># 前言\r\n晚上睡不着，在微信瞎逛竟然逛到了一些 `JavaScript` 的精华 ::(1@Wechat.png)。\r\n# 图解\r\n## JavaScript 代码的整体执行过程\r\n整体分 **编译阶段** 和 **运行阶段**。\r\n\r\n![kpbgq8d1.png](http://www.cctv3.net/usr/uploads/2021/05/3555449002.png)\r\n\r\n## 函数执行过程\r\n![kpbgrl0i.png](http://www.cctv3.net/usr/uploads/2021/05/1127660815.png)\r\n\r\n## 执行上下文\r\n![kpbgs64v.png](http://www.cctv3.net/usr/uploads/2021/05/1325951079.png)\r\n\r\n## 变量对象\r\n![kpbgsm2z.png](http://www.cctv3.net/usr/uploads/2021/05/1688611910.png)\r\n\r\n## 作用域\r\n![kpbgtdjt.png](http://www.cctv3.net/usr/uploads/2021/05/3642052603.png)\r\n\r\n## JavaScript查询方式\r\n![kpbguguc.png](http://www.cctv3.net/usr/uploads/2021/05/819309568.png)\r\n\r\n## 作用域链\r\n![kpbguw0n.png](http://www.cctv3.net/usr/uploads/2021/05/1492088197.png)\r\n\r\n## 闭包\r\n![kpbgvbuz.png](http://www.cctv3.net/usr/uploads/2021/05/2860993003.png)\r\n\r\n## this\r\n![kpbgvogr.png](http://www.cctv3.net/usr/uploads/2021/05/3061626815.png)\r\n\r\n## new\r\n![kpbgw90c.png](http://www.cctv3.net/usr/uploads/2021/05/1144097896.png)\r\n\r\n## 原型 / 构造 / 实例\r\n![kpbgxpcx.png](http://www.cctv3.net/usr/uploads/2021/05/3426689178.png)\r\n\r\n## 原型链\r\n![kpbgy603.png](http://www.cctv3.net/usr/uploads/2021/05/3195080018.png)\r\n\r\n## 事件循环\r\n![kpbgyjh8.png](http://www.cctv3.net/usr/uploads/2021/05/2703731649.png)",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 22,
        "likeCount": 0
    },
    {
        "id": 25,
        "title": "HTTP 浏览器缓存机制 ( 强制缓存和协商缓存 )",
        "slug": "HTTPCaches",
        "createTime": "2021-04-16 10:43:00",
        "updateTime": "2021-05-27 12:32:25",
        "message": "<!--markdown-->## 概述\r\n\r\n良好的缓存策略可以降低资源的重复加载提高网页的整体加载速度\r\n通常浏览器缓存策略分为两种：强缓存和协商缓存\r\n\r\n### 基本原理\r\n\r\n- 浏览器在加载资源时，根据请求头的`expires`和`cache-control`判断是否命中强缓存，是则直接从缓存读取资源，不会发请求到服务器。\r\n- 如果没有命中强缓存，浏览器一定会发送一个请求到服务器，通过`last-modified`和`etag`验证资源是否命中协商缓存，如果命中，服务器会将这个请求返回，但是不会返回这个资源的数据，依然是从缓存中读取资源\r\n- 如果前面两者都没有命中，直接从服务器加载资源\r\n\r\n### 相同点\r\n\r\n如果命中，都是从客户端缓存中加载资源，而不是从服务器加载资源数据；\r\n\r\n### 不同点\r\n\r\n强缓存不发请求到服务器，协商缓存会发请求到服务器。\r\n\r\n## 强缓存\r\n\r\n强缓存通过`Expires`和`Cache-Control`两种响应头实现\r\n\r\n### Expires\r\n\r\nExpires 是 http1.0 提出的一个表示资源过期时间的 header，它描述的是一个绝对时间，由服务器返回。\r\nExpires 受限于本地时间，如果修改了本地时间，可能会造成缓存失效\r\n\r\n``` shell\r\nExpires: Wed, 11 May 2018 07:20:00 GMT\r\n```\r\n\r\n### Cache-Control\r\n\r\nCache-Control 出现于 HTTP / 1.1，优先级高于 Expires ,表示的是相对时间\r\n\r\n``` shell\r\nCache-Control: max-age=315360000\r\n```\r\n\r\n### 题外 TIPS\r\n\r\n`Cache-Control: no-cache`不会缓存数据到本地的说法是错误的，详情《HTTP 权威指南》P182\r\n![0ae591a1-f6fa-4236-8588-9d9e300f8ca7](https://user-images.githubusercontent.com/25027560/38223488-c2bf4b76-371d-11e8-85ac-45fc8ed04dd4.png)\r\n\r\n`Cache-Control: no-store`才是真正的不缓存数据到本地\r\n`Cache-Control: public`可以被所有用户缓存（多用户共享），包括终端和 CDN 等中间代理服务器\r\n`Cache-Control: private`只能被终端浏览器缓存（而且是私有缓存），不允许中继缓存服务器进行缓存\r\n\r\n![4d1eeec3-1fc7-4347-a019-fcb2e9ba0b96](https://user-images.githubusercontent.com/25027560/38223493-c7ec919e-371d-11e8-8d72-8c6b0e4935a8.png)\r\n\r\n## 协商缓存\r\n\r\n当浏览器对某个资源的请求没有命中强缓存，就会发一个请求到服务器，验证协商缓存是否命中，如果协商缓存命中，请求响应返回的 http 状态为 304 并且会显示一个 Not Modified 的字符串\r\n\r\n协商缓存是利用的是`【Last-Modified，If-Modified-Since】`和`【ETag、If-None-Match】`这两对 Header 来管理的\r\n\r\n### Last-Modified，If-Modified-Since\r\n\r\n`Last-Modified` 表示本地文件最后修改日期，浏览器会在 request header 加上`If-Modified-Since`（上次返回的`Last-Modified`的值），询问服务器在该日期后资源是否有更新，有更新的话就会将新的资源发送回来\r\n\r\n但是如果在本地打开缓存文件，就会造成 Last-Modified 被修改，所以在 HTTP / 1.1 出现了 ETag\r\n\r\n### ETag、If-None-Match\r\n\r\n`Etag`就像一个指纹，资源变化都会导致 ETag 变化，跟最后修改时间没有关系，`ETag`可以保证每一个资源是唯一的\r\n\r\n`If-None-Match`的 header 会将上次返回的`Etag`发送给服务器，询问该资源的`Etag`是否有更新，有变动就会发送新的资源回来\r\n![070b6284-e835-4470-ac6e-7e1892fab369](https://user-images.githubusercontent.com/25027560/38223495-d02aec3e-371d-11e8-92ae-fe7c729ab6e5.png)\r\n\r\n`ETag`的优先级比`Last-Modified`更高\r\n\r\n具体为什么要用`ETag`，主要出于下面几种情况考虑：\r\n\r\n- 一些文件也许会周期性的更改，但是他的内容并不改变(仅仅改变的修改时间)，这个时候我们并不希望客户端认为这个文件被修改了，而重新 GET；\r\n- 某些文件修改非常频繁，比如在秒以下的时间内进行修改，(比方说 1s 内修改了 N 次)，If-Modified-Since 能检查到的粒度是 s 级的，这种修改无法判断(或者说 UNIX 记录 MTIME 只能精确到秒)；\r\n- 某些服务器不能精确的得到文件的最后修改时间。\r\n\r\n## 整体流程图\r\n\r\n![672fb4ce-28f9-498d-9140-b3ff9f47d62f](https://user-images.githubusercontent.com/25027560/38223505-d8ab53da-371d-11e8-9263-79814b6971a5.png)\r\n\r\n## 几种状态码的区别\r\n\r\n- `200`：强缓 Expires/Cache-Control 存失效时，返回新的资源文件\r\n- `200(from cache)`: 强缓 Expires/Cache-Control 两者都存在，未过期，Cache-Control 优先 Expires 时，浏览器从本地获取资源成功\r\n- `304(Not Modified )`：协商缓存 Last-modified/Etag 没有过期时，服务端返回状态码 304\r\n\r\n但是！但是！\r\n现在的`200(from cache)`已经变成了`from disk cache(磁盘缓存)`和`from memory cache(内存缓存)`两种\r\n打开 chrome 控制台看一下网络请求就知道了\r\n![f6b341a3-45d7-4284-a454-6e0613a5560c](https://user-images.githubusercontent.com/25027560/39228604-8b65e59c-4891-11e8-8c03-17edba87c690.png)\r\n具体两者的区别，暂时没有去深究，有兴趣的同学可以自己去研究\r\n\r\n### 如何选择合适的缓存\r\n\r\n大致的顺序\r\n\r\n- Cache-Control —— 请求服务器之前\r\n- Expires —— 请求服务器之前\r\n- If-None-Match (Etag) —— 请求服务器\r\n- If-Modified-Since (Last-Modified) —— 请求服务器\r\n\r\n协商缓存需要配合强缓存使用，如果不启用强缓存的话，协商缓存根本没有意义\r\n\r\n大部分 web 服务器都默认开启协商缓存，而且是同时启用【Last-Modified，If-Modified-Since】和【ETag、If-None-Match】\r\n\r\n但是下面的场景需要注意：\r\n\r\n- 分布式系统里多台机器间文件的 Last-Modified 必须保持一致，以免负载均衡到不同机器导致比对失败\r\n- 分布式系统尽量关闭掉 ETag ( 每台机器生成的 ETag 都会不一样 )\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 25,
        "likeCount": 0
    },
    {
        "id": 26,
        "title": "iTerm 2",
        "slug": "iTerm2",
        "createTime": "2021-04-28 11:33:00",
        "updateTime": "2021-09-15 09:18:54",
        "message": "<!--markdown--># 前言\r\n废话不多说了，赶紧上车吧 ::(11@Wechat.png)。\r\n\r\n# 配置\r\n### 底部 TabBar\r\n![ko0wh8g4.png](http://www.cctv3.net/usr/uploads/2021/04/2015757289.png)\r\n\r\n![ko0wj1md.png](http://www.cctv3.net/usr/uploads/2021/04/483967343.png)\r\n\r\n### oh-my-zsh\r\n\r\n{message type=\"success\"}sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" ::(1@Baidu.png){/message}\r\n\r\n``` java\r\nrenpho@iMac ~ % sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\r\nCloning Oh My Zsh...\r\nCloning into '/Users/renpho/.oh-my-zsh'...\r\nremote: Enumerating objects: 1206, done.\r\nremote: Counting objects: 100% (1206/1206), done.\r\nremote: Compressing objects: 100% (1172/1172), done.\r\nremote: Total 1206 (delta 20), reused 1094 (delta 15), pack-reused 0\r\nReceiving objects: 100% (1206/1206), 843.10 KiB | 754.00 KiB/s, done.\r\nResolving deltas: 100% (20/20), done.\r\n\r\nLooking for an existing zsh config...\r\nFound ~/.zshrc. Backing up to /Users/renpho/.zshrc.pre-oh-my-zsh\r\nUsing the Oh My Zsh template file and adding it to ~/.zshrc.\r\n\r\n         __                                     __\r\n  ____  / /_     ____ ___  __  __   ____  _____/ /_\r\n / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\\r\n/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /\r\n\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/\r\n                        /____/                       ....is now installed!\r\n\r\n\r\nBefore you scream Oh My Zsh! please look over the ~/.zshrc file to select plugins, themes, and options.\r\n\r\n• Follow us on Twitter: https://twitter.com/ohmyzsh\r\n• Join our Discord server: https://discord.gg/ohmyzsh\r\n• Get stickers, shirts, coffee mugs and other swag: https://shop.planetargon.com/collections/oh-my-zsh\r\n\r\ncompinit:503: no such file or directory: /usr/local/share/zsh/site-functions/_brew_cask\r\n```\r\n\r\n![ko0wlyiw.png](http://www.cctv3.net/usr/uploads/2021/04/4026333870.png)\r\n\r\n### 代码高亮\r\n\r\n{message type=\"success\"}brew install zsh-syntax-highlighting ::(1@Baidu.png){/message}\r\n\r\n![ko0wtm8i.png](http://www.cctv3.net/usr/uploads/2021/04/885243328.png)\r\n\r\n### 主题\r\n\r\n{message type=\"success\"}https://draculatheme.com/iterm/{/message}\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 36,
        "likeCount": 0
    },
    {
        "id": 27,
        "title": "JavaScript 面试之路 -- 微盟",
        "slug": "ShanghaiWeimeng",
        "createTime": "2021-05-27 21:59:00",
        "updateTime": "2021-05-29 11:08:02",
        "message": "<!--markdown--># 前言\r\n## 第一次面试 2020-05-27\r\n### 一面\r\n面试官下午打电话叮嘱我说，要准备电脑，要在线编程。用的腾讯视频会议的屏幕共享，后来才知道是手写算法 ::(1@Baidu.png)。\r\n因为约的第二天的小红书的面试，我以为是小红书的面试官打电话给我，因为之前也没说要在线 Coding ::(1@Wechat.png)。\r\n\r\n<img src=\"http://www.cctv3.net/usr/uploads/2021/05/3789974476.png\" alt=\"kp6zfwue.png\" width=\"33%\" />\r\n\r\n面试简单的自我介绍，简单的问了问为什么离职。\r\n\r\n> 有一个表单，如何在退出的时候判断用户是不是编辑过\r\n\r\n``` js\r\n思路好像不太对，如果不把每个表单的值取出来，可能就是缓存整个 form 表单，用 JS 闭包，然后退出的时候做判断\r\n```\r\n\r\n> A 电脑的用户窃取 B 电脑的 Cookie，伪装成 B 用户登录，如何在 Cookie 自身的安全机制上防止\r\n\r\n``` js\r\n不知道\r\n```\r\n\r\n> 在页面上面任意两个标签，找到他们最近的公共父节点的标签\r\n\r\n这只是个应用场景罢了，其实就是让你找一个二叉树里面两个节点的最近公共父节点。\r\n\r\n但是这个时间复杂度肯定是有问题的，以后有时间再补充吧。\r\n\r\n``` js\r\nfunction getCommonParentNode(a, b) {\r\n  return isCommonParent(a.getParent(), b)\r\n    ? a.getParent()\r\n    : getCommonParentNode(a.getParent(), b);\r\n}\r\n\r\nfunction isCommonParent(currentParent, child) {\r\n  while (child.getParent() != null) {\r\n    if (child.getParent() == currentParent) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n```\r\n\r\n\r\n> 在一个区间 [start, end] 里面找 n 个不相同的数\r\n\r\n这个先生成指定区间长度的数组，然后打乱顺序，最后直接对数组的前 n 个元素直接编号是 1 就行了，但是他告诉我说是 Math.random() 性能有损失，只能和 n 正相关，不能和区间长度正相关 ::(7@Baidu.png)。\r\n\r\n``` javascript\r\nfunction getRandomNumbers(start, end, n) {\r\n  return Array.from({ length: end - start }, (_, i) => 0)\r\n    .sort((a, b) => Math.random() < 0.5)\r\n    .slice(0, n)\r\n    .map((i) => i + start);\r\n}\r\n```\r\n\r\n> 实现一个函数 await sleep(3) 三秒后执行\r\n\r\n``` javascript\r\nconst sleep = async (n) => {\r\n  let seconds = 0;\r\n  let timer = setInterval(() => {\r\n    seconds++;\r\n    if (seconds == n) {\r\n      clearInterval(timer);\r\n      return;\r\n    }\r\n  }, n * 1000);\r\n};\r\n```\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 23,
        "likeCount": 0
    },
    {
        "id": 28,
        "title": "JavaScript 面试之路 -- 小红书",
        "slug": "Xiaohongshu",
        "createTime": "2021-05-29 11:15:00",
        "updateTime": "2021-05-29 11:47:50",
        "message": "<!--markdown--># 前言\r\n## 第一次面试 2020-05-28\r\n### 一面\r\n着重 `CSS` 和 `JS` 基础，除了常规的面试题还有两道手写代码的题。\r\n\r\n> 菲波那切数列\r\n\r\n这个就再简单不过了，`C语言` 的知识 ::(17@Wechat.png)。\r\n\r\n> 括号匹配 []{}()\r\n\r\n这个也是最基本的数据结构栈的一个应用 ::(1@Baidu.png)。\r\n\r\n\r\n{message type=\"success\"}依次把符号压栈，每次压栈前把当前栈顶元素与将要压栈的元素对比一下是否匹配，如果匹配，栈顶元素弹出。如果不匹配，元素压栈。其实到最后只是看这个符号栈是否为空就可以了 ::(2@Wechat.png)。{/message}\r\n\r\n\r\n但是因为 `JS` 数据结构用的不熟，当时只写出来了伪代码，并不能直接运行 ::(86@Alibaba.png)。\r\n\r\n第二天早上起来之后，自己封装数组，实现了一个栈，然后把功能实现了 ::(5@Alibaba.png)。\r\n\r\n![kp97csjn.png](http://www.cctv3.net/usr/uploads/2021/05/4292820019.png)\r\n\r\n``` javascript\r\nclass Stack {\r\n  constructor() {\r\n    this.array = [];\r\n  }\r\n  push(c) {\r\n    this.array.push(c);\r\n  }\r\n  pop() {\r\n    let c = this.peek();\r\n    this.array = this.array.slice(0, -1);\r\n    return c;\r\n  }\r\n  peek() {\r\n    return this.array[this.array.length - 1];\r\n  }\r\n  size() {\r\n    return this.array.length;\r\n  }\r\n}\r\n\r\nconst check = (s) => {\r\n  let stack = new Stack();\r\n  for (let i = 0; i < s.length; i++) {\r\n    let top = stack.peek();\r\n    if (\r\n      (top == \"[\" && s[i] == \"]\") ||\r\n      (top == \"{\" && s[i] == \"}\") ||\r\n      (top == \"(\" && s[i] == \")\")\r\n    ) {\r\n      stack.pop();\r\n    } else {\r\n      stack.push(s[i]);\r\n    }\r\n  }\r\n  return stack.size() == 0;\r\n};\r\n\r\nconsole.log(check(\"{{[()[]]}}(){[](){}}\"));\r\nconsole.log(check(\"[{()[()]{[(})]}}]\"));\r\nconsole.log(check(\"({{[()[]]}}()[])\"));\r\nconsole.log(check(\"[{()[()]{[(})]}]]\"));\r\n\r\n```\r\n\r\n后来我才发现，其实 `LeetCode` 里面有这个原题\r\nhttps://leetcode-cn.com/problems/valid-parentheses/submissions/\r\n\r\n![kp97pf09.png](http://www.cctv3.net/usr/uploads/2021/05/1435502021.png)\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 30,
        "likeCount": 0
    },
    {
        "id": 29,
        "title": "HTTP 0.9 1.0 1.1 2.0 3.0 的区别",
        "slug": "HTTP0-9to3-0",
        "createTime": "2021-05-31 03:40:53",
        "updateTime": "2021-05-31 03:40:53",
        "message": "<!--markdown--># 前言\r\n我们不生产 `HTTP`，我们只是 `HTTP` 的搬运工 ::(1@Baidu.png)。\r\n# 版本\r\n## 0.9\r\n![kpbl7181.png](http://www.cctv3.net/usr/uploads/2021/05/1285334591.png)\r\n\r\n## 1.0\r\n![kpbl7iqo.png](http://www.cctv3.net/usr/uploads/2021/05/687132096.png)\r\n\r\n## 1.1\r\n![kpbl7ygd.png](http://www.cctv3.net/usr/uploads/2021/05/1902282078.png)\r\n\r\n## 2.0\r\n![kpbl89tz.png](http://www.cctv3.net/usr/uploads/2021/05/3066393118.png)\r\n\r\n## 3.0\r\n![kpbl8jso.png](http://www.cctv3.net/usr/uploads/2021/05/1726998734.png)",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 36,
        "likeCount": 0
    },
    {
        "id": 30,
        "title": "setTimeout.gif",
        "slug": "setTimeout-gif",
        "createTime": "2021-06-05 10:39:21",
        "updateTime": "2021-06-05 10:39:21",
        "message": "a:5:{s:4:\"name\";s:14:\"setTimeout.gif\";s:4:\"path\";s:35:\"/usr/uploads/2021/06/1266263059.gif\";s:4:\"size\";i:38199;s:4:\"type\";s:3:\"gif\";s:4:\"mime\";s:9:\"image/gif\";}",
        "order": 6,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 0,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 0,
        "likeCount": 0
    },
    {
        "id": 31,
        "title": "Thinking in JavaScript -- 事件运行机制深度剖析 ( 从计时器的面试题谈起 )",
        "slug": "setTimeout",
        "createTime": "2021-06-05 10:39:00",
        "updateTime": "2021-06-10 12:38:41",
        "message": "<!--markdown--># 前言\r\n最近面试又有问这种无聊问题的 ::(2@Alibaba.png)，我个人就比较烦这个，搞个面试就问些歪门儿邪道儿的问题，平时谁会写这么多有问题的代码，当然这里面也有自己的原因，平时代码写的过于规范 ::(1@Baidu.png)。\r\n\r\n``` javascript\r\nconst f = () => {\r\n  console.log(\"1\");\r\n  setTimeout(() => {\r\n    console.log(\"2\");\r\n  }, 1000);\r\n  setTimeout(() => {\r\n    console.log(\"3\");\r\n  }, 0);\r\n  console.log(\"4\");\r\n};\r\n\r\nf();\r\n```\r\n\r\n![](http://www.cctv3.net/usr/uploads/2021/06/1266263059.gif)\r\n\r\n> 其实最后这个执行的效果还是比较明显的，先输出 1 4 3，然后间隔 1s 以后输出 2 ::(6@Wechat.png)。\r\n\r\n# 分析\r\n其实要搞明白这个问题，首先得搞明白 `同步任务` 和 `异步任务`，然后结合 `JS` 的执行机制这个问题就比较好解决了。\r\n\r\n`同步和异步` 不用我说，如果这个你都不知道就别搞前端了，回家卖红薯吧 ::(86@Alibaba.png)。\r\n\r\n![](http://www.cctv3.net/usr/uploads/2021/06/3392772529.png)\r\n\r\n{message type=\"success\"}1. 所有同步任务都在主线程上执行，形成一个执行栈( execution context stack )</br>2. 主线程之外，还存在一个 任务队列 ( task queue )。只要异步任务有了运行结果，就在 任务队列 之中放置一个事件。</br>3. 一旦执行栈中的所有同步任务执行完毕，系统就会读取任务队列，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。</br>4. 主线程不断重复上面的第三步。{/message}\r\n\r\n明白了这些，这个执行的过程就比较好解释了 ::(3@Baidu.png)。\r\n\r\n``` javascript\r\n1. console.log('1') 和 console.log('4') 是同步任务，最先放在主线程的执行栈里面运行\r\n2. setTimeout 是异步任务，被压在了任务队列里面\r\n3. 同步任务执行完毕，输出 1, 4\r\n4. 异步任务 setTimeout(() => {}, 0) 到了执行的时间，这个时候从任务队列里面取出来放到了执行栈里面，然后输出 3\r\n5. 又过了 1 秒钟，重复第四个过程，最后输出 4\r\n```\r\n\r\n# 其他问题\r\n> 前一段时间面试还有人问我为什么计时器执行的时间不精确，现在顺带着补充下 ::(11@Baidu.png)。\r\n\r\n其实之前说的很清楚了，也就是说我的 `JS` 是一个单线程的，只有任务栈里面的任务执行完了之后，才会去任务队列里面读取要执行的任务，也就是说如果我的某一个过程是同步的，但是执行时间特别长，比如说我写个菲波那切数列递归程序，大家都知道这个时间复杂度是很高的。那么即使这个过程中我的任务队列里面已经到了执行的时间，因为主线程被挂着，所以不会去读取任务队列，那么这个 `setTimeout` 就无法执行。\r\n\r\n简单的举个例子验证一下我的猜想 ::(37@Alibaba.png)。\r\n\r\n``` javascript\r\nconst f = (i) => {\r\n  return i <= 2 ? 1 : f(i - 1) + f(i - 2);\r\n};\r\n\r\nconsole.log(new Date(), \"Task stack is running\");\r\nsetTimeout(() => {\r\n  console.log(new Date(), \"Timer is called\");\r\n}, 1000);\r\nlet n = f(44);\r\nconsole.log(new Date(), \"f(44) = \", n);\r\n```\r\n\r\n![kpj7dn73.png](http://www.cctv3.net/usr/uploads/2021/06/1377186137.png)\r\n\r\n这个效果就比较明显了，也就是说我预期的就是程序运行一秒以后，计时器执行对应的逻辑，但是呢因为我搞了个递归，执行了 `7 秒钟` ::(17@Baidu.png)，这个时候就算是过了一秒了，但是我的主线程还在执行那个递归不会去读取任务队列。\r\n\r\n你再看，截图红框的部分，当我的递归执行完了之后，也就是说我的任务栈执行完了，他在 `0.001 秒` 之后执行的我的计时器，这个时候这个异步任务到了执行的时间才被压到任务栈，这也印证了我上述的猜想是正确的 ::(11@Wechat.png)。 ",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 28,
        "likeCount": 0
    },
    {
        "id": 32,
        "title": "Git / SourceTree 常见问题以及解决方案",
        "slug": "GitErros",
        "createTime": "2021-06-07 10:49:00",
        "updateTime": "2021-06-29 11:00:33",
        "message": "<!--markdown--># 前言\r\n使用 `GIT` 过程中总是出现各种各样的问题，遇见的坑多了就得拿起笔和小本本来记录下来了 ::(1@Wechat.png)。\r\n# 问题\r\n## The following untracked working tree files would be overwritten by checkout\r\n切换分支直接报错了，而且也没法储藏代码 ::(7@Baidu.png)。\r\n\r\n<img src=\"http://www.cctv3.net/usr/uploads/2021/06/3353786660.png\" width=\"50%\" />\r\n\r\n{message type=\"error\"}The following untracked working tree files would be overwritten by checkout{/message}\r\n\r\n\b搞明白 `git clean` 的参数\r\n\r\n``` shell\r\n-n 显示将要删除的文件和目录；\r\n-x 删除忽略文件已经对git来说不识别的文件\r\n-d 删除未被添加到git的路径中的文件\r\n-f 强制运行\r\n```\r\n\r\n然后切到分支下，运行命令即可搞定 ::(1@Baidu.png)。\r\n``` shell\r\ngit clean -d -fx\r\n```\r\n\r\n## LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443 \r\n\r\n``` shell\r\n[!] Error installing SDWebImage\r\n[!] /usr/bin/git clone https://github.com/SDWebImage/SDWebImage.git /var/folders/vq/nkpg03jj1kzdbvthm94_1sdc0000gn/T/d20210629-13372-1jqcgto --template= --single-branch --depth 1 --branch 5.11.1\r\n\r\nCloning into '/var/folders/vq/nkpg03jj1kzdbvthm94_1sdc0000gn/T/d20210629-13372-1jqcgto'...\r\nfatal: unable to access 'https://github.com/SDWebImage/SDWebImage.git/': LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443\r\n```\r\n\r\n因为我 科（ 翻 ）学（ 墙 ）上网了 ::(17@Baidu.png)，所以 `.bash_profile` 里面有终端的代理的相关配置，所以先把代理的相关配置 `# 注释掉`。然后重试 ::(9@Baidu.png)。\r\n\r\n\r\n{message type=\"info\"}如果重试还不行，就 pod install 多来几遍 ::(7@Baidu.png)。{/message}\r\n\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 27,
        "likeCount": 0
    },
    {
        "id": 33,
        "title": "Thinking in JavaScript -- 宏任务和微任务",
        "slug": "microTaskAndMacroTask",
        "createTime": "2021-06-10 11:24:00",
        "updateTime": "2021-06-10 12:38:33",
        "message": "<!--markdown--># 前言\r\n前面我们介绍过 `JS 运行机制`，研究了一下 `任务栈` 和 `任务队列`，但是其中异步任务还没有细分 ::(1@Wechat.png)。\r\n昨天面试又有人问到了 `宏任务` 和 `微任务`，我觉得还是有必要总结一下的 ::(6@Wechat.png)。\r\n> 毕竟每次面试都是查漏补缺的过程 ::(34@Baidu.png)。\r\n\r\n# 概念\r\n概念性的东西我不多说，执行的顺序肯定是优先执行 `微任务` 然后执行 `宏任务` ::(17@Baidu.png)。\r\n\r\n## 宏任务\r\n``` javascript\r\n1. 整体的 <script />\r\n2. setInterval(() => {}, 0)\r\n3. setTimeout(() => {}, 0)\r\n```\r\n## 微任务\r\n``` javascript\r\n1. Promise\r\n2. process.nextTick(() => {})\r\n```\r\n\r\n废话不多说 直接上代码来说明问题 ::(43@Alibaba.png)。\r\n\r\n``` javascript\r\nconsole.log(new Date(), 1, 'Task stack is running');\r\nsetTimeout(() => {\r\n    console.log(new Date(), 2, 'Parent timer is called');\r\n    new Promise((resolve, reject) => {\r\n        resolve();\r\n        console.log(new Date(), 3, 'Child Promise init');\r\n    }).then(() => {\r\n        console.log(new Date(), 4, 'Child Promise then')\r\n    })\r\n}, 0);\r\nnew Promise((resolve, reject) => {\r\n    resolve()\r\n    console.log(new Date(), 5, 'Parent Promise init');\r\n    setTimeout(() => {\r\n        console.log(new Date(), 6, 'Parent timer is called')\r\n    }, 0)\r\n}).then(() => {\r\n    console.log(new Date(), 7, 'Parent Promise then');\r\n})\r\nconsole.log(new Date(), 8, 'Task stack is empty')\r\n```\r\n\r\n看看执行的结果，我见过最变态的面试题也就这个难度了 ::(1@Baidu.png)。\r\n![kpqduaut.png](http://www.cctv3.net/usr/uploads/2021/06/686229484.png)\r\n\r\n\r\n{message type=\"success\"}注意一个细节，虽然 Promise 是微任务，但是他自身 ( 也就是 resolve() / reject() 之前 ) 是同步任务，.then() 才是微任务 ::(37@Alibaba.png)。{/message}\r\n\r\n有了这个再说一下执行顺序 ::(2@Alibaba.png)。\r\n\r\n``` javascript\r\n1. 执行同步任务: 输出 1 5 -- (Promise) 8，但是执行 5 的时候，里面的 setTimeout 被放到了任务队列里面\r\n2. 执行微任务: 外层 Promise.then() 输出 7\r\n3. 执行宏任务: 外层 setTimeout，输出 2\r\n4. 执行微任务: 内层 Promise.then() 输出 3 4\r\n5. 执行宏任务: 内层 setTimeout，输出 输出 6\r\n```\r\n\r\n执行结果是 15872346 ::(18@Alibaba.png)。\r\n\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 15,
        "likeCount": 0
    },
    {
        "id": 34,
        "title": "2021年 互联网薪酬职级对照表",
        "slug": "2021Salary",
        "createTime": "2021-06-10 12:30:00",
        "updateTime": "2021-06-16 08:18:37",
        "message": "<!--markdown-->![kprs38b3.png](http://www.cctv3.net/usr/uploads/2021/06/3619305638.png)",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 53,
        "likeCount": 0
    },
    {
        "id": 35,
        "title": "Thinking in JavaScript Array.reduce(  )",
        "slug": "arrayUseReduce",
        "createTime": "2021-06-15 21:31:00",
        "updateTime": "2021-06-15 22:34:09",
        "message": "<!--markdown--># 前言\r\n最近面试被问过两次了，之前用的不是很多，今天面试完了准备集中总结一下 ::(1@Baidu.png)。之前说过的数组扁平化理论上就是可以用 `[].reduce()` 来实现 ::(17@Baidu.png)。\r\n\r\n说说他的参数吧，今天看了看他的参数还挺复杂的，但是看着表面上还是比较实用的，我要递归用的东西他都有 ::(11@Wechat.png)。\r\n\r\n![kpy32984.png](http://www.cctv3.net/usr/uploads/2021/06/153684197.png)\r\n\r\n参数比较好理解吧，`previousValue currentValue currentIndex array` ::(2@Wechat.png)。\r\n\r\n但是经过我的总结，我觉得这四个参数改成 `result item index source` 能更好理解些 ::(1@Wechat.png)。\r\n\r\n# 示例\r\n## 数组扁平化\r\n\r\n递归的写法我就不说了，记得之前我应该总结过 ::(2@Alibaba.png)。\r\n``` javascript\r\nconst array = ['a', ['b', ['c', 'd'], 'e', 'f'], 'g', ['h', 'i']];\r\nconst tree = (array) => {\r\n    return array.reduce((result, item, index, source) => {\r\n        return result.concat(Array.isArray(item) ? tree(item) : item)\r\n    }, [])\r\n}\r\n\r\nconsole.log(tree(array))\r\n```\r\n\r\n{message type=\"success\"}代码比较好理解，也是递归的思路，如果当前的 item 是数组，就递归 ::(18@Alibaba.png)。{/message}\r\n\r\n![kpy3v4ur.png](http://www.cctv3.net/usr/uploads/2021/06/528444800.png)\r\n\r\n## 数组求和\r\n上面的扁平化数组都搞定了，这个就比较 easy 了吧 ::(13@Wechat.png)。\r\n\r\n``` javascript\r\nconst array = [1, 4, 3, 2, 5, 6];\r\nlet sum = array.reduce((result, item, index, array) => {\r\n    return result + item;\r\n}, 0);\r\n\r\nconsole.log(sum)\r\n```\r\n![kpy42xlg.png](http://www.cctv3.net/usr/uploads/2021/06/791349892.png)",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 10,
        "likeCount": 0
    },
    {
        "id": 36,
        "title": "PerfectOfficeReport.jpg",
        "slug": "PerfectOfficeReport-jpg",
        "createTime": "2021-06-16 08:21:58",
        "updateTime": "2021-06-16 08:21:58",
        "message": "a:5:{s:4:\"name\";s:23:\"PerfectOfficeReport.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2021/06/1333609109.jpg\";s:4:\"size\";i:386101;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}",
        "order": 4,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 0,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 0,
        "likeCount": 0
    },
    {
        "id": 37,
        "title": "优秀的工作报告应该这样儿写",
        "slug": "PerfectOfficeReport",
        "createTime": "2021-06-16 08:22:00",
        "updateTime": "2021-06-16 08:23:09",
        "message": "<!--markdown--># 前言\r\n我不生产优秀的工作报告，我只是优秀报告的 ~~搬运工~~ **白嫖工** ::(1@Baidu.png)。\r\n\r\n![](http://www.cctv3.net/usr/uploads/2021/06/1333609109.jpg)",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 2,
        "lookCount": 52,
        "likeCount": 0
    },
    {
        "id": 38,
        "title": "Top50CompaniesInChina.jpg",
        "slug": "Top50CompaniesInChina-jpg",
        "createTime": "2021-06-16 08:25:06",
        "updateTime": "2021-06-16 08:25:06",
        "message": "a:5:{s:4:\"name\";s:25:\"Top50CompaniesInChina.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2021/06/3474649757.jpg\";s:4:\"size\";i:589864;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}",
        "order": 1,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 0,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 0,
        "likeCount": 0
    },
    {
        "id": 39,
        "title": "全球中国公司市值 50 强",
        "slug": "Top50CompaniesInChina",
        "createTime": "2021-06-16 08:26:00",
        "updateTime": "2021-06-16 08:27:48",
        "message": "<!--markdown--># 前言\r\n基本的东西还是要了解一些的，也算是将来对于就业方向的一个参考 ::(2@Wechat.png)。\r\n\r\n![](http://www.cctv3.net/usr/uploads/2021/06/3474649757.jpg)",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 2,
        "lookCount": 43,
        "likeCount": 0
    },
    {
        "id": 40,
        "title": "VSCode prettier-vscode 代码格式化插件不起作用",
        "slug": "VSCodePrettier",
        "createTime": "2021-06-20 23:10:00",
        "updateTime": "2021-06-20 23:11:16",
        "message": "<!--markdown--># 前言\r\n我记得之前就遇见过这个问题 ::(7@Baidu.png)，当我晚上搞定了这个问题以后才知道，什么卸载重装什么重启全都扯犊子 ::(17@Baidu.png)。\r\n\r\n{message type=\"error\"}There is no formatter for 'javascript' files installed. 这尼玛还报错了 ::(22@Alibaba.png)。{/message}\r\n\r\n# 方案\r\n![kq5bkilg.png](http://www.cctv3.net/usr/uploads/2021/06/932038095.png)\r\n\r\n``` json\r\n{\r\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\r\n  \"[javascript]\": {\r\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\r\n  },\r\n  \"javascript.format.enable\": false\r\n}\r\n```\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 33,
        "likeCount": 0
    },
    {
        "id": 41,
        "title": "Package.json 配置 GIT 私有仓库",
        "slug": "PackageJSONUsingGithub",
        "createTime": "2021-06-26 07:33:00",
        "updateTime": "2021-07-01 15:30:23",
        "message": "<!--markdown--># 前言\r\n> 先扯点题外话，既然用 Github，就要使用开源协议，那么先来了解下各种开源协议是怎么回事儿 ::(1@Baidu.png)。\r\n\r\n![kqkl8m97.png](http://www.cctv3.net/usr/uploads/2021/07/1582299637.png)\r\n\r\n然后切入正题，确实是，在毕业这两年的前端开发过程中，确实有很多可以复用的组件库，之前可能只是简单的从别的项目把对应的代码 `CV` 过来，根本没有自己的组件库，正好最近回老家在火车上研究下前端的组件库 ::(5@Alibaba.png)。\r\n\r\n这样儿以后我也能直接在 `package.json` 里面直接使用自己的仓库 ::(17@Baidu.png)。\r\n\r\n# 配置\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 29,
        "likeCount": 0
    },
    {
        "id": 42,
        "title": "Thinking in JavaScript -- 闭包",
        "slug": "Closure",
        "createTime": "2021-06-26 21:19:00",
        "updateTime": "2021-06-28 10:58:08",
        "message": "<!--markdown--># 前言\r\n> 准备整理一下闭包的相关问题，其实闭包在实际开发里面可能用到的最多的就是用它写单例模式，因为变量不会丢失 ::(17@Baidu.png)。\r\n\r\n但是现在网上用 JS闭包 写单例模式写的乱七八糟，根本不是真正意义上的面向对象编程的单例模式，要么就是好歹凑合着写了个闭包缓存了个变量，根本就不能运行 ::(9@Baidu.png)，要不就只是实现了 `getInstance()`，但是里面的变量怎么修改还是没说明白 ::(7@Baidu.png)。麻烦你们抄别人的博客以前，自己先运行一下好吧 ::(17@Wechat.png)。\r\n\r\n![kqf0w0q8.png](http://www.cctv3.net/usr/uploads/2021/06/346981357.png)\r\n\r\n# 概念\r\n说下概念吧，整体来说闭包有三个特性\r\n\r\n- 函数嵌套函数\r\n\r\n- 函数内部可以引用函数外部的参数和变量\r\n\r\n- 参数和变量不会被垃圾回收机制回收 ( 这个才是重点 ::(1@Wechat.png) )\r\n\r\n## 代码\r\n\r\n~~之前写法比较 low，比如说修改 a、b、c，我可能会写三组 setA getA、setB getB、setC、getC~~，缓存的东西多了，代码看起来巨丑无比，而且更像是 CV 的代码 ::(11@Baidu.png)。\r\n\r\n{message type=\"success\"}其实用闭包可以这样儿搞，我在我的 Store 里面搞一个 StoreClass，他的内部维护了一个 {}，我通过闭包获取他的实例，那么就完成了一个单例模式 ::(11@Wechat.png)。具体的细节我已经注释了，自己慢慢看吧 ::(1@Baidu.png)。{/message}\r\n\r\n``` javascript\r\nvar Store = (function () {\r\n  var StoreClass = function () {};\r\n  StoreClass.prototype = {\r\n    constructor: StoreClass,\r\n    // 初始化 state\r\n    initState: function () {\r\n      this.state = {};\r\n    },\r\n    // 获取当前实例的 state\r\n    getState: function () {\r\n      return this.state;\r\n    },\r\n    // Get or set\r\n    set: function (key, value) {\r\n      this.state[key] = value;\r\n    },\r\n    get: function (key, defaultValue) {\r\n      // 如果 state 里面没有缓存，则缓存 state[key] = defaultValue\r\n      if (!this.state.hasOwnProperty(key)) {\r\n        this.set(key, defaultValue);\r\n      }\r\n      return this.state[key];\r\n    },\r\n  };\r\n\r\n  // StoreClass 实例\r\n  var instance = null;\r\n  return {\r\n    getInstance: function () {\r\n      if (instance == null) {\r\n        instance = new StoreClass();\r\n        // 对象被创建的时候，初始化 state = {}\r\n        instance.initState();\r\n      }\r\n      return instance;\r\n    },\r\n  };\r\n})();\r\n```\r\n\r\n## 测试\r\n\r\n``` javascript\r\n// 测试 store 和 _store 是否同一个实例\r\nlet store = Store.getInstance();\r\nlet _store = Store.getInstance();\r\nconsole.log(new Date(), \"测试 store 和 _store 是否同一个实例\");\r\nconsole.log(store == _store);\r\n\r\n// 测试 (_)store改变 state，另一个 !(_)store 是否会获取最新缓存的值\r\nstore.set(\"name\", \"陈桥驿站\");\r\nconsole.log(\r\n  new Date(),\r\n  \"测试 (_)store改变 state，另一个 !(_)store 是否会获取最新缓存的值\"\r\n);\r\nconsole.log(store.getState(), _store.getState());\r\n\r\n_store.set(\"id\", \"net.cctv3\");\r\nconsole.log(new Date());\r\nconsole.log(store.getState(), _store.getState());\r\n\r\n// 测试 state[key] 异常的情况\r\nconsole.log(new Date(), \"测试 state[key] 异常的情况\");\r\nconsole.log(store.get(\"names\", []), _store.get(\"name\"));\r\n\r\n// 测试在不同环境下获取闭包里面单例模式实例 store _store __store\r\nlet __store = Store.getInstance();\r\nconsole.log(\r\n  new Date(),\r\n  \"测试在不同环境下获取闭包里面单例模式实例 store _store __store\"\r\n);\r\nconsole.log(store.getState(), _store.getState(), __store.getState());\r\n```\r\n\r\n## 项目中如何使用\r\n\r\n``` javascript\r\nvar Store = (function () {\r\n  var StoreClass = function () {};\r\n  StoreClass.prototype = {\r\n    constructor: StoreClass,\r\n    // 初始化 state\r\n    initState: function () {\r\n      this.state = {};\r\n    },\r\n    // 获取当前实例的 state\r\n    getState: function () {\r\n      return this.state;\r\n    },\r\n    // Get or set\r\n    set: function (key, value) {\r\n      this.state[key] = value;\r\n    },\r\n    get: function (key, exceptionValue) {\r\n      // 如果 state 里面没有缓存，则缓存 state[key] = exceptionValue\r\n      if (!this.state.hasOwnProperty(key)) {\r\n        this.set(key, exceptionValue);\r\n      }\r\n      return this.state[key];\r\n    },\r\n  };\r\n\r\n  // StoreClass 实例\r\n  var instance = null;\r\n  return {\r\n    getInstance: function () {\r\n      if (instance == null) {\r\n        instance = new StoreClass();\r\n        // 对象被创建的时候，初始化 state = {}\r\n        instance.initState();\r\n      }\r\n      return instance;\r\n    },\r\n  };\r\n})();\r\n\r\nexport default Store;\r\n```\r\n\r\n``` javascript\r\nimport Store from '../../Store';\r\nconst store = Store.getInstance();\r\nstore.set('name', '张三');\r\n```\r\n\r\n或者简单点可以这样儿搞，我试了试也是可以的，反正这就是涉及到 JS 基础的东西了 ::(9@Wechat.png)。\r\n\r\n``` javascript\r\nconst store = Store.getInstance();\r\nexport default store;\r\n```\r\n\r\n``` javascript\r\nimport store from '../../Store';\r\nstore.set('name', '张三');\r\n```\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 6,
        "likeCount": 0
    },
    {
        "id": 43,
        "title": "Android 集成 阿里云消息推送 ( 华为手机描述 )",
        "slug": "AndroidAliPush",
        "createTime": "2021-07-01 15:14:00",
        "updateTime": "2021-07-01 19:36:08",
        "message": "# 前言\r\n最近公司的项目要上消息推送功能 ::(10@Wechat.png)，之前搞这个基本上都是 **进程保活**，这里面方法就多了，常见的有\r\n``` javascript\r\n1. 1像素保活法\r\n2. 双进程守护法\r\n```\r\n\r\n具体怎么用的，请自行百度，很长时间不做原生开发了，估计这些方法都不能用了 ::(1@Baidu.png)。\r\n\r\n<img src=\"http://www.cctv3.net/usr/uploads/2021/07/745033351.png\" alt=\"\" width=\"33%\" />\r\n\r\n这里我想说一下，其实不管是 `Android` 还是 `iOS`，他们都有自己的系统级的推送的渠道，我说的进程守护仅仅是应用层面自己做的，其实我们完全可以利用系统自身的推送渠道进行集成。那么我们就要去对应的不同手机的开发者官网上申请推送所需要的相关材料 ::(3@Wechat.png)。\r\n\r\n因为我来公司以前项目组就已经决定了使用阿里云，没办法，只能集成阿里云消息推送了 ::(17@Baidu.png)。\r\n\r\n# 准备工作\r\n## 注册 NotificationChannel\r\n\r\n> 自 Android 8.0（API Level 26）起，Android 推出了 NotificationChannel 机制，旨在对通知进行分类管理。如果用户 App 的 targetSdkVersion 大于等于26，且并未设置 NotificaitonChannel，那么创建的通知是不会弹出显示。\r\n\r\n什么华为的，阿里的官网都先不用看，先把基本的 `Android` 开发常识搞清楚了。别最后像我一样扯了半天犊子，就收到了通知就是不弹窗显示，这就尴尬了 ::(17@Wechat.png)。\r\n\r\n\r\n{message type=\"success\"}注意初始化 NotificationChannel 的工作请在 MainApplication 的 onCreate( ) 完成 ::(2@Wechat.png)。{/message}\r\n\r\n``` java\r\n// 自 Android 8.0（API Level 26）起，Android 推出了 NotificationChannel 机制，旨在对通知进行分类管理。\r\n// 如果用户 App 的 targetSdkVersion 大于等于26，且并未设置 NotificaitonChannel，那么创建的通知是不会弹出显示。\r\npublic void registerNotificationChannel() {\r\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n        NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\r\n        // 通知渠道的id\r\n        String id = \"19951006\";\r\n        // 用户可以看到的通知渠道的名字\r\n        CharSequence name = \"Test Native Push Title\";\r\n        // 用户可以看到的通知渠道的描述\r\n        String description = \"Test Native Push Message\";\r\n        int importance = NotificationManager.IMPORTANCE_HIGH;\r\n        NotificationChannel mChannel = new NotificationChannel(id, name, importance);\r\n        // 配置通知渠道的属性\r\n        mChannel.setDescription(description);\r\n        // 设置通知出现时的闪灯\r\n        mChannel.enableLights(true);\r\n        mChannel.setLightColor(Color.RED);\r\n        // 设置通知出现时的震动\r\n        mChannel.enableVibration(true);\r\n        mChannel.setVibrationPattern(new long[]{100, 200, 300, 400, 500, 400, 300, 200, 400});\r\n        // 最后在 notificationManager 中创建该通知渠道\r\n        mNotificationManager.createNotificationChannel(mChannel);\r\n    }\r\n}\r\n```\r\n\r\n## 注册华为云开发者平台\r\n这里面基本的东西，怎么创建项目，怎么弄 `AppID AppKey AppSecret` 我就不说了好吧，这个要是你还得等人教，就别开发 `Android` 了，回家卖红薯吧 ::(23@Wechat.png)。\r\n\r\n![kqkjuqc8.png](http://www.cctv3.net/usr/uploads/2021/07/3008255942.png)\r\n\r\n注意 `AppID` 和 `AppSecret`，一会儿要用 ::(1@Wechat.png)。\r\n\r\n## 注册阿里云\r\n这里面也是，基本的怎么创建项目什么的我就不啰嗦了，里面需要的东西刚才已经告诉你了 ::(2@Alibaba.png)。\r\n\r\n![kqkjyxdu.png](http://www.cctv3.net/usr/uploads/2021/07/3603566239.png)\r\n\r\n### 配置厂商渠道\r\n别的我不演示了，大同小异，这里我只以华为手机为例 ::(6@Wechat.png)。\r\n![kqkkzl6x.png](http://www.cctv3.net/usr/uploads/2021/07/1847360638.png)\r\n\r\n## Android Studio 配置\r\n### 下载阿里云配置文件\r\n下载阿里云的配置文件，放到项目的根目录里面 ::(18@Alibaba.png)。\r\n![kqktxsp4.png](http://www.cctv3.net/usr/uploads/2021/07/1056987707.png)\r\n![kqku0ns6.png](http://www.cctv3.net/usr/uploads/2021/07/108628353.png)\r\n\r\n### 配置 Maven 库\r\n\r\n``` shell\r\n// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        // Huawei Push\r\n        maven {\r\n            url 'https://developer.huawei.com/repo/'\r\n        }\r\n        // Ali Push\r\n        maven {\r\n            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'\r\n        }\r\n    }\r\n    dependencies {\r\n        classpath \"com.android.tools.build:gradle:4.1.1\"\r\n        // Huawei Push\r\n        classpath 'com.huawei.agconnect:agcp:1.4.2.300'\r\n        // Ali Push && 添加 emas-services 插件\r\n        classpath 'com.aliyun.ams:emas-services:1.0.1'\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        // Huawei Push\r\n        maven {\r\n            url 'https://developer.huawei.com/repo/'\r\n        }\r\n        // Ali Push\r\n        maven {\r\n            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'\r\n        }\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n\r\n```\r\n\r\n### 配置 gradle 依赖\r\n``` shell\r\nplugins {\r\n    id 'com.android.application'\r\n    // Huawei Push\r\n    id 'com.huawei.agconnect'\r\n    // Ali Push\r\n    id 'com.aliyun.ams.emas-services'\r\n}\r\n```\r\n\r\n``` shell\r\ndependencies {\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'com.google.android.material:material:1.1.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    // Huawei Push\r\n    implementation 'com.huawei.agconnect:agconnect-core:1.3.1.300'\r\n    implementation 'com.huawei.hms:push:5.3.0.301'\r\n    // Ali Push\r\n    implementation 'com.aliyun.ams:alicloud-android-push:3.4.0'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n}\r\n```\r\n\r\n### 配置权限\r\n``` xml\r\n<uses-permission android:name=\"android.permission.INTERNET\" />\r\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n<uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\r\n<uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n<uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\r\n<uses-permission android:name=\"android.permission.REORDER_TASKS\" />\r\n```\r\n\r\n### 配置 mate-data\r\n``` xml\r\n<meta-data\r\n    android:name=\"com.alibaba.app.appkey\"\r\n    android:value=\"******\" />\r\n<meta-data\r\n    android:name=\"com.alibaba.app.appsecret\"\r\n    android:value=\"****************\" />\r\n```\r\n\r\n### 配置 receiver\r\n``` xml\r\n<receiver\r\n    android:name=\".service.AliPushReceiver\"\r\n    android:exported=\"false\">\r\n    <intent-filter>\r\n        <action android:name=\"com.alibaba.push2.action.NOTIFICATION_OPENED\" />\r\n    </intent-filter>\r\n    <intent-filter>\r\n        <action android:name=\"com.alibaba.push2.action.NOTIFICATION_REMOVED\" />\r\n    </intent-filter>\r\n    <intent-filter>\r\n        <action android:name=\"com.alibaba.sdk.android.push.RECEIVE\" />\r\n    </intent-filter>\r\n</receiver>\r\n```\r\n\r\n# 使用\r\n## 编写 AliPushReceiver\r\n``` java\r\npackage net.cctv3.TestNativePush.service;\r\n\r\nimport android.content.Context;\r\nimport android.util.Log;\r\n\r\nimport com.alibaba.sdk.android.push.MessageReceiver;\r\nimport com.alibaba.sdk.android.push.notification.CPushMessage;\r\n\r\nimport java.util.Map;\r\n\r\npublic class AliPushReceiver extends MessageReceiver {\r\n    // 消息接收部分的LOG_TAG\r\n    public static final String REC_TAG = \"AliPushReceiver\";\r\n\r\n    @Override\r\n    public void onNotification(Context context, String title, String summary, Map<String, String> extraMap) {\r\n        // TODO 处理推送通知\r\n        Log.e(\"MyMessageReceiver\", \"Receive notification, title: \" + title + \", summary: \" + summary + \", extraMap: \" + extraMap);\r\n    }\r\n\r\n    @Override\r\n    public void onMessage(Context context, CPushMessage cPushMessage) {\r\n        Log.e(\"MyMessageReceiver\", \"onMessage, messageId: \" + cPushMessage.getMessageId() + \", title: \" + cPushMessage.getTitle() + \", content:\" + cPushMessage.getContent());\r\n    }\r\n\r\n    @Override\r\n    public void onNotificationOpened(Context context, String title, String summary, String extraMap) {\r\n        Log.e(\"MyMessageReceiver\", \"onNotificationOpened, title: \" + title + \", summary: \" + summary + \", extraMap:\" + extraMap);\r\n    }\r\n\r\n    @Override\r\n    protected void onNotificationClickedWithNoAction(Context context, String title, String summary, String extraMap) {\r\n        Log.e(\"MyMessageReceiver\", \"onNotificationClickedWithNoAction, title: \" + title + \", summary: \" + summary + \", extraMap:\" + extraMap);\r\n    }\r\n\r\n    @Override\r\n    protected void onNotificationReceivedInApp(Context context, String title, String summary, Map<String, String> extraMap, int openType, String openActivity, String openUrl) {\r\n        Log.e(\"MyMessageReceiver\", \"onNotificationReceivedInApp, title: \" + title + \", summary: \" + summary + \", extraMap:\" + extraMap + \", openType:\" + openType + \", openActivity:\" + openActivity + \", openUrl:\" + openUrl);\r\n    }\r\n\r\n    @Override\r\n    protected void onNotificationRemoved(Context context, String messageId) {\r\n        Log.e(\"MyMessageReceiver\", \"onNotificationRemoved\");\r\n    }\r\n}\r\n```\r\n\r\n## 测试\r\n这个时候就可以去测试了 ::(11@Wechat.png)。\r\n\r\n![kqkkcv33.png](http://www.cctv3.net/usr/uploads/2021/07/20612450.png)\r\n\r\n{message type=\"success\"}注意下面高级选项，Android 8.0 以上需要消息通道，也就是我在最开始的准备工作里面强调的，保持一致就可以了 ::(2@Wechat.png)。{/message}\r\n\r\n<img src=\"http://www.cctv3.net/usr/uploads/2021/07/114747542.png\" alt=\"\" width=\"33%\" />\r\n\r\n最后我们看看时间，15:07 没毛病吧 ::(11@Wechat.png)::(11@Wechat.png)::(11@Wechat.png)::(11@Wechat.png)::(11@Wechat.png)::(11@Wechat.png)。\r\n\r\n![kqkl449v.png](http://www.cctv3.net/usr/uploads/2021/07/4138691466.png)\r\n\r\n到此为止老司机带你到达目的地，请安全下车 ::(2@Wechat.png)。\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 2,
        "lookCount": 50,
        "likeCount": 0
    },
    {
        "id": 44,
        "title": "macOS 常用控制台命令整理",
        "slug": "macOS",
        "createTime": "2021-09-03 15:32:00",
        "updateTime": "2021-09-18 11:00:46",
        "message": "<!--markdown--># scrcpy\r\n## Android 投屏\r\n小米2s正常，OPPO r15直接报错了 ::(10@Wechat.png)。\r\n``` java\r\n2021-09-03 14:44:55.269 scrcpy[10474:215424] INFO: scrcpy 1.18 <https://github.com/Genymobile/scrcpy>\r\n/usr/local/Cellar/scrcpy/1.18/share/sc...ped. 48.7 MB/s (37330 bytes in 0.001s)\r\n[server] INFO: Device: OPPO PACM00 (Android 8.1.0)\r\n2021-09-03 14:44:55.898 scrcpy[10474:215424] INFO: Renderer: metal\r\n2021-09-03 14:44:55.902 scrcpy[10474:215424] INFO: Initial texture: 1080x2280\r\n[server] ERROR: Exception on thread Thread[main,5,main]\r\njava.lang.IllegalStateException\r\n\tat android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)\r\n\tat android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2637)\r\n\tat com.genymobile.scrcpy.ScreenEncoder.encode(ScreenEncoder.java:114)\r\n\tat com.genymobile.scrcpy.ScreenEncoder.internalStreamScreen(ScreenEncoder.java:95)\r\n\tat com.genymobile.scrcpy.ScreenEncoder.streamScreen(ScreenEncoder.java:61)\r\n\tat com.genymobile.scrcpy.Server.scrcpy(Server.java:80)\r\n\tat com.genymobile.scrcpy.Server.main(Server.java:255)\r\n\tat com.android.internal.os.RuntimeInit.nativeFinishInit(Native Method)\r\n\tat com.android.internal.os.RuntimeInit.main(RuntimeInit.java:361)\r\n2021-09-03 14:44:56.265 scrcpy[10474:215424] WARN: Device disconnected\r\n2021-09-03 14:44:56.265 scrcpy[10474:215424] WARN: Killing the server...\r\n```\r\n\r\n{message type=\"warning\"}- m 1920 是为了防止 macOS 报错 ::(1@Baidu.png)。{/message}\r\n\r\n\r\n``` shell\r\nscrcpy --always-on-top -m 1920 --window-title \"OPPO r15\"\r\n```\r\n\r\n# 计算器\r\n\r\n> qalculate-gtk 这波儿操作很强 ::(10@Wechat.png)。\r\n\r\n# 日历\r\n\r\n> calcurse \r\n\r\n![ktp7ala8.png](http://www.cctv3.net/usr/uploads/2021/09/1640880897.png)\r\n\r\n# 查看系统信息\r\n\r\n> neofetch\r\n\r\n![ktp7brmp.png](http://www.cctv3.net/usr/uploads/2021/09/1030319672.png)\r\n\r\n# GitHub\r\n\r\n> lazygit\r\n\r\n![ktp77h8o.png](http://www.cctv3.net/usr/uploads/2021/09/621289436.png)",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 30,
        "likeCount": 0
    },
    {
        "id": 45,
        "title": "React Native iOS build : Can't find node",
        "slug": "iOSBuildCannotFindNode",
        "createTime": "2021-09-12 19:37:03",
        "updateTime": "2021-09-12 19:37:03",
        "message": "<!--markdown--># 前言\r\n前几天电脑的 `iOS` 开发环境出问题了，无奈之下干脆恢复出厂设置了 ::(22@Alibaba.png)。\r\n\r\n之前那个错误基本上可以断定是 `node` 出问题了，因为我系统里面的 `Node` 是下载的安装包。\r\n\r\n\r\n{message type=\"success\"}后来才知道科学的方式应该是用 nvm，因为一台机器里面可能会有多个 Node 版本的环境。关于 nvm 介绍我将以后有时间再写文章记录 ::(1@Baidu.png)。{/message}\r\n\r\n接下来介绍的这个错误也是基于 nvm 安装的 `Node` 出的问题，而且编译的时候 `Android Studio` 和 `Xcode` 都会出问题 ::(7@Baidu.png)。\r\n\r\n``` shell\r\nerror: Can't find 'node' binary to build React Native bundle If you have non-standard nodejs installation, select your project in Xcode, find 'Build Phases' - 'Bundle React Native code and images' and change NODE_BINARY to absolute path to your node executable (you can find it by invoking 'which node' in the terminal)\r\n```\r\n\r\n# 方案\r\n我简单的找了两个有用的链接，解决了我的问题 ::(17@Baidu.png)。\r\n\r\n## GitHub\r\n\r\nhttps://github.com/facebook/react-native/issues/22918\r\n![kth52xn0.png](http://www.cctv3.net/usr/uploads/2021/09/2895750470.png)\r\n\r\n## StackOverflow\r\nhttps://stackoverflow.com/questions/44492197/react-native-ios-build-cant-find-node/50419734#50419734\r\n\r\n![kth56p8v.png](http://www.cctv3.net/usr/uploads/2021/09/4205350564.png)\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 21,
        "likeCount": 0
    },
    {
        "id": 46,
        "title": "unable to resolve dependency tree",
        "slug": "unable2ResolveDependencyTree",
        "createTime": "2021-09-15 15:28:14",
        "updateTime": "2021-09-15 15:28:14",
        "message": "<!--markdown--># 前言\r\n\r\n> 前几天 Node 刚升级了，现在一 npm install 就各种报错 ::(1@Wechat.png)。\r\n\r\n``` shell\r\nnpm ERR! Fix the upstream dependency conflict, or retry\r\nnpm ERR! this command with --force, or --legacy-peer-deps\r\nnpm ERR! to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm ERR!\r\nnpm ERR! See /Users/net.cctv3.i/.npm/eresolve-report.txt for a full report.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /Users/net.cctv3.i/.npm/_logs/2021-09-15T07_16_44_093Z-debug.log\r\n```\r\n\r\n# 方案\r\n上面不是说了吗，人家让在后面加上 `--legacy-peer-deps` ::(10@Wechat.png)。\r\n\r\n{message type=\"success\"}npm install xxx --legacy-peer-deps 搞定 ::(2@Wechat.png)。{/message}\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 26,
        "likeCount": 0
    },
    {
        "id": 47,
        "title": "CocoaPods could not find compatible versions for pod &quot;React/Core&quot;",
        "slug": "CocoaPodsNotFoundReactCore",
        "createTime": "2021-10-19 17:47:00",
        "updateTime": "2021-10-19 17:48:12",
        "message": "<!--markdown--># 前言\r\n\r\n> 安装 react-native-fetch-blob 的时候报错了 ::(7@Baidu.png)。\r\n\r\n``` shell\r\n[!] CocoaPods could not find compatible versions for pod \"React/Core\":\r\n  In Podfile:\r\n    react-native-fetch-blob (from `../node_modules/react-native-fetch-blob`) was resolved to 0.10.6, which depends on\r\n      React/Core\r\n\r\nNone of your spec sources contain a spec satisfying the dependency: `React/Core`.\r\n\r\nYou have either:\r\n * mistyped the name or version.\r\n * not added the source repo that hosts the Podspec to your Podfile.\r\n```\r\n\r\n# 解决\r\n\r\n切换到项目根目录，然后运行以下命令就 Ok 了 ::(1@Baidu.png)。\r\n\r\n\r\n{message type=\"success\"}grep -rl \"s.dependency 'React/Core'\" node_modules/ | xargs sed -i '' 's=React/Core=React-Core=g'{/message}\r\n\r\n\r\n",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 15,
        "likeCount": 0
    },
    {
        "id": 48,
        "title": "TypeScript + React 父组件调用子组件的方法",
        "slug": "TypeScriptParentUseChildFunction",
        "createTime": "2021-11-12 14:20:00",
        "updateTime": "2021-11-12 14:21:08",
        "message": "<!--markdown--># 前言\r\n这种场景用的不是很多，如果仅仅是 `JS` 就不用这么麻烦了，但是 `TS` 卡里面坑很多，研究了半天终于不报错了 ::(1@Wechat.png)。\r\n\r\n# 代码\r\n## Child.tsx\r\n``` ts\r\nimport React, {useImperativeHandle} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nexport interface ChildProps {}\r\ntype ChildHandle = {\r\n  f: () => void;\r\n};\r\n\r\nconst Child: React.ForwardRefRenderFunction<ChildHandle, ChildProps> = (\r\n  props,\r\n  ref,\r\n) => {\r\n  useImperativeHandle(ref, () => ({\r\n    f: () => {},\r\n  }));\r\n  return <View />;\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default React.forwardRef(Child);\r\n```\r\n\r\n## Parent.tsx\r\n``` ts\r\nimport React, {useEffect, useImperativeHandle} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport Child from './Child';\r\n\r\ninterface ParentProps {}\r\n\r\nconst Parent: React.FC<ParentProps> = () => {\r\n  type ChilHandle = React.ElementRef<typeof Child>;\r\n  const child = React.useRef<ChilHandle>(null);\r\n  useEffect(() => {\r\n    child.current.f();\r\n    return () => {};\r\n  }, []);\r\n  return <Child ref={child} />;\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default Parent;\r\n```",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 7,
        "likeCount": 1
    },
    {
        "id": 49,
        "title": "react-native-config",
        "slug": "ReactNativeConfig",
        "createTime": "2021-12-10 13:55:00",
        "updateTime": "2021-12-10 13:55:53",
        "message": "<!--markdown--># 前言\r\n之前的环境管理不是很规范，所有区分环境的操作还是手动进行的，每次打包的时候手动去代码里面改一下环境的参数 ::(6@Wechat.png)。显然这样儿是不科学的 ::(10@Wechat.png)。\r\n\r\n# 使用\r\n\r\n## Android Studio 打包\r\n好像 `react-native-config` 默认使用的是 `.env` 的变量，但是假设你这里面配的是 `生产环境`，但是你想打包 `测试环境`，那么你就要通过明令修改参数。\r\n\r\n我们不妨借鉴一下下面这个问题：\r\n\r\n[How to Assemble Production Release with gradlew?](https://github.com/luggit/react-native-config/issues/40)\r\n\r\n![kwzz4p8o.png](http://www.cctv3.net/usr/uploads/2021/12/992258457.png)\r\n\r\n于是乎，有了以下命令：\r\n\r\n``` shell\r\nexport ENVFILE=.env.dev && cd android && ./gradlew assembleDebug\r\n```",
        "order": 0,
        "status": 1,
        "password": null,
        "images": null,
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 0,
        "lookCount": 5,
        "likeCount": 0
    },
    {
        "id": 50,
        "title": "养鸡历史历来收益最高的一天",
        "slug": "Timers",
        "createTime": "2021-12-09 07:43:23",
        "updateTime": "2021-12-09 07:43:23",
        "message": "新版博客时光的第一篇文章，就巴一下前几天的收益吧😄。",
        "order": 0,
        "status": 1,
        "password": null,
        "images": "Timers@2021-12-19@204232.jpg",
        "allowComment": 1,
        "allowPing": 1,
        "allowFeed": 1,
        "discussCount": 1,
        "lookCount": 0,
        "likeCount": 0
    }
]